.\" -*- nroff -*-
.\" Copyright 1993, 1994, 1995 by Theodore Ts'o.  All Rights Reserved.
.\" This file may be copied under the terms of the GNU Public License.
.\" 
.\" Japanese Version Copyright 1998 by MATSUMOTO Shoji. All Rights Reserved.
.\" Translated Wed Mar Wed Mar 11 05:54:50 JST 1998 by MATSUMOTO Shoji.
.\" Updated Sat 23 Oct 1999 by NAKANO Takeo <nakano@apm.seikei.ac.jp>
.\" Updated Tue 16 Nov 1999 by NAKANO Takeo
.\" Updated & Modified Sun Sep  2 23:23:05 JST 2001
.\"         by Yuichi SATO <ysato@h4.dion.ne.jp>
.\" Updated Sat 5 Oct 2002 by NAKANO Takeo
.\" Updated & Modified Sat Apr 17 03:04:33 JST 2004
.\"         by Yuichi SATO <ysato444@yahoo.co.jp>
.\" Updated & Modified Tue May  3 05:59:27 JST 2005 by Yuichi SATO
.\" 
.\"WORD:	exit code	返り値
.\"WORD:	bit-wise OR	ビットごとの OR
.\"WORD:	front-end	フロントエンド
.\"WORD:	manual pages	マニュアル
.\"WORD:	interactive mode インタラクティブ(対話)モード
.\"WORD:	verbose		詳細な
.\"WORD:	serially	逐次的に
.\" 
.TH FSCK 8 "May 2006" "E2fsprogs version 1.39"
.SH 名前
fsck \- Linux ファイルシステムのチェックと修復を行う
.SH 書式
.B fsck
[
.B \-sAVRTNP
]
[
.B \-C
[
.I fd
]
]
[
.B \-t
.I fstype
] 
.I [filesys ... ]
[\-\-] [
.B fs-specific-options
]
.SH 説明
.B fsck
は (ひとつまたは複数の) Linux ファイルシステムをチェックし、
また指定すれば修復も行う。
.I filesys
に指定できるのは、デバイス名 (例:
.IR /dev/hda1 ", " /dev/sdb2 )、
ファイルシステムのマウントポイント (例:
.IR / ", " /usr ", " /home )、
ext2 ラベルまたは UUID 指定
(例: UUID=8868abf6-88c5-4a83-98b8-bfc24057f7bd, LABEL=root)
である。
通常
.B fsck
は、
物理的に異なるディスク上にある複数のファイルシステムを並列的にチェックし、
全ファイルシステムのチェックに要する時間を短縮しようとする。
.PP
コマンドラインからファイルシステムがひとつも指定されず、かつ
.B \-A
オプションも指定されなかった場合は、
.B fsck
はデフォルトの動作として
.B /etc/fstab
に書かれているファイルシステムを逐次的にチェックする。
これは
.B \-As
オプションを指定した場合の動作と同じである。
.PP
.B fsck
の返り値は、以下の状態を表す数の和となる。
.br
\	0\	\-\ エラーなし
.br
\	1\	\-\ ファイルシステムのエラーが修正された
.br
\	2\	\-\ システムをリブートする必要がある
.br
\	4\	\-\ ファイルシステムのエラーが修正されないまま
.br
\	\	\ \ 残っている
.br
\	8\	\-\ 操作エラー
.br
\	16\	\-\ 利用法・文法のエラー
.br
\	32\	\-\ fsck がユーザ要求によってキャンセルされた
.br
\	128\	\-\ 共有ライブラリのエラー
.br
複数のファイルシステムをチェックした場合の返り値は、
チェックした各ファイルシステムの返り値に対して、
ビットごとの OR をとったものになる。
.PP
.B fsck
は、実際には Linux で利用できるさまざまなファイルシステムチェッカー
(\fBfsck\fR.\fIfstype\fR) への単なるフロントエンドにすぎない。
ファイルシステム固有のチェッカーは、
.IR /sbin ", " /sbin/fs.d ", " /sbin/fs ", " /etc/fs ", " /etc ,
環境変数 PATH 内のディレクトリの順にサーチされる。
詳細はファイルシステム固有のチェッカーのマニュアルを参照すること。
.SH オプション
.TP
.B \-s
.B fsck
の動作を逐次的にする。
複数のファイルシステムを
インタラクティブ (対話) モードでチェックする際に有用。
(注意: デフォルトでは
.BR e2fsck (8)
の動作は対話モードである。
.BR e2fsck (8)
を非対話モードで動作させるには、
.B \-p
オプションか
.B \-a
オプションを使用する。また非対話的にエラーを自動修復させたい場合は
.B \-n
オプションを利用する。)
.TP
.BI \-t " fslist"
チェックするファイルシステムのタイプを指定する。
.B \-A 
オプションが指定されている場合は、
.I fslist
にマッチするファイルシステムのみをチェックする。
.I fslist
パラメータは、コンマで区切られた
ファイルシステムとオプション指定のリストである。
このコンマ区切りのリストに含まれるファイルシステムのすべてに、
否定演算子
.RB ' no '
または
.RB ' ! '
を前置することもできる。
これにより、
.I fslist
にリストされていないファイルシステムだけがチェックされる。
.I fslist
のファイルシステムすべてに否定演算子が付けられていない場合は、
.I fslist
にリストされているファイルシステムのみがチェックされる。
(訳註: リストの一部だけに否定演算子を付けることはできない)
.sp
オプション指定をコンマで区切った形で
.I fslist
に含めても良い。
これらは
.BI opts= fs-option\fR
という書式でなければならない。
オプション指定が存在すると、
.B /etc/fstab
のマウントオプションのフィールドに
.I fs-option
があるファイルシステムのみがチェックされる。
オプション指定の前に否定演算子がある場合は、
.B /etc/fstab
のマウントオプションのフィールドに
.I fs-option
がないファイルシステムのみがチェックされる。
.sp
例えば、
.B opts=ro
を
.I fslist
に指定すると、
.B /etc/fstab
にリストされているファイルシステムのうち、
.B ro
オプションを持つものだけがチェックされる。
.sp
.B fsck
プログラムへの非公式なユーザインターフェース変更に
依存したブートスクリプトを使っている
Mandrake ディストリビューションとの互換性のため、
.I fslist
にファイルシステムタイプ
.B loop
があった場合、
.B \-t
オプションの引き数として
.B opts=loop
が指定されていると仮定する。
.sp
通常ファイルシステムのタイプは、
.I filesys
を
.I /etc/fstab
ファイルから検索して見つかったエントリから取得する。
ファイルシステムのタイプが取得できず、
かつ 1 つのファイルシステムだけが
.B \-t
オプションの引き数になっている場合、
.B fsck
はそれを利用する。
指定してあるファイルシステムタイプを利用できない場合は、
デフォルトのファイルシステムタイプ (現時点では ext2) を利用する。
.TP
.B \-A
.I /etc/fstab
に列記されているファイルシステムをすべてチェックする。
このオプションを用いれば、複数のファイルシステムに対して
fsck をひとつひとつ単独で実行しなくてもよいため、
システムの初期設定ファイルである 
.I /etc/rc
中でよく利用される。
.sp
.B \-P
オプション (後述) が指定されていなければ、
ルートファイルシステムが最初にチェックされる。その後、
.I /etc/fstab
ファイルの第 6 フィールドである
.I fs_passno
の順序にしたがって他のファイルシステムがチェックされる。
.I fs_passno
の値が 0 であるファイルシステムは、スキップされて一切チェックされない。
.I fs_passno
の値が 0 より大きいファイルシステムは、小さい
.I fs_passno 
値を持ったものを優先し、順番にチェックされる。
同じ番号が指定されているファイルシステムが複数ある場合には、
fsck はそれらを並列してチェックしようとする。
しかし同じ物理ディスクにあるファイルシステムの同時チェックは避ける。
.sp
したがって、
.I /etc/fstab
に対する最も普通の設定は、ルートファイルシステムの
.I fs_passno
を 1 とし、他のすべてのファイルシステムの
.I fs_passno
を 2 とするものである。こうすると
.B fsck
は、(効果が期待できる場合には) 自動的にファイルシステムチェッカーを
同時に並列して動作させる。
何らかの理由で複数ファイルシステムの
並列チェックをしたくない場合には、システム管理者はこの設定をしてはいけない。
たとえばマシンのメモリが少なく、余分なページングが
問題になる場合などがこれにあたる。
.TP
.B \-C\fR [ \fI "fd" \fR ]
作業完了分・残り分の棒グラフをサポートしている
ファイルシステムチェッカー (現在 ext2 と ext3 用のものだけ) に、
表示を行わせる。
fsck は一度にひとつのチェッカーだけが表示を行うように、
複数のチェッカーを管理する。
GUI フロントエンドにはファイルディスクリプタ
.I fd
を指定することができる。
この場合、棒グラフの情報はファイルディスクリプタに送られる。
.TP
.B \-N
実際には実行せず、何が行われるかだけを表示する。
.TP
.B \-P
.B \-A
オプションが指定されている場合、
ルートファイルシステムを他のファイルシステムと並列にチェックする。
ルートファイルシステムが壊れている場合には
.BR e2fsck (8)
自体が壊れている可能性もあるため、
このオプションを用いるのは安全性を損なうことになる。
このオプションは、
ルートファイルシステムを小さくコンパクトなパーティションに切りなおしたくない
システム管理者向けのオプションである
(ルートファイルシステムを小さくコンパクトにまとめるのが正しい解なのだが)。
.TP
.B \-R
.B \-A
オプションを用いて全てのファイルシステムをチェックする際に、
ルートファイルシステムをチェックしないようにする
(ルートファイルシステムがすでに read/write でマウントされている場合)。
.TP
.B \-T
起動時にタイトルを表示しない。
.TP
.B \-V
.B fsck
から起動されるシステム固有のコマンドを含め、詳細な表示をする。
.TP
.B fs-specific-options
.B fsck
が理解しないオプションは、ファイルシステム固有のチェッカーに渡される。
これらのオプションは引き数をとっては\fBならない\fR。
なぜなら、どのオプションが引き数をとるか (とらないか) を
.B fsck
が正しく判断できる方法がないためである。
.IP
.B \-\-
以降に指定したオプションと引き数は、ファイルシステム固有のオプションとして
ファイルシステム固有のチェッカーに渡される。
.IP
fsck は任意の複雑なオプションをファイルシステム固有のチェッカーに渡すようには
設計されていない点に注意すること。
複雑なことをやろうとするときは、
ファイルシステム固有のチェッカーを直接実行してほしい。
非常に複雑なオプションと引き数を
.B fsck
に渡した場合に、期待した動作をしなかったとしても、
\fBバグとして報告するには及ばない\fR。
.B fsck
にやらせるべきではないことを、あなたがやったのだから。
.PP
ファイルシステム固有の fsck のオプションは、標準化されていない。
確かでない場合は、ファイルシステム固有のチェッカーの
man ページを調べること。
保証されたものではないが、以下のオプションは
ほとんどのファイルシステムチェッカーでサポートされている。
.TP
.B \-a
質問なしで自動的にファイルシステムを修復する
(このオプションの使用には注意を要する)。
ほとんどのファイルシステムチェッカーは
.B \-a
オプションに対応しているが、
.BR e2fsck (8)
においては
.B \-a 
オプションは過去互換性のために準備されているだけである。
したがって
.B e2fsck
では、このオプションは (安全に利用できる)
.B \-p
オプションにマップされ、
いくつかのフィルシステムチェッカーがサポートしている
.B \-a
にはマップされない。
.TP
.B \-n
ファイルシステム固有のチェッカーの中には、
.B \-n
オプションが指定されると、
問題点を修復するのではなく、その問題点を単に標準出力に書き出すものもある。
しかし全てのファイルシステム固有のチェッカーが、
このような動作をするわけではない。
特に
.BR fsck.reiserfs (8)
は、このオプションが指定されても破損箇所を報告しない。
また
.BR fsck.minix (8)
は、
.B \-n 
オプションを全くサポートしていない。
.TP
.B \-r
対話的にファイルシステムを修復する (確認を求める)。
注意: fsck が並列に動作している場合にこのオプションを利用するのは
あまり賢いとはいえない。
.B e2fsck
においては並列動作がデフォルトであり、
このオプションは過去互換性のためにのみ準備されている。
.TP
.B \-y
ファイルシステム固有のチェッカーの中には、
.B \-y 
オプションが指定されると、検出されたファイルシステムの破損箇所を
常に自動的に修復しようとするものもある。
エキスパートは、より上手に fsck を手動で実行させることができる場合もある。
全てのファイルシステム固有のチェッカーが、
このオプションを実装しているわけではない点に注意すること。
この man ページを書いている時点では、特に
.BR fsck.minix (8)
と
.BR fsck.cramfs (8)
は
.B -y
オプションをサポートしていない。
.SH 著者
Theodore Ts'o (tytso@mit.edu)
.SH ファイル
.I /etc/fstab
.SH 環境変数
.B fsck
プログラムの振舞いは、以下の環境変数による影響を受ける。
.TP
.B FSCK_FORCE_ALL_PARALLEL
この環境変数が設定されていると、
.B fsck
は指定されたファイルシステムすべてを、
それらのファイルシステムが同じデバイス上にあるように見えるかどうかを問わず、
並列にチェックしようとする。
(これは IBM や EMC などの会社から販売されているような、
RAID システムやハイエンドのストレージシステムで有用である。)
.TP
.B FSCK_MAX_INST
この環境変数は、同時に動作するファイルシステムチェッカーの最大数を制限する。
この指定を行えば、多数のディスクを備えたシステムにおいて
.B fsck
がたくさんのファイルシステムチェッカーを同時に起動し、
システムで利用できる CPU やメモリなどの資源に
過度の負荷を与えてしまうことを避けることができる。
この値を 0 にすると、spawn するプロセス数の制限がなくなる。
現在はこれがデフォルトだが、
.B fsck
の将来の版では、OS からアカウンティングデータを取得することにより、
同時に行うファイルシステムチェックの数を自動的に決めるようになるかもしれない。
.TP
.B PATH
.B PATH
環境変数はファイルシステムチェッカーを探索する際に用いられる。
まず最初に、一連のシステムディレクトリが検索される。これらは
.BR /sbin ,
.BR /sbin/fs.d ,
.BR  /sbin/fs ,
.BR /etc/fs ,
.B /etc
である。これに続いて
.B PATH
環境変数に指定されたディレクトリ群が検索される。
.TP
.B FSTAB_FILE
この環境変数を用いると、システム管理者は
.B /etc/fstab
ファイルの標準的な置場所を変更できる。
これは
.B fsck
のテストを行う開発者にとっても便利である。
.SH 関連項目
.BR fstab (5),
.BR mkfs (8),
.BR fsck.ext2 (8)
または
.BR fsck.ext3 (8)
または
.BR e2fsck (8),
.BR cramfsck (8),
.BR fsck.minix (8),
.BR fsck.msdos (8),
.BR fsck.jfs (8),
.BR fsck.nfs (8),
.BR fsck.vfat (8),
.BR fsck.xfs (8),
.BR fsck.xiafs (8),
.BR reiserfsck (8).
