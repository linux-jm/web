.\" -*- nroff -*-
.\" Copyright 1993, 1994, 1995 by Theodore Ts'o.  All Rights Reserved.
.\" This file may be copied under the terms of the GNU Public License.
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\" 
.\" Japanese Version Copyright 1998 by MATSUMOTO Shoji. All Rights Reserved.
.\" Translated Wed Mar Wed Mar 11 05:54:50 JST 1998 by MATSUMOTO Shoji.
.\" Updated Sat 23 Oct 1999 by NAKANO Takeo <nakano@apm.seikei.ac.jp>
.\" Updated Tue 16 Nov 1999 by NAKANO Takeo
.\" Updated & Modified Sun Sep  2 23:23:05 JST 2001
.\"         by Yuichi SATO <ysato@h4.dion.ne.jp>
.\" Updated Sat 5 Oct 2002 by NAKANO Takeo
.\" Updated & Modified Sat Apr 17 03:04:33 JST 2004
.\"         by Yuichi SATO <ysato444@yahoo.co.jp>
.\" Updated & Modified Tue May  3 05:59:27 JST 2005 by Yuichi SATO
.\"
.TH FSCK 8 "February 2012" "E2fsprogs version 1.42.1" 
.SH 名前
fsck \- Linux ファイルシステムのチェックと修復を行う
.SH 書式
\fBfsck\fP [ \fB\-sAVRTMNP\fP ] [ \fB\-C\fP [ \fIfd\fP ] ] [ \fB\-t\fP \fIfstype\fP ] \fI[filesys
\&... ]\fP [\-\-] [ \fBfs\-specific\-options\fP ]
.SH 説明
\fBfsck\fP は (ひとつまたは複数の) Linux ファイルシステムをチェックし、 また指定すれば修復も行う。 \fIfilesys\fP
に指定できるのは、デバイス名 (例: \fI/dev/hda1\fP, \fI/dev/sdb2\fP)、 ファイルシステムのマウントポイント (例: \fI/\fP,
\fI/usr\fP, \fI/home\fP)、 ext2 ラベルまたは UUID 指定 (例:
UUID=8868abf6\-88c5\-4a83\-98b8\-bfc24057f7bd, LABEL=root)  である。 通常 \fBfsck\fP は、
物理的に異なるディスク上にある複数のファイルシステムを並列的にチェックし、 全ファイルシステムのチェックに要する時間を短縮しようとする。
.PP
コマンドラインからファイルシステムがひとつも指定されず、かつ \fB\-A\fP オプションも指定されなかった場合は、 \fBfsck\fP はデフォルトの動作として
\fB/etc/fstab\fP に書かれているファイルシステムを逐次的にチェックする。 これは \fB\-As\fP オプションを指定した場合の動作と同じである。
.PP
\fBfsck\fP の返り値は、以下の状態を表す数の和となる。
.br
\	0\	\-\ エラーなし
.br
\	1\	\-\ ファイルシステムのエラーが修正された
.br
\	2\	\-\ システムをリブートする必要がある
.br
\	4\	\-\ ファイルシステムのエラーが修正されないまま残っている
.br
\	8\	\-\ 操作エラー
.br
\	16\	\-\ 利用法・文法のエラー
.br
\	32\	\-\ fsck がユーザ要求によってキャンセルされた
.br
\	128\	\-\ 共有ライブラリのエラー
.br
複数のファイルシステムをチェックした場合の返り値は、 チェックした各ファイルシステムの返り値に対して、 ビットごとの OR をとったものになる。
.PP
\fBfsck\fP は、実際には Linux で利用できるさまざまなファイルシステムチェッカー (\fBfsck\fP.\fIfstype\fP)
への単なるフロントエンドにすぎない。 ファイルシステム固有のチェッカーは、 \fI/sbin\fP, \fI/sbin/fs.d\fP, \fI/sbin/fs\fP,
\fI/etc/fs\fP, \fI/etc\fP, 環境変数 PATH 内のディレクトリの順にサーチされる。
詳細はファイルシステム固有のチェッカーのマニュアルを参照すること。
.SH オプション
.TP 
\fB\-s\fP
\fBfsck\fP の動作を逐次的にする。 複数のファイルシステムを インタラクティブ (対話) モードでチェックする際に有用。 (注意: デフォルトでは
\fBe2fsck\fP(8)  の動作は対話モードである。 \fBe2fsck\fP(8)  を非対話モードで動作させるには、 \fB\-p\fP オプションか
\fB\-a\fP オプションを使用する。また非対話的にエラーを自動修復させたい場合は \fB\-n\fP オプションを利用する。)
.TP 
\fB\-t\fP\fI fslist\fP
チェックするファイルシステムのタイプを指定する。 \fB\-A\fP オプションが指定されている場合は、 \fIfslist\fP
にマッチするファイルシステムのみをチェックする。 \fIfslist\fP パラメータは、コンマで区切られた ファイルシステムとオプション指定のリストである。
このコンマ区切りのリストに含まれるファイルシステムのすべてに、 否定演算子 '\fBno\fP' または '\fB!\fP' を前置することもできる。 これにより、
\fIfslist\fP にリストされていないファイルシステムだけがチェックされる。 \fIfslist\fP
のファイルシステムすべてに否定演算子が付けられていない場合は、 \fIfslist\fP にリストされているファイルシステムのみがチェックされる。 (訳註:
リストの一部だけに否定演算子を付けることはできない)
.sp
オプション指定をコンマで区切った形で \fIfslist\fP に含めても良い。 これらは \fBopts=\fP\fIfs\-option\fP
という書式でなければならない。 オプション指定が存在すると、 \fB/etc/fstab\fP のマウントオプションのフィールドに \fIfs\-option\fP
があるファイルシステムのみがチェックされる。 オプション指定の前に否定演算子がある場合は、 \fB/etc/fstab\fP
のマウントオプションのフィールドに \fIfs\-option\fP がないファイルシステムのみがチェックされる。
.sp
例えば、 \fBopts=ro\fP を \fIfslist\fP に指定すると、 \fB/etc/fstab\fP にリストされているファイルシステムのうち、
\fBro\fP オプションを持つものだけがチェックされる。
.sp
\fBfsck\fP プログラムへの非公式なユーザインターフェース変更に 依存したブートスクリプトを使っている Mandrake
ディストリビューションとの互換性のため、 \fIfslist\fP にファイルシステムタイプ \fBloop\fP があった場合、 \fB\-t\fP
オプションの引き数として \fBopts=loop\fP が指定されていると仮定する。
.sp
通常ファイルシステムのタイプは、 \fIfilesys\fP を \fI/etc/fstab\fP ファイルから検索して見つかったエントリから取得する。
ファイルシステムのタイプが取得できず、 かつ 1 つのファイルシステムだけが \fB\-t\fP オプションの引き数になっている場合、 \fBfsck\fP
はそれを利用する。 指定してあるファイルシステムタイプを利用できない場合は、 デフォルトのファイルシステムタイプ (現時点では ext2) を利用する。
.TP 
\fB\-A\fP
\fI/etc/fstab\fP に列記されているファイルシステムをすべてチェックする。 このオプションを用いれば、複数のファイルシステムに対して fsck
をひとつひとつ単独で実行しなくてもよいため、 システムの初期設定ファイルである \fI/etc/rc\fP 中でよく利用される。
.sp
\fB\-P\fP オプション (後述) が指定されていなければ、 ルートファイルシステムが最初にチェックされる。その後、 \fI/etc/fstab\fP
ファイルの第 6 フィールドである \fIfs_passno\fP の順序にしたがって他のファイルシステムがチェックされる。 \fIfs_passno\fP の値が
0 であるファイルシステムは、スキップされて一切チェックされない。 \fIfs_passno\fP の値が 0 より大きいファイルシステムは、小さい
\fIfs_passno\fP 値を持ったものを優先し、順番にチェックされる。 同じ番号が指定されているファイルシステムが複数ある場合には、 fsck
はそれらを並列してチェックしようとする。 しかし同じ物理ディスクにあるファイルシステムの同時チェックは避ける。
.sp
したがって、 \fI/etc/fstab\fP に対する最も普通の設定は、ルートファイルシステムの \fIfs_passno\fP を 1
とし、他のすべてのファイルシステムの \fIfs_passno\fP を 2 とするものである。こうすると \fBfsck\fP は、(効果が期待できる場合には)
自動的にファイルシステムチェッカーを 同時に並列して動作させる。 何らかの理由で複数ファイルシステムの
並列チェックをしたくない場合には、システム管理者はこの設定をしてはいけない。 たとえばマシンのメモリが少なく、余分なページングが
問題になる場合などがこれにあたる。
.TP 
\fB\-C\fP [ \fI fd \fP ]
作業完了分・残り分の棒グラフをサポートしている ファイルシステムチェッカー (現在 ext2 と ext3 用のものだけ) に、 表示を行わせる。
fsck は一度にひとつのチェッカーだけが表示を行うように、 複数のチェッカーを管理する。 GUI フロントエンドにはファイルディスクリプタ \fIfd\fP
を指定することができる。 この場合、棒グラフの情報はファイルディスクリプタに送られる。
.TP 
\fB\-M\fP
マウントされているファイルシステムはチェックしない。その場合、終了コード 0 を返す。
.TP 
\fB\-N\fP
実際には実行せず、何が行われるかだけを表示する。
.TP 
\fB\-P\fP
\fB\-A\fP オプションが指定されている場合、 ルートファイルシステムを他のファイルシステムと並列にチェックする。
ルートファイルシステムが壊れている場合には \fBe2fsck\fP(8)  自体が壊れている可能性もあるため、
このオプションを用いるのは安全性を損なうことになる。 このオプションは、 ルートファイルシステムを小さくコンパクトなパーティションに切りなおしたくない
システム管理者向けのオプションである (ルートファイルシステムを小さくコンパクトにまとめるのが正しい解なのだが)。
.TP 
\fB\-R\fP
\fB\-A\fP オプションを用いて全てのファイルシステムをチェックする際に、 ルートファイルシステムをチェックしないようにする
(ルートファイルシステムがすでに read/write でマウントされている場合)。
.TP 
\fB\-T\fP
起動時にタイトルを表示しない。
.TP 
\fB\-V\fP
\fBfsck\fP から起動されるシステム固有のコマンドを含め、詳細な表示をする。
.TP 
\fBfs\-specific\-options\fP
\fBfsck\fP が理解しないオプションは、ファイルシステム固有のチェッカーに渡される。 これらのオプションは引き数をとっては\fBならない\fP。
なぜなら、どのオプションが引き数をとるか (とらないか) を \fBfsck\fP が正しく判断できる方法がないためである。
.IP
\fB\-\-\fP 以降に指定したオプションと引き数は、ファイルシステム固有のオプションとして ファイルシステム固有のチェッカーに渡される。
.IP
fsck は任意の複雑なオプションをファイルシステム固有のチェッカーに渡すようには 設計されていない点に注意すること。 複雑なことをやろうとするときは、
ファイルシステム固有のチェッカーを直接実行してほしい。 非常に複雑なオプションと引き数を \fBfsck\fP
に渡した場合に、期待した動作をしなかったとしても、 \fBバグとして報告するには及ばない\fP。 \fBfsck\fP
にやらせるべきではないことを、あなたがやったのだから。
.PP
ファイルシステム固有の fsck のオプションは、標準化されていない。 確かでない場合は、ファイルシステム固有のチェッカーの man
ページを調べること。 保証されたものではないが、以下のオプションは ほとんどのファイルシステムチェッカーでサポートされている。
.TP 
\fB\-a\fP
質問なしで自動的にファイルシステムを修復する (このオプションの使用には注意を要する)。 ほとんどのファイルシステムチェッカーは \fB\-a\fP
オプションに対応しているが、 \fBe2fsck\fP(8)  においては \fB\-a\fP オプションは過去互換性のために準備されているだけである。 したがって
\fBe2fsck\fP では、このオプションは (安全に利用できる)  \fB\-p\fP オプションにマップされ、
いくつかのフィルシステムチェッカーがサポートしている \fB\-a\fP にはマップされない。
.TP 
\fB\-n\fP
ファイルシステム固有のチェッカーの中には、 \fB\-n\fP オプションが指定されると、
問題点を修復するのではなく、その問題点を単に標準出力に書き出すものもある。 しかし全てのファイルシステム固有のチェッカーが、
このような動作をするわけではない。 特に \fBfsck.reiserfs\fP(8)  は、このオプションが指定されても破損箇所を報告しない。 また
\fBfsck.minix\fP(8)  は、 \fB\-n\fP オプションを全くサポートしていない。
.TP 
\fB\-r\fP
対話的にファイルシステムを修復する (確認を求める)。 注意: fsck が並列に動作している場合にこのオプションを利用するのは
あまり賢いとはいえない。 \fBe2fsck\fP においては並列動作がデフォルトであり、 このオプションは過去互換性のためにのみ準備されている。
.TP 
\fB\-y\fP
ファイルシステム固有のチェッカーの中には、 \fB\-y\fP オプションが指定されると、検出されたファイルシステムの破損箇所を
常に自動的に修復しようとするものもある。 エキスパートは、より上手に fsck を手動で実行させることができる場合もある。
全てのファイルシステム固有のチェッカーが、 このオプションを実装しているわけではない点に注意すること。 この man ページを書いている時点では、特に
\fBfsck.minix\fP(8)  と \fBfsck.cramfs\fP(8)  は \fB\-y\fP オプションをサポートしていない。
.SH 作者
Theodore Ts'o (tytso@mit.edu)
.SH ファイル
\fI/etc/fstab\fP
.SH 環境変数
\fBfsck\fP プログラムの振舞いは、以下の環境変数による影響を受ける。
.TP 
\fBFSCK_FORCE_ALL_PARALLEL\fP
この環境変数が設定されていると、 \fBfsck\fP は指定されたファイルシステムすべてを、
それらのファイルシステムが同じデバイス上にあるように見えるかどうかを問わず、 並列にチェックしようとする。 (これは IBM や EMC
などの会社から販売されているような、 RAID システムやハイエンドのストレージシステムで有用である。)
.TP 
\fBFSCK_MAX_INST\fP
この環境変数は、同時に動作するファイルシステムチェッカーの最大数を制限する。 この指定を行えば、多数のディスクを備えたシステムにおいて \fBfsck\fP
がたくさんのファイルシステムチェッカーを同時に起動し、 システムで利用できる CPU やメモリなどの資源に
過度の負荷を与えてしまうことを避けることができる。 この値を 0 にすると、spawn するプロセス数の制限がなくなる。 現在はこれがデフォルトだが、
\fBfsck\fP の将来の版では、OS からアカウンティングデータを取得することにより、
同時に行うファイルシステムチェックの数を自動的に決めるようになるかもしれない。
.TP 
\fBPATH\fP
\fBPATH\fP 環境変数はファイルシステムチェッカーを探索する際に用いられる。 まず最初に、一連のシステムディレクトリが検索される。これらは
\fB/sbin\fP, \fB/sbin/fs.d\fP, \fB/sbin/fs\fP, \fB/etc/fs\fP, \fB/etc\fP である。これに続いて \fBPATH\fP
環境変数に指定されたディレクトリ群が検索される。
.TP 
\fBFSTAB_FILE\fP
この環境変数を用いると、システム管理者は \fB/etc/fstab\fP ファイルの標準的な置場所を変更できる。 これは \fBfsck\fP
のテストを行う開発者にとっても便利である。
.SH 関連項目
\fBfstab\fP(5), \fBmkfs\fP(8), \fBfsck.ext2\fP(8)  または \fBfsck.ext3\fP(8)  または
\fBe2fsck\fP(8), \fBcramfsck\fP(8), \fBfsck.minix\fP(8), \fBfsck.msdos\fP(8),
\fBfsck.jfs\fP(8), \fBfsck.nfs\fP(8), \fBfsck.vfat\fP(8), \fBfsck.xfs\fP(8),
\fBfsck.xiafs\fP(8), \fBreiserfsck\fP(8).
