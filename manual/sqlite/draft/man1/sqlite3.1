.\"O .TH SQLITE3 1 "Fri Oct 31 10:41:31 EDT 2014"
.TH SQLITE3 1 "2014年10月31日 10:41:31"  
.\"O ----------------------------------------
.\"O .SH NAME
.\"O .B sqlite3 
.\"O \- A command line interface for SQLite version 3
.SH 名前
\fBsqlite3\fP \- SQLite バージョン 3 用のコマンドラインインターフェース
.\"O ----------------------------------------

.\"O ----------------------------------------
.\"O .SH SYNOPSIS
.\"O .B sqlite3
.\"O .RI [ options ]
.\"O .RI [ databasefile ]
.\"O .RI [ SQL ]
.SH 書式
\fBsqlite3\fP [\fIoptions\fP] [\fIdatabasefile\fP] [\fISQL\fP]
.\"O ----------------------------------------

.\"O ----------------------------------------
.\"O .SH SUMMARY
.SH 概要
.\"O ----------------------------------------
.\"O .PP
.\"O .B sqlite3
.\"O is a terminal-based front-end to the SQLite library that can evaluate
.\"O queries interactively and display the results in multiple formats.
.\"O .B sqlite3
.\"O can also be used within shell scripts and other applications to provide
.\"O batch processing features.
.PP
\fBsqlite3\fP は端末ベースによる SQLite
ライブラリへのフロントエンドです。これによりクエリーを対話的に評価して、その結果を複数フォーマットにより出力します。\fBsqlite3\fP
はシェルスクリプトや他のアプリケーション内から利用することで、パッチ処理的な機能を実現することもできます。
.\"O ----------------------------------------

.\"O ----------------------------------------
.\"O .SH DESCRIPTION
.\"O To start a
.\"O .B sqlite3
.\"O interactive session, invoke the
.\"O .B sqlite3
.\"O command and optionally provide the name of a database file.  If the
.\"O database file does not exist, it will be created.  If the database file
.\"O does exist, it will be opened.
.SH 説明
\fBsqlite3\fP の対話型セッションを起動するには \fBsqlite3\fP
コマンドを起動します。その際には必要に応じてデータベースファイル名を指定します。データベースファイルが存在しなかった場合は、その時点で生成されます。データベースファイルが存在していたら、それを開きます。
.\"O ----------------------------------------
.\"O 
.\"O For example, to create a new database file named "mydata.db", create
.\"O a table named "memos" and insert a couple of records into that table:
.\"O .sp
.\"O $ 
.\"O .B sqlite3 mydata.db
.\"O .br
.\"O SQLite version 3.8.8
.\"O .br
.\"O Enter ".help" for instructions
.\"O .br
.\"O sqlite>
.\"O .B create table memos(text, priority INTEGER);
.\"O .br
.\"O sqlite>
.\"O .B insert into memos values('deliver project description', 10);
.\"O .br
.\"O sqlite>
.\"O .B insert into memos values('lunch with Christine', 100);
.\"O .br
.\"O sqlite>
.\"O .B select * from memos;
.\"O .br
.\"O deliver project description|10
.\"O .br
.\"O lunch with Christine|100
.\"O .br
.\"O sqlite>
.\"O .sp

たとえば "mydata.db" という名のデータベースファイルに "memos"
という名のテーブルを生成して、いくつかレコード追加を行うには、以下のようにします。
.sp
$ \fBsqlite3 mydata.db\fP
.br
SQLite version 3.8.8
.br
Enter ".help" for instructions
.br
sqlite> \fBcreate table memos(text, priority INTEGER);\fP
.br
sqlite> \fBinsert into memos values('deliver project description', 10);\fP
.br
sqlite> \fBinsert into memos values('lunch with Christine', 100);\fP
.br
sqlite> \fBselect * from memos;\fP
.br
deliver project description|10
.br
lunch with Christine|100
.br
sqlite>
.sp
.\"O ----------------------------------------
.\"O 
.\"O If no database name is supplied, the ATTACH sql command can be used
.\"O to attach to existing or create new database files.  ATTACH can also
.\"O be used to attach to multiple databases within the same interactive
.\"O session.  This is useful for migrating data between databases,
.\"O possibly changing the schema along the way.

データベース名が指定されなかった場合、sql コマンドの ATTACH
が用いられて、既存または新規のデータベースファイルに対してアタッチされます。同一の対話型セッション内であれば、ATTACH
によるアタッチは複数データベースに対して実現されることもあります。これはデータベース間でのデータ移行に活用することができ、その際には必要に応じてスキーマ変更を行うこともできます。
.\"O ----------------------------------------
.\"O 
.\"O Optionally, a SQL statement or set of SQL statements can be supplied as
.\"O a single argument.  Multiple statements should be separated by
.\"O semi-colons.

任意の操作として、1 つまたは複数の SQL 文を 1 つの引数として与えて実行することもできます。複数の SQL
文はセミコロンで区切ることが必要です。
.\"O ----------------------------------------
.\"O 
.\"O For example:
.\"O .sp
.\"O $ 
.\"O .B sqlite3 -line mydata.db 'select * from memos where priority > 20;'
.\"O .br
.\"O     text = lunch with Christine
.\"O .br
.\"O priority = 100
.\"O .br
.\"O .sp

たとえば以下です。
.sp
$ \fBsqlite3 \-line mydata.db 'select * from memos where priority > 20;'\fP
.br
    text = lunch with Christine
.br
priority = 100
.br
.sp
.\"O ----------------------------------------

.\"O ----------------------------------------
.\"O .SS SQLITE META-COMMANDS
.SS "SQLITE メタコマンド"
.\"O ----------------------------------------
.\"O .PP
.\"O The interactive interpreter offers a set of meta-commands that can be
.\"O used to control the output format, examine the currently attached
.\"O database files, or perform administrative operations upon the
.\"O attached databases (such as rebuilding indices).   Meta-commands are
.\"O always prefixed with a dot (.).
.PP
対話型インタープリタにはメタコマンドがいくつかあります。これを利用して出力フォーマットを制御することができます。あるいは現在アタッチされているデータベースの検証、アタッチされているデータベースへの管理操作
(たとえばインデックスの再構築など) も行うことができます。メタコマンドは必ず先頭にドット (.) がつきます。
.\"O ----------------------------------------
.\"O 
.\"O A list of available meta-commands can be viewed at any time by issuing
.\"O the '.help' command.  For example:
.\"O .sp
.\"O sqlite>
.\"O .B .help
.\"O .nf
.\"O .tr %.
.\"O %backup ?DB? FILE      Backup DB (default "main") to FILE
.\"O %bail on|off           Stop after hitting an error.  Default OFF
.\"O %clone NEWDB           Clone data into NEWDB from the existing database
.\"O %databases             List names and files of attached databases
.\"O %dump ?TABLE? ...      Dump the database in an SQL text format
.\"O                          If TABLE specified, only dump tables matching
.\"O                          LIKE pattern TABLE.
.\"O %echo on|off           Turn command echo on or off
.\"O %eqp on|off            Enable or disable automatic EXPLAIN QUERY PLAN
.\"O %exit                  Exit this program
.\"O %explain ?on|off?      Turn output mode suitable for EXPLAIN on or off.
.\"O                          With no args, it turns EXPLAIN on.
.\"O %fullschema            Show schema and the content of sqlite_stat tables
.\"O %headers on|off        Turn display of headers on or off
.\"O %help                  Show this message
.\"O %import FILE TABLE     Import data from FILE into TABLE
.\"O %indices ?TABLE?       Show names of all indices
.\"O                          If TABLE specified, only show indices for tables
.\"O                          matching LIKE pattern TABLE.
.\"O %load FILE ?ENTRY?     Load an extension library
.\"O %log FILE|off          Turn logging on or off.  FILE can be stderr/stdout
.\"O %mode MODE ?TABLE?     Set output mode where MODE is one of:
.\"O                          csv      Comma-separated values
.\"O                          column   Left-aligned columns.  (See .width)
.\"O                          html     HTML <table> code
.\"O                          insert   SQL insert statements for TABLE
.\"O                          line     One value per line
.\"O                          list     Values delimited by .separator string
.\"O                          tabs     Tab-separated values
.\"O                          tcl      TCL list elements
.\"O %nullvalue STRING      Use STRING in place of NULL values
.\"O %once FILENAME         Output for the next SQL command only to FILENAME
.\"O %open ?FILENAME?       Close existing database and reopen FILENAME
.\"O %output ?FILENAME?     Send output to FILENAME or stdout
.\"O %print STRING...       Print literal STRING
.\"O %prompt MAIN CONTINUE  Replace the standard prompts
.\"O %quit                  Exit this program
.\"O %read FILENAME         Execute SQL in FILENAME
.\"O %restore ?DB? FILE     Restore content of DB (default "main") from FILE
.\"O %save FILE             Write in-memory database into FILE
.\"O %schema ?TABLE?        Show the CREATE statements
.\"O                          If TABLE specified, only show tables matching
.\"O                          LIKE pattern TABLE.
.\"O %separator STRING ?NL? Change separator used by output mode and .import
.\"O                          NL is the end-of-line mark for CSV
.\"O %shell CMD ARGS...     Run CMD ARGS... in a system shell
.\"O %show                  Show the current values for various settings
.\"O %stats on|off          Turn stats on or off
.\"O %system CMD ARGS...    Run CMD ARGS... in a system shell
.\"O %tables ?TABLE?        List names of tables
.\"O                          If TABLE specified, only list tables matching
.\"O                          LIKE pattern TABLE.
.\"O %timeout MS            Try opening locked tables for MS milliseconds
.\"O %timer on|off          Turn SQL timer on or off
.\"O %trace FILE|off        Output each SQL statement as it is run
.\"O %vfsname ?AUX?         Print the name of the VFS stack
.\"O %width NUM1 NUM2 ...   Set column widths for "column" mode
.\"O                          Negative values right-justify
.\"O sqlite>
.\"O .sp
.\"O .fi

利用可能なメタコマンドは '.help' コマンドを実行すれば、いつでも確認することができます。たとえば以下のとおりです。
.sp
sqlite> \fB.help\fP
.nf
.tr %.
%backup ?DB? FILE      DB (デフォルトは "main") を FILE に出力。
%bail on|off           エラー発生時は停止。デフォルトはOFF。
%clone NEWDB           既存 DB から NEWDB へデータをクローン。
%databases             アタッチ DB の名前やファイルを一覧表示。
%dump ?TABLE? ...      SQL テキストフォーマットにより DB をダンプ。
                         テーブル指定時は LIKE パターン TABLE に
                         合致したテーブルのみダンプ。
%echo on|off           コマンドエコーのオンまたはオフ。
%eqp on|off            自動的な EXPLAIN QUERY PLAN の有効、無効化。
%exit                  プログラム終了。
%explain ?on|off?      EXPLAIN 用の出力モードのオンまたはオフ。
                         引き数がない場合、EXPLAIN をオンとする。
%fullschema            スキーマおよび sqlite_stat テーブルの内容表示。
%headers on|off        ヘッダー出力のオンまたはオフ。
%help                  本メッセージの出力。
%import FILE TABLE     FILE から TABLE へのデータインポート。
%indices ?TABLE?       インデックス名の一覧出力。
                         テーブル指定時は LIKE パターン TABLE に
                         合致したインデックスのみ出力。
%load FILE ?ENTRY?     拡張ライブラリのロード。
%log FILE|off          ログ出力のオンまたはオフ。FILE は stderr/stdout。
%mode MODE ?TABLE?     出力モードを以下の MODE とする。
                         csv      カンマ区切り。
                         column   左寄せカラム。(.width 参照)
                         html     HTML <table> コード。
                         insert   TABLE の SQL insert 文。
                         line     各値を 1 行ずつ。
                         list     各値を .separator 文字列で区切る。
                         tabs     タブ区切り。
                         tcl      TCL リスト要素。
%nullvalue STRING      NULL 値に代わって用いる文字列指定。
%once FILENAME         FILENAME にのみ次の SQL コマンドを出力。
%open ?FILENAME?       現在 DB をクローズして FILENAME を再オープン。
%output ?FILENAME?     FILENAME か stdout への出力。
%print STRING...       文字列 STRING そのものを出力。
%prompt MAIN CONTINUE  標準プロンプトの置き換え。
%quit                  プログラム終了。
%read FILENAME         FILENAME 内の SQL 実行。
%restore ?DB? FILE     DB (デフォルトは "main") の内容を FILE から復元。
%save FILE             インメモリ DB の FILE への書き込み。
%schema ?TABLE?        CREATE 文の表示。
                         テーブル指定時は LIKE パターン TABLE に
                         合致したテーブルのみ出力。
%separator STRING ?NL? 出力モードにて用いる区切り文字の変更。また CSV
                         にて .import NL を行終端文字とする。
%shell CMD ARGS...     システムシェルにおいて CMD ARGS... を実行する。
%show                  さまざまな設定における現在値を表示。
%stats on|off          stats をオンまたはオフにする。
%system CMD ARGS...    システムシェルにおいて CMD ARGS... を実行する。
%tables ?TABLE?        テーブル名の一覧出力。
                         テーブル指定時は LIKE パターン TABLE に
                         合致したテーブルのみ出力。
%timeout MS            ロックテーブルを MS ミリ秒だけオープンを試みる。
%timer on|off          SQL タイマーのオンまたはオフ。
%trace FILE|off        各 SQL 文が実行されるままを出力。
%vfsname ?AUX?         VFS スタック名を表示。
%width NUM1 NUM2 ...   "column" モードにてカラム幅を指定。
                         負数は右寄せを行う。
sqlite>
.sp
.fi
.\"O ----------------------------------------
.\"O .SH OPTIONS
.\"O .B sqlite3
.\"O has the following options:
.SH オプション
\fBsqlite3\fP には以下のオプションがあります。
.\"O ----------------------------------------
.\"O .TP
.\"O .B \-bail
.\"O Stop after hitting an error.
.TP 
\fB\-bail\fP
エラーが発生したら停止します。
.\"O ----------------------------------------
.\"O .TP
.\"O .B \-batch
.\"O Force batch I/O.
.TP 
\fB\-batch\fP
強制的にバッチ I/O とします。
.\"O ----------------------------------------
.\"O .TP
.\"O .B \-column
.\"O Query results will be displayed in a table like form, using
.\"O whitespace characters to separate the columns and align the
.\"O output.
.TP 
\fB\-column\fP
クエリー結果の出力を、フォームのような表形式とします。そしてカラム間にはホワイトスペース文字を挿入して、間隔をあけた出力を行います。
.\"O ----------------------------------------
.\"O .TP
.\"O .BI \-cmd\  command
.\"O run
.\"O .I command
.\"O before reading stdin
.TP 
\fB\-cmd\ \fP\fIcommand\fP
stdio からの読み込みにあたって \fIcommand\fP を実行します。
.\"O ----------------------------------------
.\"O .TP
.\"O .B \-csv
.\"O Set output mode to CSV (comma separated values).
.TP 
\fB\-csv\fP
出力モードを CSV (カンマ区切り) に設定します。
.\"O ----------------------------------------
.\"O .TP
.\"O .B \-echo
.\"O Print commands before execution.
.TP 
\fB\-echo\fP
コマンド実行にあたってそのコマンドを表示します。
.\"O ----------------------------------------
.\"O .TP
.\"O .BI \-init\  file
.\"O Read and execute commands from
.\"O .I file
.\"O , which can contain a mix of SQL statements and meta-commands.
.TP 
\fB\-init\ \fP\fIfile\fP
コマンドを \fIfile\fP から読み込んで実行します。そのファイルには複数の SQL 文やメタコマンドを含めることができます。
.\"O ----------------------------------------
.\"O .TP
.\"O .B \-[no]header
.\"O Turn headers on or off.
.TP 
\fB\-[no]header\fP
ヘッダー出力をオンまたはオフにします。
.\"O ----------------------------------------
.\"O .TP
.\"O .B \-help
.\"O Show help on options and exit.
.TP 
\fB\-help\fP
オプションに関するヘルプを表示して終了します。
.\"O ----------------------------------------
.\"O .TP
.\"O .B \-html
.\"O Query results will be output as simple HTML tables.
.TP 
\fB\-html\fP
クエリー結果を単純な HTML 表形式で出力します。
.\"O ----------------------------------------
.\"O .TP
.\"O .B \-interactive
.\"O Force interactive I/O.
.TP 
\fB\-interactive\fP
強制的に対話型 I/O とします。
.\"O ----------------------------------------
.\"O .TP
.\"O .B \-line
.\"O Query results will be displayed with one value per line, rows
.\"O separated by a blank line.  Designed to be easily parsed by
.\"O scripts or other programs
.TP 
\fB\-line\fP
クエリー結果の出力を、フォームのような表形式とします。クエリー結果の出力を、1
行ごとに示すようにします。各行は空行により区切られます。スクリプトや他のプログラムから簡単に解析できるように設計されたものです。
.\"O ----------------------------------------
.\"O .TP
.\"O .B \-list
.\"O Query results will be displayed with the separator (|, by default)
.\"O character between each field value.  The default.
.TP 
\fB\-list\fP
クエリー結果をセパレータ文字 (デフォルトは | ) を用いて、各フィールド値を区切って表示します。これがデフォルトです。
.\"O ----------------------------------------
.\"O .TP
.\"O .BI \-mmap\  N
.\"O Set default mmap size to
.\"O .I N
.\"O \.
.TP 
\fB\-mmap\ \fP\fIN\fP
デフォルトの mmap サイズを \fIN\fP に設定します。
.
.\"O ----------------------------------------
.\"O .TP
.\"O .BI \-nullvalue\  string
.\"O Set string used to represent NULL values.  Default is ''
.\"O (empty string).
.TP 
\fB\-nullvalue\ \fP\fIstring\fP
NULL 値に対して用いる文字列を設定します。デフォルトは \*(rq (空文字) です。
.\"O ----------------------------------------
.\"O .TP
.\"O .BI \-separator\  separator
.\"O Set output field separator.  Default is '|'.
.TP 
\fB\-separator\ \fP\fIseparator\fP
出力時のフィールド間の区切り文字を設定します 。デフォルトは '|' です。
.\"O ----------------------------------------
.\"O .TP
.\"O .B \-stats
.\"O Print memory stats before each finalize.
.TP 
\fB\-stats\fP
出力を確定する直前にメモリ使用状況を表示します。
.\"O ----------------------------------------
.\"O .TP
.\"O .B \-version
.\"O Show SQLite version.
.TP 
\fB\-version\fP
SQLite バージョンを表示します。
.\"O ----------------------------------------
.\"O .TP
.\"O .BI \-vfs\  name
.\"O Use
.\"O .I name
.\"O as the default VFS.
.TP 
\fB\-vfs\ \fP\fIname\fP
デフォルトの VFS として \fIname\fP を用います。
.\"O ----------------------------------------

.\"O ----------------------------------------

.\"O ----------------------------------------
.\"O .SH INIT FILE
.\"O .B sqlite3
.\"O reads an initialization file to set the configuration of the
.\"O interactive environment.  Throughout initialization, any previously
.\"O specified setting can be overridden.  The sequence of initialization is
.\"O as follows:
.SH 初期化ファイル
\fBsqlite3\fP
では、対話型環境を設定するための初期化ファイルを読み込む機能があります。初期化の過程では、それ以前に設定されていた値は上書き更新されます。初期化の流れは以下のとおりです。
.\"O ----------------------------------------
.\"O 
.\"O o The default configuration is established as follows:

o デフォルトの設定が以下のようにして定まります。
.\"O ----------------------------------------
.\"O 
.\"O .sp
.\"O .nf
.\"O .cc |
.\"O mode            = LIST
.\"O separator       = "|"
.\"O main prompt     = "sqlite> "
.\"O continue prompt = "   ...> "
.\"O |cc .
.\"O .sp
.\"O .fi

.sp
.nf
.cc |
mode            = LIST
separator       = "|"
main prompt     = "sqlite> "
continue prompt = "   ...> "
|cc .
.sp
.fi
.\"O ----------------------------------------
.\"O 
.\"O o If the file 
.\"O .B ~/.sqliterc
.\"O exists, it is processed first.
.\"O can be found in the user's home directory, it is
.\"O read and processed.  It should generally only contain meta-commands.

o ファイル \fB~/.sqliterc\fP
が存在する場合、これが最初に処理されます。ユーザーのホームディレクトリにあるものであり、それが読み込まれて処理されます。一般的にはメタコマンドのみを含めます。
.\"O ----------------------------------------
.\"O 
.\"O o If the -init option is present, the specified file is processed.

o オプション \-init があった場合、そこに指定されたファイルが処理されます。
.\"O ----------------------------------------
.\"O 
.\"O o All other command line options are processed.

o 上以外のコマンドラインオプションがすべて処理されます。
.\"O ----------------------------------------

.\"O ----------------------------------------
.\"O .SH SEE ALSO
.\"O http://www.sqlite.org/cli.html
.\"O .br
.\"O The sqlite3-doc package.
.SH 関連項目
http://www.sqlite.org/cli.html
.br
sqlite3\-doc パッケージ
.\"O ----------------------------------------
.\"O .SH AUTHOR
.\"O This manual page was originally written by Andreas Rottmann
.\"O <rotty@debian.org>, for the Debian GNU/Linux system (but may be used
.\"O by others). It was subsequently revised by Bill Bumgarner <bbum@mac.com> and
.\"O further updated by Laszlo Boszormenyi <gcs@debian.hu> .
.SH 著者
このマニュアルページは、もともと Debian GNU/Linux システム向けに Andreas Rottmann
<rotty@debian.org> が制作しました (他システムでも利用できるはずです)。その後に Bill Bumgarner
<bbum@mac.com> が改訂を行い、さらに Laszlo Boszormenyi <gcs@debian.hu>
が更新を行っています。
.\"O ----------------------------------------
