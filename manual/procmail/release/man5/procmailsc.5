.de  Id
.ds Rv \\$3
.ds Dt \\$4
..
.\"if n .pl +(135i-\n(.pu)
.Id $Id: procmailsc.5,v 1.1 2003/06/16 17:06:43 motoki Exp $
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Tue Sep 09 02:25:00 JST 2003
.\"         by MATSUDA Yoh-ichi (yoh@flcl.org)
.\" References: http://www.jaist.ac.jp/~fjt/procmail.html
.\"
.\"if n .pl +(135i-\n(.pu)
.TH PROCMAILSC 5 \*(Dt BuGless 
.rn SH Sh
.de  SH
.br
.ne 11
.Sh "\\$1"
..
.rn SS Ss
.de  SS
.br
.ne 10
.Ss "\\$1"
..
.rn RS Rs
.de  RS
.na
.nf
.Rs
..
.rn RE Re
.de  RE
.Re
.fi
.ad
..
.de  Sx
.PP
.ne \\$1
.RS
..
.de  Ex
.RE
.PP
..
.na
.SH 名前
procmailsc \- procmail の重みつきスコアリング手法
.SH 書式
[\fB*\fP] \fBw^x 条件文\fP
.ad
.SH 説明
レシピには伝統的な真偽条件を指定できるが、 それに加えてマッチする \-\- あるいはマッチしない \-\- 条件に対して、
重みつきスコアリング手法を採り入れることもできる。 レシピに重みつきスコアリング手法を使う場合、
あるレシピがマッチするということは、その最終スコアは必ず正の値である。

その条件に `weight' (重み) (\fBw\fP) 及び `exponent' (指数) (\fBx\fP) を置く
ことで、スコアが適用される。 条件(の同一行)に
.RS
\fBw^x\fP
.RE
を前置すればスコアリング手法を適用できる。 但し、 \fBw\fP 及び \fBx\fP は \-2147483647.0 〜 2147483647.0
の範囲内(両端を含む)の実数である。

.SH 重み付き正規表現条件
最初に正規表現を見つけると、スコアに \fIw\fP を加算する。二番目を見つけると、 \fIw*x\fP を加算する。三番目を見つけると、 \fIw*x*x\fP
を加算する。四番目を見つけると、 \fIw*x*x*x\fP を加算する。以下同様。

これは以下の簡単な公式で記述できる:
.Sx 4
                     n
     n   k\-1        x \- 1
w * Sum x    = w * \-\-\-\-\-\-\-
    k=1             x \- 1
.Ex
これは上記の条件において \fBn\fP 回マッチする際のスコアの合計を表す。

以下の場合は区別されるので注意されたい:
.TP  8
x=0
最初のマッチのみがスコア w に影響する。後続のマッチは無視される。
.TP 
x=1
全てのマッチはスコア w に等しく影響する。スコアはマッチする度毎にその数に 比例して線形的に増加する。
.TP 
0<x<1
全てのマッチはそれ以前のスコアに対してより少なく影響する。 スコアはある値に向けて漸近線状に変化する (後述の \fB備考\fP の章を参照のこと。)
.TP 
1<x
全てのマッチはそれ以前のスコアに対してより多く影響する。 スコアは指数的に増加する。
.TP 
x<0
奇数あるいは偶数番目のマッチを与えるのに便利である。
.PP
正規表現が否定された場合(例: マッチしなかった場合)、 \fBn\fP は明らかに 0 あるいは 1となる。
.SH 重み付きプログラム条件
プログラムが正常終了の結果として終了コード EXIT_SUCCESS (=0) を返す 場合、スコアの合計は \fBw\fP となる。
上記以外の(実行失敗を示す)終了コードを返す場合、スコアの合計は \fBx\fP となる。
.PP
プログラムの終了コードが否定される場合、終了コードはあたかもマッチした 数であったかの如く見倣される。 そして、スコアの合計は通常の正規表現が
\fBn=`exitcode'\fP 回数マッチしたものとして処理される。
.SH 重み付き長さ条件
現在のメールの長さが \fBM\fP である場合:
.Sx 1
* w^x > L
.Ex
という条件式は以下のような式でスコアに加算する:
.Sx 4
           x
    /  M  \e
w * | \-\-\- |
    \e  L  /
.Ex
また:
.Sx 1
* w^x < L
.Ex
という条件式は以下のような式でスコアに加算する:
.Sx 4
           x
    /  L  \e
w * | \-\-\- |
    \e  M  /
.Ex
.PP
両者共、 L=M であればスコアに w を加算する。 しかしながら前者の場合は大きいメールが有利であり、後者の場合は 小さいメールが有利である。 x
の値によって関数の勾配を微調整することができるが、 典型的には x=1 である。
.SH その他
レシピの全ての条件の最終的な合計スコアを問い合わせるには、環境変数 \fB$=\fP を用いる。 この変数は procmail
がレシピ内の全ての条件をパースした後はいつでも参照可能である。 (例えレシピが実行されなかったとしても。)
.SH 例
以下のレシピは本文が150行以上のメールを全て捨てる。 最初の条件は空の正規表現を含む。
すなわち、この条件は全てにマッチし、予めスコアに負の値のオフセットを与える為に使われる。
2番目の条件はメール中の全ての行にマッチし、1行毎に+1ポイントずつ加算することで、直前に設定していた負のオフセット値を消費する。
最後の条件では、メールが150行以上である場合のみにスコアが正の値になる。
.Sx 5
:0 Bh * \-150^0 * 1^1 ^.*$ /dev/null
.Ex
あなたがいつも真っ先に読む優先度の高いフォルダがあると仮定しよう。 次のレシピは重要度の高いメールを抜き出して特別なフォルダに放り込む。
最初の条件は定型的なものであり、スコアには何ら作用しないが、今回のケースにおいてはこの条件が満たされていなければならない。【訳注:
Precedence: 行は各種メイリングリストや vacation
等の自動応答ソフト等、人手を介さない配送ソフトがメールを配送する際に付加したり、配送すべきか否かを判断するヘッダである。】
これ以外の条件は以下のような状況を記述する: John と Claire はいつも何らかの重要な発言をする。 会議は大概重要である。
彼らに対する返答はやや優先する。 Elvis に関するメール (これはあくまでも単なる一例に過ぎないのであしからず :\-)  は優先する
(更に言えば、そのメールはもっと優先するが、 Elvis に割り当てられる特別なスコアは、彼がどれほど頻繁に言及しても、最大 4000 である)。
沢山の引用行は忌み嫌われ、顔マークは評価される (これらのスコアは最大 3500 に達する)。
彼ら3人は通常は興味深いメールを送信しないし、短いメールを好むはずだ (例えば、 2000バイトの長いメールはスコアを \-100 、
4000バイトの長いメールはスコアを \-800 減じる。)。 ご覧の通り、重要でない誰かがメールを送信すると、まだ優先度の高いフォルダに
格納される機会がある。 例えば、会議に関するメールや、少なくとも2つの顔マークを含んでいる場合である。
.Sx 11
:0 HB * !^Precedence:.*(junk|bulk)  * 2000^0 ^From:.*(john@home|claire@work)
* 2000^0 ^Subject:.*meeting * 300^0 ^Subject:.*Re: * 1000^.75 elvis|presley
* \-100^1 ^> * 350^.9 :\-\e)  * \-500^0 ^From:.*(boss|jane|henry)@work *
\-100^3 > 2000 priority_folder
.Ex
仮にあなたがメイリングリストに加入して、そして良質のメールだけを 読みたければ、以下のレシピが目的に適うはずだ。
先ず、当該メールがメイリングリストからのものであることを確認する。 次に、評価に値する意見を述べる重要人物からのメールであるか、あるいは
確実に全ての内容を知りたい表題に関するものであるかをチェックする。 もしそうならば、当該メールを前述のフォルダへファイリングする。
さもなくば、引用行と原文行の比率が最大 1:2 であるかチェックする。 もしこの比率を越えるものであれば、当該メールを捨てる。
これらのテストを通過した全てのメールはファイリングする。
.Sx 15
:0
^From mailinglist\-request@some.where
{
  :0:
  * ^(From:.*(paula|bill)|Subject:.*skiing)
  mailinglist

  :0 Bh
  *  20^1 ^>
  * \-10^1 ^[^>]
  /dev/null

  :0:
  mailinglist
}
.Ex
更なる実例は \fBprocmailex\fP(5)  を参照されたい。
.SH 警告
重みの順番による検索スピードを高速化させるために、 procmail の内部 egrep エンジンは常に最左の \fI最短\fP のマッチを探す。
ただし、変数 \fBMATCH\fP への割り当てを【訳注: \e/によって】行っている最中は、最左の \fI最長\fP のマッチを探す。
例えば、それ自身による最左の \fI最短\fP のマッチに用いる正規表現は:
.TP 
\&\fB.*\fP
は常に同じ点でゼロ長さの文字列にマッチする。
.TP 
\&\fB.+\fP
は常に(勿論、改行を除く)任意の1文字にマッチする。
.SH 関連項目
.na
.nh
\fBprocmail\fP(1), \fBprocmailrc\fP(5), \fBprocmailex\fP(5), \fBsh\fP(1), \fBcsh\fP(1),
\fBegrep\fP(1), \fBgrep\fP(1),
.hy
.ad
.SH バグ
もし、長さ条件において、指定した \fBx\fP がオーバフローを起こした場合、 procmail は数学ライブラリの関数 \fBpow\fP(3)
のなすがままとなる。
.PP
`工学'フォーマットの浮動小数点数値 (例: 12e5) は認められない。
.SH その他
`正の極大値' (2147483647) に到達すると、直ちにそれ以降の \fI重み付けされた\fP 条件は単純に読み飛ばされる。
.PP
`負の極大値' (\-2147483647) に到達すると、直ちにそれ以降の 条件は `マッチしないもの' として見倣され、レシピは早々に終了する。
.SH 備考
もし、正規表現重み付け公式 \fB0<x<1\fP において、この条件におけるスコア加算の総和は漸近的に変化する:
.Sx 3
   w
\-\-\-\-\-\-\-
 1 \- x
.Ex
最大値の半分に至る為には、
.Sx 3
     \- ln 2
n = \-\-\-\-\-\-\-\-
       ln x
.Ex
というマッチが必要になる。
.SH 著者
Stephen R. van den Berg
.RS
<srb@cuci.nl>
.RE
Philip A. Guenther
.RS
<guenther@sendmail.com>
.RE
.\".if n .pl -(\n(.tu-1i)
.rm SH
.rn Sh SH
.rm SS
.rn Ss SS
.rm TP
.rn Tp TP
.rm RS
.rn Rs RS
.rm RE
.rn Re RE
