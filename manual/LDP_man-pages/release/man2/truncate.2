.\" Copyright (c) 1983, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" %%%LICENSE_START(BSD_4_CLAUSE_UCB)
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\" %%%LICENSE_END
.\"
.\"     @(#)truncate.2	6.9 (Berkeley) 3/10/91
.\"
.\" Modified 1993-07-24 by Rik Faith <faith@cs.unc.edu>
.\" Modified 1996-10-22 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified 1998-12-21 by Andries Brouwer <aeb@cwi.nl>
.\" Modified 2002-01-07 by Michael Kerrisk <mtk.manpages@gmail.com>
.\" Modified 2002-04-06 by Andries Brouwer <aeb@cwi.nl>
.\" Modified 2004-06-23 by Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Copyright (c) 1997 SUTO, Mitsuaki
.\"         all rights reserved.
.\" Translated 1997-06-26, SUTO, Mitsuaki <suto@av.crl.sony.co.jp>
.\" Modified 2000-03-12, HANATAKA Shinya <hanataka@abyss.rim.or.jp>
.\" Updated 2001-01-09, Kentaro Shirakata <argrath@ub32.org>
.\" Updated 2002-04-13, Kentaro Shirakata <argrath@ub32.org>
.\" Updated 2002-10-21, Kentaro Shirakata <argrath@ub32.org>
.\" Updated 2005-09-06, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\" Updated 2006-07-21, Akihiro MOTOKI, LDP v2.36
.\" Updated 2012-04-30, Akihiro MOTOKI <amotoki@gmail.com>
.\" Updated 2013-05-01, Akihiro MOTOKI <amotoki@gmail.com>
.\"
.TH TRUNCATE 2 " 2019\-03\-06" Linux "Linux Programmer's Manual"
.SH 名前
truncate, ftruncate \- 指定した長さにファイルを切り詰める
.SH 書式
\fB#include <unistd.h>\fP
.br
\fB#include <sys/types.h>\fP
.PP
\fBint truncate(const char *\fP\fIpath\fP\fB, off_t \fP\fIlength\fP\fB);\fP
.br
\fBint ftruncate(int \fP\fIfd\fP\fB, off_t \fP\fIlength\fP\fB);\fP
.PP
.RS -4
glibc 向けの機能検査マクロの要件 (\fBfeature_test_macros\fP(7)  参照):
.RE
.ad l
.PP
\fBtruncate\fP():
.RS 4
.\"    || _XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED
_XOPEN_SOURCE\ >=\ 500
    || /* glibc 2.12 以降: */ _POSIX_C_SOURCE\ >=\ 200809L
    || /* glibc 2.19 以前: */ _BSD_SOURCE
.RE
.PP
\fBftruncate\fP():
.RS 4
.\"    || _XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED
_XOPEN_SOURCE\ >=\ 500
    || /* glibc 2.3.5 以降: */ _POSIX_C_SOURCE\ >=\ 200112L
    || /* glibc 2.19 以前: */ _BSD_SOURCE
.RE
.ad b
.SH 説明
\fBtruncate\fP()  は \fIpath\fP で指定されるファイルを、 \fBftruncate\fP()  は \fIfd\fP で参照されるファイルを
\fIlength\fP バイトの長さになるように延長する、もしくは切り詰める。
.PP
もし切り詰める前のファイルが \fIlength\fP より長ければ、length バイトを越える部分のデータは失われる。 もし切り詰める前のファイルが
\fIlength\fP より短かければ、伸張される。 伸張された部分を読んだ場合はヌルバイト (\(aq\e0\(aq) の列が返される。
.PP
ファイルオフセットは変更されない。
.PP
大きさが変更されると、ファイルの st_ctime と st_mtime フィールド (それぞれ最終状態変更時刻、最終修正時刻; \fBinode\fP(7)
参照) が更新される。 また、set\-user\-ID と set\-group\-ID のモードビットがクリアされるかもしれない。
.PP
\fBftruncate\fP()  の場合、ファイルは書き込み用に開いていなければならない。 \fBtruncate\fP()
の場合、ファイルは書き込み可能でなければならない。
.SH 返り値
成功した場合は 0 が返される。エラーの場合は \-1 が返され、 \fIerrno\fP が適切に設定される。
.SH エラー
\fBtruncate\fP()  では以下のエラーコードが定義されている。
.TP 
\fBEACCES\fP
パスで指定されているディレクトリに検索許可のないものがある (訳注:x ビットが立っていない)。
あるいは、指定されたファイルに対する書き込み許可を持っていない。 (\fBpath_resolution\fP(7)  も参照のこと)
.TP 
\fBEFAULT\fP
引数 \fIpath\fP がプロセスに割り当てられているアドレス空間外を指している。
.TP 
\fBEFBIG\fP
引数 \fIlength\fP が最大ファイルサイズより大きい。(XSI)
.TP 
\fBEINTR\fP
完了待ちで停止 (block) している間に、呼び出しが シグナルハンドラーにより割り込まれた。 \fBfcntl\fP(2)  と \fBsignal\fP(7)
を参照。
.TP 
\fBEINVAL\fP
引数 \fIlength\fP が負数であるか、最大ファイルサイズより大きい。
.TP 
\fBEIO\fP
inode の更新時に I/O エラーが発生した。
.TP 
\fBEISDIR\fP
指定されたファイルはディレクトリである。
.TP 
\fBELOOP\fP
パス名を解釈する際にシンボリックリンクが多すぎた。
.TP 
\fBENAMETOOLONG\fP
パス名中のディレクトリ名が 255 文字を越えている、もしくはパス名全体が 1023 文字を越えている。
.TP 
\fBENOENT\fP
指定された名前のファイルが存在しない。
.TP 
\fBENOTDIR\fP
パス名の構成要素がディレクトリではない。
.TP 
\fBEPERM\fP
.\" This happens for at least MSDOS and VFAT filesystems
.\" on kernel 2.6.13
下層にあるファイルシステムでは、現在のファイル長を越えて ファイルを伸長することができない。
.TP 
\fBEPERM\fP
操作が file seal により禁止されている。 \fBfcntl\fP(2) 参照。
.TP 
\fBEROFS\fP
ファイルが読み込み専用 (read only) のファイルシステム上にある。
.TP 
\fBETXTBSY\fP
ファイルが実行中の実行ファイルである。
.PP
\fBftruncate\fP()  にも同様のエラーが適用される。 但し、 \fIpath\fP に関するエラーの場合は、ファイルディスクリプター \fIfd\fP
に関するエラーとなる。
.TP 
\fBEBADF\fP
\fIfd\fP が適切なファイルディスクリプターでない。
.TP 
\fBEBADF\fP または \fBEINVAL\fP
\fIfd\fP で指定されているものが書き込みモードで開かれていない。
.TP 
\fBEINVAL\fP
\fIfd\fP does not reference a regular file or a POSIX shared memory object.
.TP 
\fBEINVAL\fP または \fBEBADF\fP
The file descriptor \fIfd\fP is not open for writing.  POSIX permits, and
portable applications should handle, either error for this case.  (Linux
produces \fBEINVAL\fP.)
.SH 準拠
.\" POSIX.1-1996 has
.\" .BR ftruncate ().
.\" POSIX.1-2001 also has
.\" .BR truncate (),
.\" as an XSI extension.
.\" .LP
.\" SVr4 documents additional
.\" .BR truncate ()
.\" error conditions EMFILE, EMULTIHP, ENFILE, ENOLINK.  SVr4 documents for
.\" .BR ftruncate ()
.\" an additional EAGAIN error condition.
POSIX.1\-2001, POSIX.1\-2008, 4.4BSD, SVr4 (これらのコールは 4.2BSD で初めて登場した)。
.SH 注意
\fBftruncate\fP()  can also be used to set the size of a POSIX shared memory
object; see \fBshm_open\fP(3).
.PP
.\" At the very least: OSF/1, Solaris 7, and FreeBSD conform, mtk, Jan 2002
「説明」の節で述べた詳細は XSI 準拠のシステムについてのものである。
XSI 非準拠のシステムの場合、POSIX 標準は \fBftruncate\fP() に対して \fIlength\fP が
ファイルの長さより長かった場合、 エラーを返すかファイルを伸張するかの二つの
動作を許容している。 \fBtruncate\fP() に対しては全く規定されていない。
ほとんどの UNIX 実装と同様、Linux はネイティブ (Linux 由来) の ファイルシステム
の扱いでは XSI 要求仕様にしたがっている。 しかしながら、いくつかの非ネイティブ
のファイルシステムでは、 \fBtruncate\fP() や \fBftruncate\fP() を使って現在のファイル
長を越えてファイルを伸長することができない。 Linux での有名な例としては
VFAT がある。
.PP
元々の Linux の \fBtruncate\fP() と \fBftruncate\fP() システムコールは
大きなファイルオフセットを扱えるように設計されていなかった。
その結果、大きなファイルファイルを扱うことができる \fBtruncate64\fP() と \fBftruncate64\fP()
システムコールが Linux 2.4 で追加された。
ただし、glibc を使ったアプリケーションではこれらの詳細は気にする必要はない。
glibc のラッパー関数は新しいシステムコールが利用できる場合にはそれらを利用する
ようになっているからである。
.PP
いくつかの 32 ビットアーキテクチャーでは、これらのシステムコールの呼び出し時のシグネチャーが違っています。理由は \fBsyscall\fP(2)
で説明されている通りです。
.SH バグ
.\" http://sourceware.org/bugzilla/show_bug.cgi?id=12037
glibc 2.12 のヘッダーファイルにはバグがあり、 \fBftruncate\fP()  の宣言を公開するのに必要な
\fB_POSIX_C_SOURCE\fP の最小値が 200112L ではなく 200809L となっていた。 このバグは、これ以降のバージョンの
glibc では修正されている。
.SH 関連項目
 \fBtruncate\fP(1), \fBopen\fP(2), \fBstat\fP(2), \fBpath_resolution\fP(7)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 5.10 の一部である。プロジェクトの説明とバグ報告に関する情報は
\%https://www.kernel.org/doc/man\-pages/ に書かれている。
