.\" Copyright (C) 2003 Free Software Foundation, Inc.
.\"
.\" %%%LICENSE_START(GPL_NOVERSION_ONELINE)
.\" This file is distributed according to the GNU General Public License.
.\" %%%LICENSE_END
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Copyright (c) 2003 Akihiro MOTOKI, all rights reserved.
.\" Translated Mon Mar  8 2003 by Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\" Updated 2012-05-29, Akihiro MOTOKI <amotoki@gmail.com>
.\" Updated 2013-03-27, Akihiro MOTOKI <amotoki@gmail.com>
.\"
.TH IO_SUBMIT 2 2012\-07\-13 Linux "Linux Programmer's Manual"
.SH 名前
io_submit \- 非同期 I/O ブロックを処理待ちキューに登録する
.SH 書式
.nf
\fB#include <linux/aio_abi.h>\fP          /* 必要な型の定義 */

\fBint io_submit(aio_context_t \fP\fIctx_id\fP\fB, long \fP\fInr\fP\fB, struct iocb **\fP\fIiocbpp\fP\fB);\fP
.fi

\fI注\fP: このシステムコールには glibc のラッパー関数は存在しない。「注意」の節を参照。
.SH 説明
.PP
\fBio_submit\fP() システムコールは、AIO コンテキスト \fIctx_id\fP に \fInr\fP 個
の I/O リクエストを処理待ちとしてキューに追加する。 \fIiocbpp\fP 引き数は、
AIO コンテキスト \fIctx_id\fP に登録される \fInr\fP 個の AIO 制御ブロックの
配列になっていなければならない。
.SH 返り値
成功すると、 \fBio_submit\fP()  は登録した \fIiocb\fP の個数を返す (\fInr\fP が 0 の場合は 0 を返す)。
失敗時の返り値については、「注意」の節を参照すること。
.SH エラー
.TP 
\fBEAGAIN\fP
何個かの \fIiocb\fP をキューに入れるのに必要なリソースが得られない。
.TP 
\fBEBADF\fP
先頭の \fIiocb\fP に指定されたファイルディスクリプターが無効である。
.TP 
\fBEFAULT\fP
データ構造の中に無効なデータを指しているものがある。
.TP 
\fBEINVAL\fP
\fIctx_id\fP で指定された AIO コンテキストが無効である。 \fInr\fP が 0 未満で
ある。 \fI*iocbpp[0]\fP の \fIiocb\fP が適切に初期化されていないか、
指定された操作がその \fIiocb\fP 中のファイルディスクリプターに対して 無効
である。
.TP 
\fBENOSYS\fP
\fBio_submit\fP()  はこのアーキテクチャーでは実装されていない。
.SH バージョン
.PP
非同期 I/O システムコールは Linux 2.5 で初めて登場した。
.SH 準拠
.PP
\fBio_submit\fP()  は Linux 固有であり、移植を想定したプログラムで 使用すべきではない。
.SH 注意
.\" http://git.fedorahosted.org/git/?p=libaio.git
glibc はこのシステムコールのラッパー関数を提供していない。
\fBsyscall\fP(2) を使ってこのシステムコールを起動することができる。
しかし、たいていは、このシステムコールを呼び出したいのではなく、
 \fIlibaio\fP が提供している \fBio_submit\fP ラッパー関数を呼び出したい
場合がほとんどであろう。

.\" But glibc is confused, since <libaio.h> uses 'io_context_t' to declare
.\" the system call.
\fIlibaio\fP のラッパー関数では \fIctx_id\fP 引き数に別の型
(\fIio_context_t\fP) が使われることに注意すること。
また、\fIlibaio\fP のラッパー関数は、エラーの通知が通常の C ライブラリの
慣習にしたがっておらず、エラーの場合には負のエラー番号 (エラーの節に列
挙されている値の一つを負にしたもの) が返り値となる点にも注意すること。
\fBsyscall\fP(2) 経由でシステムコールを起動すると、返り値は通常のエラー通
知の慣習に したがってものとなり、エラーの場合には \-1 が返り、 \fIerrno\fP
にエラーを示す (正の) 値が設定される。
.SH 関連項目
.\" .SH AUTHOR
.\" Kent Yoder.
\fBio_cancel\fP(2), \fBio_destroy\fP(2), \fBio_getevents\fP(2), \fBio_setup\fP(2),
\fBaio\fP(7)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 3.79 の一部
である。プロジェクトの説明とバグ報告に関する情報は
http://www.kernel.org/doc/man\-pages/ に書かれている。
