.\" This man page is Copyright (C) 1998 Heiner Eisen.
.\"
.\" %%%LICENSE_START(VERBATIM_ONE_PARA)
.\" Permission is granted to distribute possibly modified copies
.\" of this page provided the header is included verbatim,
.\" and in case of nontrivial modification author and date
.\" of the modification is added to the header.
.\" %%%LICENSE_END
.\"
.\" $Id: x25.7,v 1.4 1999/05/18 10:35:12 freitag Exp $
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Copyright (c) 1999 NAKANO Takeo all rights reserved.
.\" Translated Mon 6 Dec 1999 by NAKANO Takeo <nakano@apm.seikei.ac.jp>
.\"
.TH X25 7 2017\-09\-15 Linux "Linux Programmer's Manual"
.SH 名前
x25 \- ITU\-T X.25 / ISO\-8208 プロトコルインターフェース
.SH 書式
\fB#include <sys/socket.h>\fP
.br
\fB#include <linux/x25.h>\fP
.PP
\fBx25_socket = socket(AF_X25, SOCK_SEQPACKET, 0);\fP
.SH 説明
X25 ソケットは X.25 パケット層プロトコルに対するインターフェースを提供する。 これにより、アプリケーションはパブリックな X.25
データネットワークで 通信することができるようになる。 X.25 は International Telecommunication Union's
recommendation X.25 (X.25 DTE\-DCE mode) で標準化されている。 X25 ソケットは、中間層のない X.25
ネットワーク (X.25 DTE\-DTE mode)  での通信にも用いることができる。 DTE\-DTE モードは ISO\-8208 に記述されている。
.PP
メッセージ境界は保存される。ソケットからの \fBread\fP(2)  は、反対側のソケットからの対応する \fBwrite\fP(2)
と同じ大きさのデータを受け取り、出力する。 必要がある場合は、カーネルが長いメッセージの 分割 (segmenting) と再構成
(reassembling) を行う。 これには X.25 の M ビットが用いられる。 メッセージサイズには、ハードコーディングされた上限はない。
しかし、一時的にシステムリソースが足りなかったり、 他の制約 (ソケットメモリーバッファーのサイズ制限など) が
効いてしまうと、長いメッセージの再構成には失敗するかもしれない。 この場合、その X.25 接続はリセットされることになる。
.SS ソケットアドレス
\fBAF_X25\fP ソケットアドレスファミリーは、ネットワークアドレスを表すために \fIstruct sockaddr_x25\fP を用いる。これは
ITU\-T recommendation X.121 で定義されている。
.PP
.in +4n
.EX
struct sockaddr_x25 {
    sa_family_t sx25_family;    /* must be AF_X25 */
    x25_address sx25_addr;      /* X.121 Address */
};
.EE
.in
.PP
\fIsx25_addr\fP には char 配列 \fIx25_addr[]\fP を含まれる。これは 0 で終端する文字列として解釈される。
\fIsx25_addr.x25_addr[]\fP は 15 個までの ASCII 文字を含むことができ (終端のヌルバイトは含まない)、 これが
X.121 アドレスをなす。 10 進の数文字、\(aq0\(aq から \(aq9\(aq までだけが許される。
.SS ソケットオプション
以下の X.25 特有のソケットオプションは、 \fBsetsockopt\fP(2)  で設定でき、 \fBgetsockopt\fP(2)
で取得できる。このとき \fIlevel\fP 引数には \fBSOL_X25\fP を指定する。
.TP 
\fBX25_QBITINCL\fP
X.25 の Q ビット (Qualified データビット) にユーザーがアクセス できるかどうかをコントロールする。整数の引数を取る。 0
にセットすると、 Q ビットは発信パケットには決してセットされず、 受信パケットでは無視される (デフォルト)。 1
にセットすると、ソケットから読む、あるいはソケットに送る メッセージそれぞれに先頭バイトが前置される。 ソケットから読んだデータでは、先頭バイトが 0
だと、 この到着データパケットに対応する Q ビットはセットされていなかったことになる。 先頭バイトが 1 だと、到着データパケットの Q
ビットがセットされていたことになる。 ソケットに書き込むデータの先頭バイトが 1 だと、 その発信パケットの Q ビットをセットする。 0 だと、 Q
ビットをセットしない。
.SH バージョン
AF_X25 プロトコルファミリーは Linux 2.2 の新機能である。
.SH バグ
X.25 PLP 実装は \fBCONFIG_EXPERIMENTAL\fP なので、たくさんあるだろう。
.PP
この man ページは完成していない。
.PP
まだアプリケーションプログラマー用のヘッダーファイルがない。 カーネルのヘッダーファイル \fI<linux/x25.h>\fP
をインクルードしなければならない。 \fBCONFIG_EXPERIMENTAL\fP なので、将来のバージョンのインターフェースでは
バイナリ互換性が失われるかもしれない。
.PP
X.25 N\-Reset イベントは、まだユーザープロセスに伝播しない。 したがってリセットが起こると、データは通知無しに失われる。
.SH 関連項目
\fBsocket\fP(2), \fBsocket\fP(7)
.PP
Jonathan Simon Naylor: \(lqThe Re\-Analysis and Re\-Implementation of
X.25.\(rq The URL is
.UR ftp://ftp.pspt.fi\:/pub\:/ham\:/linux\:/ax25\:/x25doc.tgz
.UE .
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 5.10 の一部である。プロジェクトの説明とバグ報告に関する情報は
\%https://www.kernel.org/doc/man\-pages/ に書かれている。
