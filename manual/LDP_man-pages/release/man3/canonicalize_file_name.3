.\" Copyright 2013 Michael Kerrisk <mtk.manpages@gmail.com>
.\" (Replaces an earlier page by Walter Harms and Michael Kerrisk)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Copyright (c) 2005 Akihiro MOTOKI all rights reserved.
.\" Translated 2005-09-06, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\" Updated 2013-05-04, Akihiro MOTOKI <amotoki@gmail.com>
.\" Updated 2013-07-15, Akihiro MOTOKI <amotoki@gmail.com>
.\"
.TH CANONICALIZE_FILE_NAME 3 2017\-09\-15 GNU "Linux Programmer's Manual"
.SH 名前
canonicalize_file_name \- 正規化された絶対パス名を返す
.SH 書式
\fB#define _GNU_SOURCE\fP /* feature_test_macros(7) 参照 */
.br
\fB#include <stdlib.h>\fP
.PP
\fBchar *canonicalize_file_name(const char *\fP\fIpath\fP\fB);\fP
.SH 説明
\fBcanonicalize_file_name\fP() 関数は \fIpath\fP
に対応する正規化された絶対パス名を示すヌル終端された文字列を返す。返された文字列では、シンボリックリンクや、パス名に含まれる \fI.\fP や \fI..\fP
は展開される。連続するスラッシュ (\fI/\fP) 文字はスラッシュ一つに置換される。
.PP
返される文字列は \fBcanonicalize_file_name\fP() により動的に割り当てられる。呼び出し側は、必要なくなった際にはこの文字列を
\fBfree\fP(3) で解放すべきである。
.PP
\fIcanonicalize_file_name(path)\fP は以下と等価である。
.PP
    realpath(path, NULL);
.SH 返り値
成功すると、 \fBcanonicalize_file_name\fP() はヌル終端された文字列を返す。エラーの場合
(例えば、パス名の中に読み込めなかったり存在しないパスが含まれている場合など)、 \fBcanonicalize_file_name\fP() は NULL
を返し、 \fIerrno\fP にエラー内容を示す値を設定する。
.SH エラー
\fBrealpath\fP(3) 参照。
.SH 属性
この節で使用されている用語の説明については、 \fBattributes\fP(7) を参照。
.TS
allbox;
lbw24 lb lb
l l l.
インターフェース	属性	値
T{
\fBcanonicalize_file_name\fP()
T}	Thread safety	MT\-Safe
.TE
.SH 準拠
この関数は GNU による拡張である。
.SH 関連項目
\fBreadlink\fP(2), \fBrealpath\fP(3)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 5.10 の一部である。プロジェクトの説明とバグ報告に関する情報は
\%https://www.kernel.org/doc/man\-pages/ に書かれている。
