.\" This man page was written by Jeremy Phelps <jphelps@notreached.net>.
.\"
.\" %%%LICENSE_START(FREELY_REDISTRIBUTABLE)
.\" Redistribute and modify at will.
.\" %%%LICENSE_END
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Copyright (c) 2003  Akihiro MOTOKI
.\"         all rights reserved.
.\" Translated Tue Jul  8 01:44:54 JST 2003
.\"         by Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\"
.TH GETPT 3 2020\-08\-13 GNU "Linux Programmer's Manual"
.SH 名前
getpt \- 新規の擬似端末マスタをオープンする
.SH 書式
.nf
\fB#define _GNU_SOURCE\fP             /* feature_test_macros(7) 参照 */
\fB#include <stdlib.h>\fP
.PP
\fBint getpt(void);\fP
.fi
.SH 説明
\fBgetpt\fP() は、新規の擬似端末デバイスをオープンし、このデバイスを参照するファイルディスクリプターを返す。 これは、 Linux
システムにおいては、以下のように擬似端末多重デバイスをオープンするのと等価である。
.PP
.in +4n
.EX
open("/dev/ptmx", O_RDWR);
.EE
.in
.PP
但し、 GNU C ライブラリを使用していても、擬似端末多重デバイスがどこか他の場所にあるシステムもある。
.SH 返り値
成功した場合、 \fBgetpt\fP()  はオープンしたファイルのディスクリプターを返す。 そうでない場合、\-1 を返し、 \fIerrno\fP
にエラーを示す値がセットされる。
.SH エラー
\fBgetpt\fP()  は \fBopen\fP(2)  で説明されている種々のエラーで失敗する可能性がある。
.SH バージョン
\fBgetpt\fP()  は、バージョン 2.1 以降の glibc で提供されている。
.SH 属性
この節で使用されている用語の説明については、 \fBattributes\fP(7) を参照。
.TS
allbox;
lb lb lb
l l l.
インターフェース	属性	値
T{
\fBgetpt\fP()
T}	Thread safety	MT\-Safe
.TE
.SH 準拠
\fBgetpt\fP()  は glibc 独自である。代わりに \fBposix_openpt\fP(3)  を使用すること。
.SH 関連項目
\fBgrantpt\fP(3), \fBposix_openpt\fP(3), \fBptsname\fP(3), \fBunlockpt\fP(3),
\fBptmx\fP(4), \fBpty\fP(7)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 5.10 の一部である。プロジェクトの説明とバグ報告に関する情報は
\%https://www.kernel.org/doc/man\-pages/ に書かれている。
