.\" Copyright 2002 Walter Harms (walter.harms@informatik.uni-oldenburg.de)
.\" and Copyright 2008, Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(GPL_NOVERSION_ONELINE)
.\" Distributed under GPL
.\" %%%LICENSE_END
.\"
.\" Based on glibc infopages
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Copyright (c) 2003 Akihiro MOTOKI all rights reserved.
.\" Translated Mon Jan 27 2003 by Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\" Updated 2008-09-18, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\"
.TH NEXTAFTER 3 2020\-12\-21 GNU "Linux Programmer's Manual"
.SH 名前
nextafter, nextafterf, nextafterl, nexttoward, nexttowardf, nexttowardl \-
浮動小数点数の操作
.SH 書式
\fB#include <math.h>\fP
.PP
\fBdouble nextafter(double \fP\fIx\fP\fB, double \fP\fIy\fP\fB);\fP
.br
\fBfloat nextafterf(float \fP\fIx\fP\fB, float \fP\fIy\fP\fB);\fP
.br
\fBlong double nextafterl(long double \fP\fIx\fP\fB, long double \fP\fIy\fP\fB);\fP
.PP
\fBdouble nexttoward(double \fP\fIx\fP\fB, long double \fP\fIy\fP\fB);\fP
.br
\fBfloat nexttowardf(float \fP\fIx\fP\fB, long double \fP\fIy\fP\fB);\fP
.br
\fBlong double nexttowardl(long double \fP\fIx\fP\fB, long double \fP\fIy\fP\fB);\fP
.PP
\fI\-lm\fP でリンクする。
.PP
.RS -4
glibc 向けの機能検査マクロの要件 (\fBfeature_test_macros\fP(7)  参照):
.RE
.PP
.ad l
\fBnextafter\fP():
.RS 4
.\"    || _XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED
_ISOC99_SOURCE || _POSIX_C_SOURCE\ >=\ 200112L
    || _XOPEN_SOURCE\ >=\ 500
    || /* Since glibc 2.19: */ _DEFAULT_SOURCE
    || /* Glibc versions <= 2.19: */ _BSD_SOURCE || _SVID_SOURCE
.RE
.br
\fBnextafterf\fP(), \fBnextafterl\fP():
.RS 4
_ISOC99_SOURCE || _POSIX_C_SOURCE\ >=\ 200112L
    || /* Since glibc 2.19: */ _DEFAULT_SOURCE
    || /* Glibc versions <= 2.19: */ _BSD_SOURCE || _SVID_SOURCE
.RE
.br
\fBnexttoward\fP(), \fBnexttowardf\fP(), \fBnexttowardl\fP():
.RS 4
_XOPEN_SOURCE\ >=\ 600 || _ISOC99_SOURCE || _POSIX_C_SOURCE\ >=\ 200112L
.RE
.ad b
.SH 説明
関数 \fBnextafter\fP(), \fBnextafterf\fP(), \fBnextafterl\fP() は、\fIy\fP に向かう方向で \fIx\fP
のすぐ次の浮動小数点数表現を返す。 \fIy\fP が \fIx\fP より小さい場合、 \fIx\fP より小さい最大の浮動小数点表現の値を返す。
.PP
\fIx\fP が \fIy\fP と等しい場合、\fIy\fP が返される。
.PP
関数 \fBnexttoward\fP(), \fBnexttowardf\fP(), \fBnexttowardl\fP() は、2 番目の引数が \fIlong
double\fP 型である点以外、 対応する \fBnextafter\fP() 関数と同じはたらきをする。
.SH 返り値
成功すると、これらの関数は \fIy\fP に向かう方向で \fIx\fP の すぐ次の浮動小数点数表現を返す。
.PP
\fIx\fP が \fIy\fP と等しい場合、 (\fIx\fP と同じ型にキャストされた)  \fIy\fP が返される。
.PP
\fIx\fP か \fIy\fP が NaN の場合、NaN が返される。
.PP
.\" e.g., DBL_MAX
\fIx\fP が有限値で 結果がオーバーフローする場合、 範囲エラー (range error) が発生し、 各関数はそれぞれ \fBHUGE_VAL\fP,
\fBHUGE_VALF\fP, \fBHUGE_VALL\fP を返す。返り値には数学的に正しい符号が付与される。
.PP
\fIx\fP が \fIy\fP と同じではなく、正しい関数の結果が非正規化数かゼロかアンダーフローの場合、 範囲エラーが発生し、 (表現可能な場合には)
正しい値が、(そうでない場合には) 0.0 が返される。
.SH エラー
これらの関数を呼び出した際にエラーが発生したかの判定方法についての情報は \fBmath_error\fP(7)  を参照のこと。
.PP
以下のエラーが発生する可能性がある。
.TP 
範囲エラー (range error): 結果のオーバーフロー
.\" e.g., nextafter(DBL_MAX, HUGE_VAL);
\fIerrno\fP に \fBERANGE\fP が設定される。 オーバーフロー浮動小数点例外 (\fBFE_OVERFLOW\fP)  が上がる。
.TP 
範囲エラー: 結果が非正規化数かアンダーフロー
.\" e.g., nextafter(DBL_MIN, 0.0);
\fIerrno\fP に \fBERANGE\fP が設定される。 アンダーフロー浮動小数点例外 (\fBFE_UNDERFLOW\fP)  が上がる。
.SH 属性
この節で使用されている用語の説明については、 \fBattributes\fP(7) を参照。
.TS
allbox;
lbw28 lb lb
l l l.
インターフェース	属性	値
T{
\fBnextafter\fP(),
\fBnextafterf\fP(),
.br
\fBnextafterl\fP(),
\fBnexttoward\fP(),
.br
\fBnexttowardf\fP(),
\fBnexttowardl\fP()
T}	Thread safety	MT\-Safe
.TE
.SH 準拠
C99, POSIX.1\-2001, POSIX.1\-2008.  この関数は IEC 559 で定義されている (また IEEE 754/IEEE
854 では付録で推奨関数として定義されている)。
.SH バグ
glibc バージョン 2.5 以前では、アンダーフローが発生した際に、 これらの関数はアンダーフロー浮動小数点例外 (\fBFE_UNDERFLOW\fP)
を上がない。
.PP
.\" https://www.sourceware.org/bugzilla/show_bug.cgi?id=6799
glibc の 2.23 より前のバージョンでは、これらの関数は \fIerrno\fP を設定しない。
.SH 関連項目
\fBnearbyint\fP(3)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 5.10 の一部である。プロジェクトの説明とバグ報告に関する情報は
\%https://www.kernel.org/doc/man\-pages/ に書かれている。
