.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 21:48:06 1993 by Rik Faith (faith@cs.unc.edu)
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Copyright (c) 1998 NAKANO Takeo all rights reserved.
.\" Translated 1998-03-01, NAKANO Takeo <nakano@apm.seikei.ac.jp>
.\" Modified 1998-06-22, NAKANO Takeo
.\" Updated 2008-09-19, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\"
.TH GETNETENT 3 2020\-12\-21 GNU "Linux Programmer's Manual"
.SH 名前
getnetent, getnetbyname, getnetbyaddr, setnetent, endnetent \-
ネットワークエントリーを取得する
.SH 書式
.nf
\fB#include <netdb.h>\fP
.PP
\fBstruct netent *getnetent(void);\fP
.PP
\fBstruct netent *getnetbyname(const char *\fP\fIname\fP\fB);\fP
.PP
\fBstruct netent *getnetbyaddr(uint32_t \fP\fInet\fP\fB, int \fP\fItype\fP\fB);\fP
.PP
\fBvoid setnetent(int \fP\fIstayopen\fP\fB);\fP
.PP
\fBvoid endnetent(void);\fP
.fi
.SH 説明
\fBgetnetent\fP()  関数はネットワークデータベースから次のエントリーを読み込み、 そのエントリーを \fInetent\fP
構造体の要素別のフィールドに格納し、 その構造体を返す。 必要であれば、データベースへの接続がオープンされる。
.PP
\fBgetnetbyname\fP()  関数は、ネットワーク名 \fIname\fP にマッチするエントリーを データベースから探し、そのエントリーを収めた
\fInetent\fP 構造体を返す。
.PP
\fBgetnetbyaddr\fP()  関数は、\fItype\fP 型のネットワーク番号 \fInet\fP にマッチするエントリーを
データベースから探し、そのエントリーを収めた \fInetent\fP 構造体を返す。 \fInet\fP 引数はホストバイトオーダでなければならない。
.PP
\fBsetnetent\fP()  関数はデータベースへの接続をオープンし、 次の読み込みエントリーを先頭のエントリーに設定する。 \fIstayopen\fP
が 0 でない場合、 一つ一つの \fBgetnet*\fP()  関数の呼び出し間でデータベースへの接続をクローズしない。
.PP
\fBendnetent\fP()  関数はデータベースへの接続をクローズする。
.PP
\fInetent\fP 構造体は \fI<netdb.h>\fP で以下のように定義されている。
.PP
.in +4n
.EX
struct netent {
    char      *n_name;     /* official network name */
    char     **n_aliases;  /* alias list */
    int        n_addrtype; /* net address type */
    uint32_t   n_net;      /* network number */
}
.EE
.in
.PP
\fInetent\fP 構造体のメンバは以下の通り。
.TP 
\fIn_name\fP
ネットワークの正式名 (official name)。
.TP 
\fIn_aliases\fP
ネットワークの別名からなるリスト。 リストはヌルで終端される。
.TP 
\fIn_addrtype\fP
ネットワーク番号の形式。現在は \fBAF_INET\fP のみ。
.TP 
\fIn_net\fP
ホストバイトオーダ形式のネットワーク番号。
.SH 返り値
\fBgetnetent\fP(), \fBgetnetbyname\fP(), \fBgetnetbyaddr\fP()  関数は、静的に割り当てられた
\fInetent\fP 構造体へのポインターを返す。 エラーが起こったり、ファイルの末尾に達した場合はヌルポインターを返す。
.SH ファイル
.TP 
\fI/etc/networks\fP
ネットワークデータベースファイル
.SH 属性
この節で使用されている用語の説明は \fBattributes\fP(7) を参照のこと。
.TS
allbox;
lbw14 lb lbw25
l l l.
Interface	Attribute	Value
T{
\fBgetnetent\fP()
T}	Thread safety	T{
MT\-Unsafe race:netent
.br
race:netentbuf env locale
T}
T{
\fBgetnetbyname\fP()
T}	Thread safety	T{
MT\-Unsafe race:netbyname
.br
env locale
T}
T{
\fBgetnetbyaddr\fP()
T}	Thread safety	T{
MT\-Unsafe race:netbyaddr
.br
locale
T}
T{
\fBsetnetent\fP(),
.br
\fBendnetent\fP()
T}	Thread safety	T{
MT\-Unsafe race:netent env
.br
locale
T}
.TE
.sp 1
In the above table, \fInetent\fP in \fIrace:netent\fP signifies that if any of the
functions \fBsetnetent\fP(), \fBgetnetent\fP(), or \fBendnetent\fP()  are used in
parallel in different threads of a program, then data races could occur.
.SH 準拠
POSIX.1\-2001, POSIX.1\-2008, 4.3BSD.
.SH 注意
バージョン 2.2 より前の glibc では、 \fBgetnetbyaddr\fP()  の引数 \fInet\fP は \fIlong\fP 型だった。
.SH 関連項目
.\" .BR networks (5)
\fBgetnetent_r\fP(3), \fBgetprotoent\fP(3), \fBgetservent\fP(3)
.br
RFC\ 1101
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 5.10 の一部である。プロジェクトの説明とバグ報告に関する情報は
\%https://www.kernel.org/doc/man\-pages/ に書かれている。
