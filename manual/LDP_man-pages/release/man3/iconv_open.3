.\" Copyright (c) Bruno Haible <haible@clisp.cons.org>
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_ONEPARA)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"   GNU glibc-2 source code and manual
.\"   OpenGroup's Single UNIX specification
.\"     http://www.UNIX-systems.org/online.html
.\"
.\" 2007-03-31 Bruno Haible, Describe the glibc/libiconv //TRANSLIT
.\" and //IGNORE extensions for 'tocode'.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Copyright (c) 2000 Yuichi SATO
.\"         all rights reserved.
.\" Translated Tue Jul 11 19:02:58 JST 2000
.\"         by Yuichi SATO <sato@complex.eng.hokudai.ac.jp>
.\" Updated 2007-06-01, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v2.50
.\"
.TH ICONV_OPEN 3 2017\-09\-15 GNU "Linux Programmer's Manual"
.SH 名前
iconv_open \- 文字セット変換のためのディスクリプターを割り当てる
.SH 書式
.nf
\fB#include <iconv.h>\fP
.PP
\fBiconv_t iconv_open(const char *\fP\fItocode\fP\fB, const char *\fP\fIfromcode\fP\fB);\fP
.fi
.SH 説明
\fBiconv_open\fP()  関数は、文字エンコーディング \fIfromcode\fP から 文字エンコーディング \fItocode\fP
へのバイト文字列変換に適した 変換ディスクリプターを割り当てる。
.PP
\fIfromcode\fP と \fItocode\fP に使うことのできる値と、 サポートされる組み合わせは、システムに依存する。 GNU C
ライブラリでは、使うことのできる値は \fIiconv \-\-list\fP コマンドでリストされ、 リストされたすべての値の組み合わせがサポートされる。
さらに、 GNU C ライブラリと GNU libiconv ライブラリでは、 以下の接尾辞がサポートされている。
.TP 
//TRANSLIT
\fItocode\fP の後ろに文字列 "//TRANSLIT" が付いている場合、 翻訳 (transliteration) が有効になる。この場合、
変換先の文字セットで表現できない文字を、その文字と同じように見える 文字 (複数文字の場合もある) で表現することができる。
.TP 
//IGNORE
\fItocode\fP の後ろに文字列 "//IGNORE" が付いている場合、 変換先の文字セットで表現できない文字は黙って無視される。
.PP
この関数を読んで得られた変換ディスクリプターは、 \fBiconv\fP(3)  で 何度でも使うことができる。 これは \fBiconv_close\fP(3)
を使って解放されるまで有効である。
.PP
変換ディスクリプターは変換状態を持つ。 \fBiconv_open\fP()  を用いて生成された後、変換状態は初期状態である。 \fBiconv\fP(3)
を使うことにより、ディスクリプターの変換状態が変更される。 変換状態を初期状態に戻すには、 \fIinbuf\fP 引数を NULL として
\fBiconv\fP(3)  を用いること。
.SH 返り値
\fBiconv_open\fP()  関数は、新たに割り当てられた変換ディスクリプターを返す。 エラーの場合、この関数は \fIerrno\fP を設定し、
\fI(iconv_t)\ \-1\fP を返す。
.SH エラー
他のいろいろなエラーのうち、以下のエラーが起こりうる。
.TP 
\fBEINVAL\fP
\fIfromcode\fP から \fItocode\fP への変換は、この実装ではサポートされていない。
.SH バージョン
この関数はバージョン 2.1 以降の glibc で利用可能である。
.SH 属性
この節で使用されている用語の説明については、 \fBattributes\fP(7) を参照。
.TS
allbox;
lb lb lb
l l l.
インターフェース	属性	値
T{
\fBiconv_open\fP()
T}	Thread safety	MT\-Safe locale
.TE
.sp 1
.SH 準拠
POSIX.1\-2001, POSIX.1\-2008, SUSv2.
.SH 関連項目
\fBiconv\fP(1), \fBiconv\fP(3), \fBiconv_close\fP(3)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 5.10 の一部である。プロジェクトの説明とバグ報告に関する情報は
\%https://www.kernel.org/doc/man\-pages/ に書かれている。
