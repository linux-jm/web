.\" Copyright 2007 (C) Michael Kerrisk <mtk.manpages@gmail.com>
.\" some parts Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 21:46:21 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Fri Aug  4 10:51:53 2000 - patch from Joseph S. Myers
.\" 2007-12-15, mtk, Mostly rewritten
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Copyright (c) 1996 Kentaro OGAWA
.\"         all rights reserved.
.\" Translated 1996-07-13, Kentaro OGAWA <k_ogawa@oyna.cc.muroran-it.ac.jp>
.\" Updated 2008-02-09, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\" Updated 2010-12-26, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\"
.TH ABORT 3 2020\-06\-09 GNU "Linux Programmer's Manual"
.SH 名前
abort \- プロセスの異常終了を生じさせる
.SH 書式
.nf
\fB#include <stdlib.h>\fP
.PP
\fBvoid abort(void);\fP
.fi
.SH 説明
\fBabort\fP() 関数は、まず \fBSIGABRT\fP の禁止 (block) を解除してから、 (\fBraise\fP(3) が呼び出されたかのように)
呼び出し元のプロセスに \fBSIGABRT\fP シグナルを上げる。その結果、 \fBSIGABRT\fP シグナルが捕捉 (caught)
されていて、対応するシグナルハンドラーが返って来ない場合 (\fBlongjmp\fP(3) 参照) 以外は、プログラムの異常終了が起こる。
.PP
\fBSIGABRT\fP シグナルが無視されている場合や返って来るシグナルハンドラーで捕捉されている場合であっても、 \fBabort\fP()
関数はそのプロセスを終了する。 \fBSIGABRT\fP シグナルに対する処理方法をデフォルトに戻してから、再度 \fBSIGABRT\fP
シグナルを上げることで、このような動作になる。
.SH 返り値
\fBabort\fP() 関数が返ることはない。
.SH 属性
この節で使用されている用語の説明については、 \fBattributes\fP(7) を参照。
.TS
allbox;
lb lb lb
l l l.
インターフェース	属性	値
T{
\fBabort\fP()
T}	Thread safety	MT\-Safe
.TE
.SH 準拠
SVr4, POSIX.1\-2001, POSIX.1\-2008, 4.3BSD, C89, C99.
.SH 注意
.\" glibc commit 91e7cf982d0104f0e71770f5ae8e3faf352dea9f
glibc 2.26 以前は、 \fBabort\fP() 関数によってプロセスの終了が引き起こされたときには、すべての開いているストリームは
(\fBclose\fP(3) で) 閉じられフラッシュされる。しかしながら、この動作はデッドロックやデータ破壊につながる場合がある。そのため、 glibc
2.27 以降では、 \fBabort\fP() はストリームをフラッシュせずにプロセスを終了する。 POSIX.1\-2001
ではどちらの動作も認めており、「\fBabort\fP() にはすべてのオープンされたストリームに対して fclose()
を行おうとする処理が含まれていてもよい」 ("\fBabort\fP() may include an attempt to effect fclose()
on all open streams") と書かれている。
.SH 関連項目
\fBgdb\fP(1), \fBsigaction\fP(2), \fBassert\fP(3), \fBexit\fP(3), \fBlongjmp\fP(3),
\fBraise\fP(3)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 5.10 の一部である。プロジェクトの説明とバグ報告に関する情報は
\%https://www.kernel.org/doc/man\-pages/ に書かれている。
