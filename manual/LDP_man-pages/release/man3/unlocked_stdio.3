.\" Copyright (C) 2001 Andries Brouwer <aeb@cwi.nl>.
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Copyright (c) 2001 Akihiro MOTOKI
.\"         all rights reserved.
.\" Translated Fri Nov 2 23:08:42 2001
.\"         by Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\"
.TH UNLOCKED_STDIO 3 2017\-09\-15 "" "Linux Programmer's Manual"
.SH 名前
getc_unlocked, getchar_unlocked, putc_unlocked, putchar_unlocked \-
ロックを行わずに標準入出力を行う関数群
.SH 書式
.nf
\fB#include <stdio.h>\fP
.PP
\fBint getc_unlocked(FILE *\fP\fIstream\fP\fB);\fP
\fBint getchar_unlocked(void);\fP
\fBint putc_unlocked(int \fP\fIc\fP\fB, FILE *\fP\fIstream\fP\fB);\fP
\fBint putchar_unlocked(int \fP\fIc\fP\fB);\fP
.PP
\fBvoid clearerr_unlocked(FILE *\fP\fIstream\fP\fB);\fP
\fBint feof_unlocked(FILE *\fP\fIstream\fP\fB);\fP
\fBint ferror_unlocked(FILE *\fP\fIstream\fP\fB);\fP
\fBint fileno_unlocked(FILE *\fP\fIstream\fP\fB);\fP
\fBint fflush_unlocked(FILE *\fP\fIstream\fP\fB);\fP
\fBint fgetc_unlocked(FILE *\fP\fIstream\fP\fB);\fP
\fBint fputc_unlocked(int \fP\fIc\fP\fB, FILE *\fP\fIstream\fP\fB);\fP
\fBsize_t fread_unlocked(void *\fP\fIptr\fP\fB, size_t \fP\fIsize\fP\fB, size_t \fP\fIn\fP\fB,\fP
\fB                      FILE *\fP\fIstream\fP\fB);\fP
\fBsize_t fwrite_unlocked(const void *\fP\fIptr\fP\fB, size_t \fP\fIsize\fP\fB, size_t \fP\fIn\fP\fB,\fP
\fB                      FILE *\fP\fIstream\fP\fB);\fP
.PP
\fBchar *fgets_unlocked(char *\fP\fIs\fP\fB, int \fP\fIn\fP\fB, FILE *\fP\fIstream\fP\fB);\fP
\fBint fputs_unlocked(const char *\fP\fIs\fP\fB, FILE *\fP\fIstream\fP\fB);\fP

\fB#include <wchar.h>\fP
.PP
\fBwint_t getwc_unlocked(FILE *\fP\fIstream\fP\fB);\fP
\fBwint_t getwchar_unlocked(void);\fP
\fBwint_t fgetwc_unlocked(FILE *\fP\fIstream\fP\fB);\fP
\fBwint_t fputwc_unlocked(wchar_t \fP\fIwc\fP\fB, FILE *\fP\fIstream\fP\fB);\fP
\fBwint_t putwc_unlocked(wchar_t \fP\fIwc\fP\fB, FILE *\fP\fIstream\fP\fB);\fP
\fBwint_t putwchar_unlocked(wchar_t \fP\fIwc\fP\fB);\fP
\fBwchar_t *fgetws_unlocked(wchar_t *\fP\fIws\fP\fB, int \fP\fIn\fP\fB, FILE *\fP\fIstream\fP\fB);\fP
\fBint fputws_unlocked(const wchar_t *\fP\fIws\fP\fB, FILE *\fP\fIstream\fP\fB);\fP
.fi
.PP
.RS -4
glibc 向けの機能検査マクロの要件 (\fBfeature_test_macros\fP(7)  参照):
.ad l
.RE
.PP
\fBgetc_unlocked\fP(), \fBgetchar_unlocked\fP(), \fBputc_unlocked\fP(),
\fBputchar_unlocked\fP():
.RS 4
/* Since glibc 2.24: */ _POSIX_C_SOURCE\ >=\ 199309L
    || /* Glibc versions <= 2.23: */ _POSIX_C_SOURCE
    || /* Glibc versions <= 2.19: */ _SVID_SOURCE || _BSD_SOURCE
.RE
.PP
\fBclearerr_unlocked\fP(), \fBfeof_unlocked\fP(), \fBferror_unlocked\fP(),
\fBfileno_unlocked\fP(), \fBfflush_unlocked\fP(), \fBfgetc_unlocked\fP(),
\fBfputc_unlocked\fP(), \fBfread_unlocked\fP(), \fBfwrite_unlocked\fP():
.RS 4
/* Glibc since 2.19: */ _DEFAULT_SOURCE
    || /* Glibc versions <= 2.19: */ _SVID_SOURCE || _BSD_SOURCE
.RE
.PP
\fBfgets_unlocked\fP(), \fBfputs_unlocked\fP(), \fBgetwc_unlocked\fP(),
\fBgetwchar_unlocked\fP(), \fBfgetwc_unlocked\fP(), \fBfputwc_unlocked\fP(),
\fBputwchar_unlocked\fP(), \fBfgetws_unlocked\fP(), \fBfputws_unlocked\fP():
.RS 4
_GNU_SOURCE
.RE
.ad b
.SH 説明
これらの関数は、末尾に "_unlocked" がついていない関数と同じ動作をするが、
ファイルのロックを使用しない点が異なる。(これらの関数自身はファイルのロック をセットせず、他の関数によってロックがセットされているかどうかのチェックも
行わない) それゆえ、スレッド(thread)で安全に使用することができない。 \fBflockfile\fP(3)  を参照のこと。
.SH 属性
この節で使用されている用語の説明については、 \fBattributes\fP(7) を参照。
.ad l
.TS
allbox;
lbw20 lb lb
l l l.
インターフェース	属性	値
T{
\fBgetc_unlocked\fP(),
\fBputc_unlocked\fP(),
\fBclearerr_unlocked\fP(),
\fBfflush_unlocked\fP(),
\fBfgetc_unlocked\fP(),
\fBfputc_unlocked\fP(),
\fBfread_unlocked\fP(),
\fBfwrite_unlocked\fP(),
\fBfgets_unlocked\fP(),
\fBfputs_unlocked\fP(),
\fBgetwc_unlocked\fP(),
\fBfgetwc_unlocked\fP(),
\fBfputwc_unlocked\fP(),
\fBputwc_unlocked\fP(),
\fBfgetws_unlocked\fP(),
\fBfputws_unlocked\fP()
T}	Thread safety	MT\-Safe race:stream
T{
\fBgetchar_unlocked\fP(),
\fBgetwchar_unlocked\fP()
T}	Thread safety	MT\-Unsafe race:stdin
T{
\fBputchar_unlocked\fP(),
\fBputwchar_unlocked\fP()
T}	Thread safety	MT\-Unsafe race:stdout
T{
\fBfeof_unlocked\fP(),
\fBferror_unlocked\fP(),
\fBfileno_unlocked\fP()
T}	Thread safety	MT\-Safe
.TE
.ad
.SH 準拠
\fBgetc_unlocked\fP(), \fBgetchar_unlocked\fP(), \fBputc_unlocked\fP(),
\fBputchar_unlocked\fP()  の 4 つの関数は POSIX.1\-2001 と POSIX.1\-2008 に規定されている。
.PP
.\" E.g., in HP-UX 10.0. In HP-UX 10.30 they are called obsolescent, and
.\" moved to a compatibility library.
.\" Available in HP-UX 10.0: clearerr_unlocked, fclose_unlocked,
.\" feof_unlocked, ferror_unlocked, fflush_unlocked, fgets_unlocked,
.\" fgetwc_unlocked, fgetws_unlocked, fileno_unlocked, fputs_unlocked,
.\" fputwc_unlocked, fputws_unlocked, fread_unlocked, fseek_unlocked,
.\" ftell_unlocked, fwrite_unlocked, getc_unlocked, getchar_unlocked,
.\" getw_unlocked, getwc_unlocked, getwchar_unlocked, putc_unlocked,
.\" putchar_unlocked, puts_unlocked, putws_unlocked, putw_unlocked,
.\" putwc_unlocked, putwchar_unlocked, rewind_unlocked, setvbuf_unlocked,
.\" ungetc_unlocked, ungetwc_unlocked.
非標準の \fB*_unlocked\fP()  の仲間は 2、3 の UNIX システムで定義されており、 最近の glibc では使用可能であるが、
これらの関数は使わない方がよいだろう。
.SH 関連項目
\fBflockfile\fP(3), \fBstdio\fP(3)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 5.10 の一部である。プロジェクトの説明とバグ報告に関する情報は
\%https://www.kernel.org/doc/man\-pages/ に書かれている。
