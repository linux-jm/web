.\" Copyright 2002 Walter Harms (walter.harms@informatik.uni-oldenburg.de)
.\" and Copyright 2008, Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(GPL_NOVERSION_ONELINE)
.\" Distributed under GPL
.\" %%%LICENSE_END
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Copyright (c) 2003  Akihiro MOTOKI
.\"         all rights reserved.
.\" Translated Tue Sep  9 04:06:20 JST 2003
.\"         by Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\" Updated 2008-09-16, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\"
.TH SINCOS 3 2020\-06\-09 GNU "Linux Programmer's Manual"
.SH 名前
sincos, sincosf, sincosl \- 正弦と余弦を同時に計算する
.SH 書式
.nf
\fB#define _GNU_SOURCE\fP         /* feature_test_macros(7) 参照 */
\fB#include <math.h>\fP
.PP
\fBvoid sincos(double \fP\fIx\fP\fB, double *\fP\fIsin\fP\fB, double *\fP\fIcos\fP\fB);\fP
\fBvoid sincosf(float \fP\fIx\fP\fB, float *\fP\fIsin\fP\fB, float *\fP\fIcos\fP\fB);\fP
\fBvoid sincosl(long double \fP\fIx\fP\fB, long double *\fP\fIsin\fP\fB, long double *\fP\fIcos\fP\fB);\fP
.fi
.PP
\fI\-lm\fP でリンクする。
.SH 説明
アプリケーションの中には、同じ角度 \fIx\fP について正弦と余弦の両方の計算が必要なものがある。 この関数は両者を同時に計算し、その結果を
\fI*sin\fP と \fI*cos\fP に格納する。この関数を使うのは、 \fBsin\fP(3) と \fBcos\fP(3)
の二つの関数を分けて呼び出すより効率的である。
.PP
\fIx\fP が NaN の場合、 \fI*sin\fP と \fI*cos\fP に NaN が返される。
.PP
\fIx\fP が正の無限大か負の無限大の場合、 領域エラー (domain error) が発生し、 \fI*sin\fP と \fI*cos\fP に NaN
が返される。
.SH 返り値
これらの関数は \fIvoid\fP を返す。
.SH エラー
これらの関数を呼び出した際にエラーが発生したかの判定方法についての情報は \fBmath_error\fP(7)  を参照のこと。
.PP
以下のエラーが発生する可能性がある。
.TP 
領域エラー (domain error): \fIx\fP が無限大である
\fIerrno\fP に \fBEDOM\fP が設定される (「バグ」の節も参照)。 不正 (invalid) 浮動小数点例外 (\fBFE_INVALID\fP)
が上がる。
.SH バージョン
これらの関数は glibc バージョン 2.1 で初めて登場した。
.SH 属性
この節で使用されている用語の説明については、 \fBattributes\fP(7) を参照。
.TS
allbox;
lbw30 lb lb
l l l.
インターフェース	属性	値
T{
\fBsincos\fP(),
\fBsincosf\fP(),
\fBsincosl\fP()
T}	Thread safety	MT\-Safe
.TE
.SH 準拠
これらの関数は GNU による拡張である。
.SH 注意
To see the performance advantage of \fBsincos\fP(), it may be necessary to
disable \fBgcc\fP(1)  built\-in optimizations, using flags such as:
.PP
.in +4n
.EX
cc \-O \-lm \-fno\-builtin prog.c
.EE
.in
.SH バグ
.\" https://www.sourceware.org/bugzilla/show_bug.cgi?id=15467
バージョン 2.22 より前の glibc の実装では、 領域エラーが発生した際に、 \fIerrno\fP に \fBEDOM\fP が設定されなかった。
.SH 関連項目
\fBcos\fP(3), \fBsin\fP(3), \fBtan\fP(3)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 5.10 の一部である。プロジェクトの説明とバグ報告に関する情報は
\%https://www.kernel.org/doc/man\-pages/ に書かれている。
