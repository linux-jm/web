.\" Copyright (c) 1993 Luigi P. Bai (lpb@softint.com) July 28, 1993
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" Modified Wed Jul 28 10:57:35 1993, Rik Faith <faith@cs.unc.edu>
.\" Modified Sun Nov 28 16:43:30 1993, Rik Faith <faith@cs.unc.edu>
.\"          with material from Giorgio Ciucci <giorgio@crcc.it>
.\" Portions Copyright 1993 Giorgio Ciucci <giorgio@crcc.it>
.\" Modified Tue Oct 22 22:03:17 1996 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified, 8 Jan 2003, Michael Kerrisk, <mtk.manpages@gmail.com>
.\"	Removed EIDRM from errors - that can't happen...
.\" Modified, 27 May 2004, Michael Kerrisk <mtk.manpages@gmail.com>
.\"     Added notes on capability requirements
.\" Modified, 11 Nov 2004, Michael Kerrisk <mtk.manpages@gmail.com>
.\"	Language and formatting clean-ups
.\"	Added notes on /proc files
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Copyright (c) 1997 HANATAKA Shinya
.\"         all rights reserved.
.\" Translated 1997-03-01, HANATAKA Shinya <hanataka@abyss.rim.or.jp>
.\" Updated & Modified 2001-06-03, Yuichi SATO <ysato@h4.dion.ne.jp>
.\" Updated 2001-12-22, Kentaro Shirakata <argrath@ub32.org>
.\" Updated 2002-10-16, Kentaro Shirakata <argrath@ub32.org>
.\" Updated 2003-02-23, Kentaro Shirakata <argrath@ub32.org>
.\" Updated 2005-03-02, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\" Updated 2005-11-04, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\" Updated 2006-07-21, Akihiro MOTOKI, LDP v2.36
.\" Updated 2013-05-06, Akihiro MOTOKI <amotoki@gmail.com>
.\" Updated 2013-07-24, Akihiro MOTOKI <amotoki@gmail.com>
.\"
.TH SHMGET 2 2020\-04\-11 Linux "Linux Programmer's Manual"
.SH 名前
shmget \- System V 共有メモリーセグメントを割り当てる
.SH 書式
.ad l
\fB#include <sys/ipc.h>\fP
.br
\fB#include <sys/shm.h>\fP
.PP
\fBint shmget(key_t \fP\fIkey\fP\fB, size_t \fP\fIsize\fP\fB, int \fP\fIshmflg\fP\fB);\fP
.ad b
.SH 説明
\fBshmget\fP()  returns the identifier of the System\ V shared memory segment
associated with the value of the argument \fIkey\fP.  It may be used either to
obtain the identifier of a previously created shared memory segment (when
\fIshmflg\fP is zero and \fIkey\fP does not have the value \fBIPC_PRIVATE\fP), or to
create a new set.
.PP
\fIkey\fP の値が \fBIPC_PRIVATE\fP の場合、もしくは \fIkey\fP に対応する共有メモリーセグメントが存在せず、 \fIshmflg\fP に
\fBIPC_CREAT\fP が指定されていた場合、 新しい共有メモリーセグメントを作成する。 作成される共有メモリーセグメントは、 \fIsize\fP
引数の値を \fBPAGE_SIZE\fP の倍数へと切り上げた (round up) 大きさとなる。
.PP
\fIshmflg\fP に \fBIPC_CREAT\fP と \fBIPC_EXCL\fP の両方が指定された場合、 \fIkey\fP
に対応する共有メモリーセグメントが既に存在すると、 \fBshmget\fP()  は失敗し、 \fIerrno\fP に \fBEEXIST\fP が設定される
(これは \fBopen\fP(2)  に \fBO_CREAT | O_EXCL\fP を指定した場合の動作と同じである)。
.PP
\fIshmflg\fP は以下の内容から構成される:
.TP 
\fBIPC_CREAT\fP
新しいセグメントを作成する。このフラグが指定されなかった場合、 \fBshmget\fP()  は \fIkey\fP に対応するセグメントを探し、
ユーザーがそのセグメントにアクセスする許可があるかどうかをチェックする。
.TP 
\fBIPC_EXCL\fP
このフラグは \fBIPC_CREAT\fP とともに使用し、 この呼び出しで確実にセグメントが作成されるようにする。 セグメントが既に存在した場合には、
呼び出しは失敗する。
.TP 
\fBSHM_HUGETLB\fP (Linux 2.6 以降)
"ヒュージページ (huge page)" を使うセグメントを割り当てる。詳細な情報は、Linux カーネルソースのファイル
\fIDocumentation/admin\-guide/vm/hugetlbpage.rst\fP を参照。
.TP 
\fBSHM_HUGE_2MB\fP, \fBSHM_HUGE_1GB\fP (Linux 3.8 以降)
.\" See https://lwn.net/Articles/533499/
Used in conjunction with \fBSHM_HUGETLB\fP to select alternative hugetlb page
sizes (respectively, 2\ MB and 1\ GB)  on systems that support multiple
hugetlb page sizes.
.IP
More generally, the desired huge page size can be configured by encoding the
base\-2 logarithm of the desired page size in the six bits at the offset
\fBSHM_HUGE_SHIFT\fP.  Thus, the above two constants are defined as:
.IP
.in +4n
.EX
#define SHM_HUGE_2MB    (21 << SHM_HUGE_SHIFT)
#define SHM_HUGE_1GB    (30 << SHM_HUGE_SHIFT)
.EE
.in
.IP
For some additional details, see the discussion of the similarly named
constants in \fBmmap\fP(2).
.TP 
\fBSHM_NORESERVE\fP (Linux 2.6.15 以降)
.\" As at 2.6.17-rc2, this flag has no effect if SHM_HUGETLB was also
.\" specified.
このフラグは、 \fBmmap\fP(2)  の \fBMAP_NORESERVE\fP フラグと同じ役割を果たす。
このセグメントに対するスワップ空間の予約を行わない。 スワップ空間を予約した場合は、そのセグメントの変更が必ず成功することが
保証される。スワップ空間の予約を行わなかった場合は、物理メモリーに空きが ないと書き込み時に \fBSIGSEGV\fP を受け取る可能性がある。
\fBproc\fP(5)  にある \fI/proc/sys/vm/overcommit_memory\fP ファイルに関する議論も参照のこと。
.PP
上記のフラグに加えて、 \fIshmflg\fP の下位 9 ビットは、所有者、グループ、その他への許可を指定する。 これらのビットは \fBopen\fP(2)
の \fImode\fP 引数と同じ形式で同じ意味を持つ。 今のところ、システムは実行 (execute) 許可を参照しない。
.PP
共有メモリーセグメントが新たに作成される際、 共有メモリーセグメントの内容は 0 で初期化され、 関連情報を保持するデータ構造体 \fIshmid_ds\fP
は以下のように初期化される。
.IP \(bu 2
\fIshm_perm.cuid\fP と \fIshm_perm.uid\fP に呼び出し元プロセスの実効 (effective) ユーザーID を設定する。
.IP \(bu
\fIshm_perm.cgid\fP と \fIshm_perm.gid\fP に呼び出し元プロセスの実効グループID を設定する。
.IP \(bu
\fIshm_perm.mode\fP の下位 9 ビットに \fIshmflg\fP の下位 9 ビットを設定する。
.IP \(bu
\fIshm_segsz\fP に \fIsize\fP の値を設定する。
.IP \(bu
\fIshm_lpid\fP, \fIshm_nattch\fP, \fIshm_atime\fP, \fIshm_dtime\fP に 0 を設定する。
.IP \(bu
\fIshm_ctime\fP に現在の時刻を設定する。
.PP
共有メモリーセグメントが既に存在する場合、アクセス許可の検査と、 破壊 (destruction) マークがつけられていないかのチェックが行われる。
.SH 返り値
成功の場合、有効な共有メモリーセグメントの識別子が返される。 エラーの場合、 \-1 が返り、 \fIerrno\fP にエラーを示す値が設定される。
.SH エラー
失敗した場合は \fIerrno\fP が以下のどれかに設定される:
.TP 
\fBEACCES\fP
The user does not have permission to access the shared memory segment, and
does not have the \fBCAP_IPC_OWNER\fP capability in the user namespace that
governs its IPC namespace.
.TP 
\fBEEXIST\fP
\fBIPC_CREAT\fP と \fBIPC_EXCL\fP が \fIshmflg\fP に指定されたが、 \fIkey\fP
に対応する共有メモリーセグメントはすでに存在する。
.TP 
\fBEINVAL\fP
新しいセグメントを作成しようとしたが、 \fIsize\fP が \fBSHMMIN\fP より小さいか \fBSHMMAX\fP よりも大きかった。
.TP 
\fBEINVAL\fP
指定された \fIkey\fP に対応するセグメントが既に存在するが、 \fIsize\fP がそのセグメントのサイズよりも大きかった。
.TP 
\fBENFILE\fP
.\" [2.6.7] shmem_zero_setup()-->shmem_file_setup()-->get_empty_filp()
システム全体でオープンされているファイルの総数が上限に達した。
.TP 
\fBENOENT\fP
指定された \fIkey\fP に対応するセグメントが存在せず、 \fBIPC_CREAT\fP も指定されていなかった。
.TP 
\fBENOMEM\fP
セグメントの管理情報 (overhead) に割り当てるメモリーがなかった。
.TP 
\fBENOSPC\fP
システム全体の共有メモリーセグメント数の制限 (\fBSHMMNI\fP)  に達した、または要求された \fIsize\fP のセグメントの割り当てが
システム全体の共有メモリーサイズの制限 (\fBSHMALL\fP)  を超過した。
.TP 
\fBEPERM\fP
\fBSHM_HUGETLB\fP フラグが指定されたが、呼び出し元には権限がなかった (\fBCAP_IPC_LOCK\fP ケーパビリティを持っていなかった)。
.SH 準拠
.\" SVr4 documents an additional error condition EEXIST.
POSIX.1\-2001, POSIX.1\-2008, SVr4.
.PP
\fBSHM_HUGETLB\fP と \fBSHM_NORESERVE\fP は Linux での拡張である。
.SH 注意
.\" Like Linux, the FreeBSD man pages still document
.\" the inclusion of these header files.
Linux や POSIX の全てのバージョンでは、 \fI<sys/types.h>\fP と \fI<sys/ipc.h>\fP
のインクルードは必要ない。しかしながら、いくつかの古い実装ではこれらのヘッダーファイルのインクルードが必要であり、 SVID
でもこれらのインクルードをするように記載されている。このような古いシステムへの移植性を意図したアプリケーションではこれらのファイルをインクルードする必要があるかもしれない。
.PP
.\"
\fBIPC_PRIVATE\fP はフラグではなく \fIkey_t\fP 型である。 この特別な値が \fIkey\fP に使用された場合は、 \fBshmget\fP()
は \fIshmflg\fP の下位 9 ビットを除いた全てを無視し、 新しい共有メモリーセグメントを作成する。
.SS 共有メモリーの上限
\fBshmget\fP()  コールに影響する共有メモリーセグメント資源の制限は以下の通りである:
.TP 
\fBSHMALL\fP
共有メモリーの全使用量のシステム全体での上限値。 システムページサイズが単位である。
.IP
.\" commit 060028bac94bf60a65415d1d55a359c3a17d5c31
Linux では、この上限値は \fI/proc/sys/kernel/shmall\fP 経由で参照したり、変更したりできる。 Linux 3.16
以降では、 この上限値のデフォルト値は以下のとおりである。
.IP
    ULONG_MAX \- 2^24
.IP
この値は割り当てに関する上限としては適用されない (なお、この値は 32 ビットシステムにも 64 ビットシステムにも適したものになっている)。
\fBULONG_MAX\fP ではなく、この値が選ばれたのは、
古いアプリケーションが最初に現在の値を確認せずに既存の上限をそのまま増やしてしまっても問題が起こらないようなデフォルト値を選んだからである。
このようなアプリケーションでは、 上限を \fBULONG_MAX\fP に設定すると値がオーバーフローしてしまうことになる。
.IP
Linux 2.4 から Linux 3.15 では、この上限のデフォルト値は以下であった。
.IP
    SHMMAX / PAGE_SIZE * (SHMMNI / 16)
.IP
\fBSHMMAX\fP と \fBSHMMNI\fP が変更されないとすると、 この式の結果に (バイト単位の値を得るために) ページサイズを掛け算すると、
全ての共有メモリーセグメントで使用される全メモリーの上限として、 8\ GB という値が得られる。
.TP 
\fBSHMMAX\fP
1 つの共有メモリーセグメントの最大サイズ (バイト数)。
.IP
.\" commit 060028bac94bf60a65415d1d55a359c3a17d5c31
Linux では、この上限値は \fI/proc/sys/kernel/shmmax\fP 経由で参照したり、変更したりできる。 Linux 3.16
以降では、 この上限値のデフォルト値は以下のとおりである。
.IP
    ULONG_MAX \- 2^24
.IP
この値は割り当てに関する上限としては適用されない (なお、この値は 32 ビットシステムにも 64 ビットシステムにも適したものになっている)。
(\fBULONG_MAX\fP ではなく) このデフォルト値が使われている理由については \fBSHMALL\fP の説明を参照。
.IP
Linux 2.2 から Linux 3.15 までは、この上限値のデフォルト値は 0x2000000 (32\ MB) であった。
.IP
共有メモリーセグメントの一部分だけをマッピングすることはできないので、
使用可能なセグメントの最大サイズには仮想メモリーの総量という別の上限が適用される。 例えば、i386
ではマッピング可能な最大セグメントの大きさはおおよそ 2.8\ GB で、 x86\-64 では上限はおおよそ 127TB である。
.TP 
\fBSHMMIN\fP
共有メモリーセグメントのバイト単位の大きさの下限: 実装依存 (現在は 1 バイトだが、実質的な最小サイズは \fBPAGE_SIZE\fP である)。
.TP 
\fBSHMMNI\fP
システム全体の共有メモリーセグメント数の上限値。 この上限値のデフォルトは、 Linux 2.2 以降では 128、 Linux 2.4 以降で
4096 である。
.IP
.\" Kernels between 2.4.x and 2.6.8 had an off-by-one error that meant
.\" that we could create one more segment than SHMMNI -- MTK
.\" This /proc file is not available in Linux 2.2 and earlier -- MTK
Linux では、この上限値は \fI/proc/sys/kernel/shmmni\fP 経由で参照したり、変更したりできる。
.PP
プロセス当りの共有メモリーセグメントの個数の最大値 (\fBSHMSEG\fP)  に関する実装上の制限はない。
.SS "Linux での注意"
バージョン 2.3.30 までは、Linux は 削除が予定されている共有メモリーセグメントに対して \fBshmget\fP()  が行われると
\fBEIDRM\fP を返していた。
.SH バグ
\fBIPC_PRIVATE\fP という名前を選んだのはおそらく失敗であろう。 \fBIPC_NEW\fP の方がより明確にその機能を表しているだろう。
.SH 例
\fBshmop\fP(2) を参照。
.SH 関連項目
\fBmemfd_create\fP(2), \fBshmat\fP(2), \fBshmctl\fP(2), \fBshmdt\fP(2), \fBftok\fP(3),
\fBcapabilities\fP(7), \fBshm_overview\fP(7), \fBsysvipc\fP(7)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 5.10 の一部である。プロジェクトの説明とバグ報告に関する情報は
\%https://www.kernel.org/doc/man\-pages/ に書かれている。
