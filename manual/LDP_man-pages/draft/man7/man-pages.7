.\" (C) Copyright 1992-1999 Rickard E. Faith and David A. Wheeler
.\" (faith@cs.unc.edu and dwheeler@ida.org)
.\" and (C) Copyright 2007 Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" 2007-05-30 created by mtk, using text from old man.7 plus
.\" rewrites and additional text.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Copyright (c) 2007  Akihiro MOTOKI
.\"         all rights reserved.
.\" Translated 2007-06-13, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v2.54
.\" Updated 2007-07-04, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v2.59
.\" Updated 2007-09-03, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v2.64
.\" Updated 2008-08-09, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v3.05
.\" Updated 2013-05-04, Akihiro MOTOKI <amotoki@gmail.com>
.\" Updated 2013-07-24, Akihiro MOTOKI <amotoki@gmail.com>
.\" Updated 2013-08-21, Akihiro MOTOKI <amotoki@gmail.com>, LDP v3.53
.\"
.TH MAN\-PAGES 7 2020\-08\-13 Linux "Linux Programmer's Manual"
.SH 名前
man\-pages \- Linux の man ページを書く際の決まり事
.SH 書式
\fBman\fP [\fIsection\fP] \fItitle\fP
.SH 説明
This page describes the conventions that should be employed when writing man
pages for the Linux \fIman\-pages\fP project, which documents the user\-space API
provided by the Linux kernel and the GNU C library.  The project thus
provides most of the pages in Section 2, many of the pages that appear in
Sections 3, 4, and 7, and a few of the pages that appear in Sections 1, 5,
and 8 of the man pages on a Linux system.  The conventions described on this
page may also be useful for authors writing man pages for other projects.
.SS マニュアルページのセクション
マニュアルのセクションは、習慣的に以下のような定義が用いられている:
.TP 
\fB1 ユーザーコマンド (プログラム)\fP
Commands that can be executed by the user from within a shell.
.TP 
\fB2 システムコール\fP
Functions which wrap operations performed by the kernel.
.TP 
\fB3 ライブラリコール\fP
All library functions excluding the system call wrappers (Most of the
\fIlibc\fP functions).
.TP 
\fB4 スペシャルファイル (デバイス)\fP
Files found in \fI/dev\fP which allow to access to devices through the kernel.
.TP 
\fB5 ファイルのフォーマットと設定ファイル\fP
Describes various human\-readable file formats and configuration files.
.TP 
\fB6 ゲーム\fP
Games and funny little programs available on the system.
.TP 
\fB7 概要、約束事、その他\fP
Overviews or descriptions of various topics, conventions and protocols,
character set standards, the standard filesystem layout, and miscellaneous
other things.
.TP 
\fB8 システム管理コマンド\fP
.\" .TP
.\" .B 9 Kernel routines
.\" This is an obsolete manual section.
.\" Once it was thought a good idea to document the Linux kernel here,
.\" but in fact very little has been documented, and the documentation
.\" that exists is outdated already.
.\" There are better sources of
.\" information for kernel developers.
\fBmount\fP(8)  のような root のみが実行可能なコマンド。
.SS マクロパッケージ
新しいマニュアルページは \fBman\fP(7)  で説明されている \fBgroff an.tmac\fP パッケージを使って記述すべきである。
この方針は一貫性の確保が主な理由である。既存の Linux のマニュアルページ の圧倒的多数がこれらのマクロを使って記述されている。
.SS ソースファイルの配置に関する決まり事
マニュアルページのソースコードの 1行の長さは 可能な限り 75文字を越えないようにしてほしい。 こうすることで、パッチをメール本文に載せて送る場合に、
メールクライアントによる行折り返しを回避することができる。
.SS タイトル行
man ページの最初の行は \fBTH\fP コマンドにすべきである。
.PP
.RS
\fB\&.TH\fP \fItitle section date source manual\fP
.RE
.PP
The arguments of the command are as follows:
.TP 
\fItitle\fP
man ページのタイトル。全部大文字で記載する (例: \fIMAN\-PAGES\fP)。
.TP 
\fIsection\fP
man ページが属するセクション番号 (例: \fI7\fP)。
.TP 
\fIdate\fP
man ページに最後に些細でない変更が行われた日付。 (\fIman\-pages\fP プロジェクトでは、
このタイムスタンプの必要な更新はスクリプトで自動的に行われるので、 パッチの中でこの日付を手動で更新する必要はない。) 日付は YYYY\-MM\-DD
形式で記載すること。
.TP 
\fIsource\fP
コマンド、関数、システムコールの出自。
.IP
数少ないセクション 1 と 8 のページの場合、おそらく単に \fIGNU\fP とだけ書くことが多いだろう。
.IP
システムコールの場合、単に \fILinux\fP とだけ書く。 (以前の慣習では、マニュアルページを記載した/内容を確認したカーネルの
バージョン番号を記載していた。しかし、バージョン番号が実際の内容と 一致していることはなく、そのためバージョン番号がないよりも
おそらく悪い形になっていた。 今後は、バージョン番号を含めるのは避けること。)
.IP
glibc のライブラリコールや その他の一般的な GNU ライブラリのライブラリコールの場合、 単に \fIGNU C Library\fP, \fIGNU\fP
と書くか、空の文字列を使う。
.IP
セクション 4 のページでは \fILinux\fP を使う。
.IP
よくわからない場合は、 \fILinux\fP とか \fIGNU\fP と書いておく。
.TP 
\fImanual\fP
.\"
マニュアルのタイトル (例: \fIman\-pages\fP パッケージのセクション 2 および 3 のページの場合には、 \fILinux
Programmer's Manual\fP を使うこと)。
.SS マニュアルページのセクション
昔から使われてきたセクション名を以下のリストに示す。 これらを使うと良いだろう。 一般的に、マニュアルページは、少なくとも \fB色つき\fP
のセクションを持つのが望ましい。 新しくマニュアルページを作成する際には、だいたい以下のリストに示した 順序でセクションを配置するようにしてもらいたい。
.PP
.RS
.TS
l l.
\fB名前 (NAME)\fP
\fB書式 (SYNOPSIS)\fP
CONFIGURATION	[Normally only in Section 4]
\fB説明 (DESCRIPTION)\fP
OPTIONS	[Normally only in Sections 1, 8]
EXIT STATUS	[Normally only in Sections 1, 8]
返り値	[Normally only in Sections 2, 3]
.\" May 07: Few current man pages have an ERROR HANDLING section,,,
.\" ERROR HANDLING,
ERRORS	[Typically only in Sections 2, 3]
.\" May 07: Almost no current man pages have a USAGE section,,,
.\" USAGE,
.\" DIAGNOSTICS,
.\" May 07: Almost no current man pages have a SECURITY section,,,
.\" SECURITY,
ENVIRONMENT
ファイル
VERSIONS	[Normally only in Sections 2, 3]
ATTRIBUTES	[Normally only in Sections 2, 3]
準拠
注意
バグ
例
.\" AUTHORS sections are discouraged
AUTHORS	[Discouraged]
REPORTING BUGS	[Not used in man\-pages]
COPYRIGHT	[Not used in man\-pages]
\fB関連項目 (SEE ALSO)\fP
.TE
.RE
.PP
「伝統的に使われてきた見出しが使える場合には、それを使ってほしい。」 この種の一貫性を保つことで、情報を理解しやすくなるからである。
どうしても必要な場合には、理解しやすくなるように独自の見出しを 作ってもよい (特にセクション 4 や 5 のページではこうした方が
わかりやすくなる)。ただし、そうする前に、伝統的な見出しを使い、 そのセクション内にサブセクション (\fI.SS\fP) を設けることで
対応できないか考えてほしい。
.PP
以下のリストでは、上記のセクションのそれぞれの内容について 詳しく説明する。
.TP 
\fB名前 (NAME)\fP
このマニュアルページの名前
.IP
\&\fB.SH NAME\fP コマンドの後に続ける行の重要な情報については \fBman\fP(7) を参照。この行のすべての単語は ("\e\-"
の直後の単語も含め) 小文字にすべきである。但し、英語や技術用語の慣例として別の記載をする場合はこの限りではない。
.TP 
\fB書式 (SYNOPSIS)\fP
コマンドや関数インターフェースの簡潔な概要
.IP
コマンドに対しては、コマンドや引数 (オプション) の文法を書く。 そのまま書くテキストにはボールド体を用い、置き換える引数には
イタリック体を用いる。省略可能なオプションはブラケット ([]) で囲い、 選択肢は縦棒 (|) で区切り、繰り返しには省略符号 (...) を書く。
関数に対しては、必要なデータ宣言や \fB#include\fP 指定を書き、関数宣言を続ける。
.IP
.\" FIXME . Say something here about compiler options
ヘッダーファイルから関数 (や変数) の定義を得るために 機能検査マクロ (feature test macro) を定義しなければならない場合、 書式
(SYNOPSIS) に必要な機能検査マクロを記載すべきである。 機能検査マクロについては \fBfeature_test_macros\fP(7)
で説明されている。
.TP 
\fBCONFIGURATION\fP
デバイスの設定詳細。
.IP
通常、このセクションは 4 章のマニュアルページでのみ登場する。
.TP 
\fB説明 (DESCRIPTION)\fP
プログラム・関数・フォーマットの動作・目的。
.IP
.\" If there is some kind of input grammar or complex set of subcommands,
.\" consider describing them in a separate
.\" .B USAGE
.\" section (and just place an overview in the
.\" .B DESCRIPTION
.\" section).
ファイルや標準入力をどのように処理し、標準出力や標準エラー出力を どのように生成するかといったことについて述べる。
内部動作や実装の詳細については省略する (ただしそれが動作の理解にどうしても必要なら別)。 通常の場合について記述する。
プログラムのコマンドラインオプションの説明には、 \fBオプション\fP のセクションを用いる。
.IP
システムコールやライブラリ関数の新しい動作や新しいフラグについて説明する際は、 変更が取り込まれたカーネルや C
ライブラリのバージョンを注記に入れるように気を付けること。 フラグにこの情報の注記を入れる方法としては、推奨される方法は、 以下のように \fB.TP\fP
リストの一部にすることである (この例はシステムコールの新しいフラグの場合)。
.RS 16
.TP 
 \fBXYZ_FLAG\fP (Linux 3.7 以降)
フラグの説明...
.RE
.IP
バージョン情報を入れておくのは、 古いバージョンのカーネルや C ライブラリを使わざるを得ないユーザーにとって、 特に有用である
(例えば、組み込みシステムではよくあることである)。
.TP 
\fBオプション (OPTIONS)\fP
プログラムが受け付けるコマンドラインオプションとその場合プログラムの振舞いがどう変わるかの説明。
.IP
.\" .TP
.\" .B USAGE
.\" describes the grammar of any sublanguage this implements.
このセクションはセクション 1 と 8 のマニュアルページにだけ登場すべきである。
.TP 
\fB終了ステータス (EXIT STATUS)\fP
プログラムの終了ステータスの値とそれらの値に対応する状況の一覧。
.IP
このセクションはセクション 1 と 8 のマニュアルページにだけ登場すべきである。
.TP 
\fB返り値 (RETURN VALUE)\fP
セクション 2 と 3 のページの場合、このセクションに ライブラリルーチンが呼び出し元に返す値のリストを記載する。
それらの値が返された場合の状態に対する説明も書く。
.TP 
\fBエラー (ERRORS)\fP
セクション 2 と 3 のマニュアルページでは、 エラーが発生した場合に \fIerrno\fP に設定される可能性がある値のリストを記載する。
リストには、エラーの値とエラーの原因についての情報を書く。
.IP
Where several different conditions produce the same error, the preferred
approach is to create separate list entries (with duplicate error names) for
each of the conditions.  This makes the separate conditions clear, may make
the list easier to read, and allows metainformation (e.g., kernel version
number where the condition first became applicable)  to be more easily
marked for each condition.
.IP
「エラーリストはアルファベット順にすべきである。」
.TP 
\fB環境変数 (ENVIRONMENT)\fP
プログラムや関数に影響する環境変数の一覧と、それらの影響の説明。
.TP 
\fBファイル (FILES)\fP
プログラムや関数が用いるファイルの一覧。 設定ファイル、起動ファイル、プログラムが直接操作するファイルなど。
.IP
.\" May 07: Almost no current man pages have a DIAGNOSTICS section;
.\"         "RETURN VALUE" or "EXIT STATUS" is preferred.
.\" .TP
.\" .B DIAGNOSTICS
.\" gives an overview of the most common error messages and how to
.\" cope with them.
.\" You don't need to explain system error messages
.\" or fatal signals that can appear during execution of any program
.\" unless they're special in some way to the program.
.\"
.\" May 07: Almost no current man pages have a SECURITY section.
.\".TP
.\".B SECURITY
.\"discusses security issues and implications.
.\"Warn about configurations or environments that should be avoided,
.\"commands that may have security implications, and so on, especially
.\"if they aren't obvious.
.\"Discussing security in a separate section isn't necessary;
.\"if it's easier to understand, place security information in the
.\"other sections (such as the
.\" .B DESCRIPTION
.\" or
.\" .B USAGE
.\" section).
.\" However, please include security information somewhere!
これらのファイルのファイル名はフルパスで記載し、 ディレクトリの部分はユーザーの好みに合わせて インストール処理で変更できるようにする。
多くのプログラムではデフォルトのインストール先は \fI/usr/local\fP である。したがってベースとなるマニュアルページでも
\fI/usr/local\fP が使われていることが多いだろう。
.TP 
\fB属性 (ATTRIBUTES)\fP
A summary of various attributes of the function(s) documented on this page.
See \fBattributes\fP(7)  for further details.
.TP 
\fBバージョン (VERSIONS)\fP
システムコールやライブラリ関数が登場したり、動作の重要な変更が行われた、 Linux カーネルや glibc のバージョンについての簡潔な概要。
.IP
一般に、全ての新しいインターフェイスは、マニュアルページに 「バージョン」の節を設けるべきである。
残念なことに、多くの既存のマニュアルページにこの情報は含まれていない (これらのページが書かれた時点ではそのようなポリシーはなかったからである)。
これを改善するパッチは歓迎されるが、 新しいコードを書くプログラマの観点からすれば、 おそらくこの情報が重要になるのは、 Linux 2.4
以降で追加されたカーネルインターフェイス (カーネル 2.2 からの変更) と glibc バージョン 2.1 以降で追加されたライブラリ関数
(glibc 2.0 からの変更)  についてのみであろう。
.IP
\fBsyscalls\fP(2)  マニュアルページにも、いろいろなシステムコールが初めて登場した カーネルバージョンについての情報が書かれている。
.TP 
\fB準拠 (CONFORMING TO)\fP
そのマニュアルページで説明している関数やコマンドに関連する標準規格や慣習について説明。
.IP
様々な標準を示すのに適した用語は \fBstandards\fP(7) に見出しでリストになっている。
.IP
セクション 2 や 3 のページでは、このセクションで システムコールや関数が準拠する POSIX.1 のバージョンと、 C99
で規定されているかに触れるべきである。 (SUS, SUSv2, XPG などの他の標準規格や、SVr4 や 4.xBSD の実装標準に
ついては、説明しているコールがこれらの規格で規定されており POSIX.1 の現行バージョンで規定されていない場合以外は、
あまり深く気にする必要はない。)
.IP
そのコールがどの標準にも基づいていないが、 他のシステムで広く存在する場合は、その旨を記載すること。 そのコールが Linux
固有の場合は、その旨を記載すること。
.IP
(そうなっているページが多いが) このセクションの内容が標準のリスト だけの場合、リストの最後にピリオド (\(aq.\(aq) を置くこと。
.TP 
\fB注意 (NOTES)\fP
その他の注記。
.IP
セクション 2 と 3 のマニュアルページでは、 \fILinux での注意 (Linux Notes)\fP や \fIglibc での注意 (Glibc
Notes)\fP という名前のサブセクション (\fBSS\fP) を設けると便利なこともある。
.IP
In Section 2, use the heading \fIC library/kernel differences\fP to mark off
notes that describe the differences (if any) between the C library wrapper
function for a system call and the raw system call interface provided by the
kernel.
.TP 
\fBバグ (BUGS)\fP
制限、知られている欠陥や不便な点、その他不思議な動作など。
.TP 
\fBEXAMPLES\fP
この関数、ファイル、コマンドをどのように使うかを示す、1〜2 個の例。
.IP
For details on writing example programs, see \fIExample programs\fP below.
.TP 
\fB著者 (AUTHORS)\fP
文書やプログラムの著者の一覧。
.IP
\fB著者セクションは極力使用しないこと。\fP 一般的には、著者のリストを各ページに撒き散らさない方がよい
(時間がたつと、作者のリストは膨大になる可能性がある)。 マニュアルページを新規に書いたり、大幅に修正を行った場合には、
ソースファイルにコメントとして著作権表示を追加すること。 あなたがデバイスドライバの作者で、バグを報告するためのアドレスを
載せたい場合は、「バグ」セクションの後ろにこのセクションを配置すること。
.TP 
\fBREPORTING BUGS\fP
The \fIman\-pages\fP project doesn't use a REPORTING BUGS section in manual
pages.  Information on reporting bugs is instead supplied in the
script\-generated COLOPHON section.  However, various projects do use a
REPORTING BUGS section.  it is recommended to place it near the foot of the
page.
.TP 
\fBCOPYRIGHT\fP
The \fIman\-pages\fP project doesn't use a COPYRIGHT section in manual pages.
Copyright information is instead maintained in the page source.  In pages
where this section is present, it is recommended to place it near the foot
of the page, just above SEE ALSO.
.TP 
\fB関連項目 (SEE ALSO)\fP
関連するマニュアルページのコンマ区切りのリスト。 可能なら関連する他の文書も書く。
.IP
The list should be ordered by section number and then alphabetically by
name.  Do not terminate this list with a period.
.IP
関連項目のリストに長いマニュアルページ名が多く含まれる場合には、出力を見やすくするために \fI.ad l\fP (右揃えをしない) や \fI.nh\fP
(ハイフンによる折り返しをしない) を活用するとよい。個々のページ名のハイフンによる折り返しは、単語の前に "\e%" を付けることで防ぐことができる。
.IP
FOSS プロジェクトやそのドキュメントは本質的に分散して自律的に行われるので、
「関連項目」セクションに他のプロジェクトが提供するマニュアルページへの参照を含める必要がときとしてあり、多くの場合は含めるのが望ましい場合がある。
.SH スタイルガイド
以下の節では\fIman\-pages\fPプロジェクトで推奨のスタイルについて説明している。 ここで触れられていない点については、"the Chicago
Manual of Style" がたいていはよい情報源になるだろう。
また、すでに使用されているスタイルについてはプロジェクトのソースツリーを検索してみてほしい。
(訳注：この章では英語の原文でのスタイルについて説明しており、日本語マニュアルにはあわない点もあるため、具体例などは英語のままとしている箇所もあります。)
.SS 性別の区別のない表現の使用
.\"
可能な限り、マニュアルページの文章では性別の区別のない表現を使用すること。 性別に区別のない単数形の代名詞として "they" ("them",
"themself", "their") を使用してもよい。
.SS "Formatting conventions for manual pages describing commands"
For manual pages that describe a command (typically in Sections 1 and 8),
the arguments are always specified using italics, \fIeven in the SYNOPSIS
section\fP.
.PP
.\"
The name of the command, and its options, should always be formatted in
bold.
.SS "Formatting conventions for manual pages describing functions"
For manual pages that describe functions (typically in Sections 2 and 3),
the arguments are always specified using italics, \fIeven in the SYNOPSIS
section\fP, where the rest of the function is specified in bold:
.PP
\fB int myfunction(int \fP\fIargc\fP\fB, char **\fP\fIargv\fP\fB);\fP
.PP
引数名といった変数名はイタリック体を指定すべきである。
.PP
Any reference to the subject of the current manual page should be written
with the name in bold followed by a pair of parentheses in Roman (normal)
font.  For example, in the \fBfcntl\fP(2)  man page, references to the subject
of the page would be written as: \fBfcntl\fP().  The preferred way to write
this in the source file is:
.PP
.EX
    .BR fcntl ()
.EE
.PP
.\"
("\efB...\efP()" よりも、この形式を使うこと。 これにより、マニュアルページのソースファイルを解釈するツールを 書くのが簡単になる。)
.SS "Use semantic newlines"
.\"
In the source of a manual page, new sentences should be started on new
lines, and long sentences should split into lines at clause breaks (commas,
semicolons, colons, and so on).  This convention, sometimes known as
"semantic newlines", makes it easier to see the effect of patches, which
often operate at the level of individual sentences or sentence clauses.
.SS "Formatting conventions (general)"
Paragraphs should be separated by suitable markers (usually either \fI.PP\fP or
\&\fI.IP\fP).  Do \fInot\fP separate paragraphs using blank lines, as this results
in poor rendering in some output formats (such as PostScript and PDF).
.PP
ファイル名 (パス名、またはヘッダーファイルへの参照) は常にイタリック体にする (例: \fI<stdio.h>\fP)。 ただし、書式
(SYNOPSIS) セクションは例外で、 インクルードファイルはボールドにする (例: \fB#include <stdio.h>\fP)。
標準のインクルードヘッダーファイルを参照する際は、 通常の C 言語と同様に山括弧でヘッダーファイルを囲ぬで指定する (例：
\fI<stdio.h>\fP)。
.PP
通常、大文字で表現する特殊マクロはボールドで表す (例えば \fBMAXINT\fP)。 例外として NULL はボールドにしない。
.PP
エラーコードのリストを列挙する時には、コードはボールドで表す (このリストには通常 \fB\&.TP\fP マクロを用いる)。
.PP
完全なコマンドは、長い場合には、例に示すように 字下げした行にコマンドだけを記載し、コマンドの前後には空行を置くべきである。
.PP
.in +4n
.EX
man 7 man\-pages
.EE
.in
.PP
コマンドが短い場合は、 \fIman 7 man\-pages\fP のようにイタリック体で文中に埋め込んで記載してもよい。
この場合、コマンド内の適切な位置に、改行できないスペース ("\e\ ")  を使うとよいかもしれない。 コマンドオプションも (\fI\-l\fP のように)
イタリック体で記載すべきである。
.PP
式は、専用の字下げした行に記載しない場合、イタリック体を指定すること。 繰り返しになるが、式を通常の文中に埋め込む場合にも、
改行できないスペースを使うとよいだろう。
.PP
When showing example shell sessions, user input should be formatted in bold,
for example
.PP
.in +4n
.EX
$ \fBdate\fP
Thu Jul  7 13:01:27 CEST 2016
.EE
.in
.PP
別のマニュアルページへの参照は、ボールドで名前を記載し、 それに続けてセクション番号を「必ず」書く。セクション番号は ローマンフォント
(通常のフォント) で書き、スペースは入れない (例: \fBintro\fP(2))。 マニュアルページのソースファイルには次のように記載するのが望ましい:
.PP
.EX
    .BR intro (2)
.EE
.PP
(相互参照にセクション番号を含めておくと、 \fBman2html\fP といったツールがページ間のハイパーリンクを適切に生成できる。)
.PP
Control characters should be written in bold face, with no quotes; for
example, \fB\(haX\fP.
.SS "綴り (spelling)"
リリース 2.59 からだが、 \fIman\-pages\fP はアメリカ英語の綴りの慣習に従っている
(以前はイギリス英語とアメリカ英語が基準もなく混在して使われていた)。 新しいページやパッチは全てこの慣習に従って下さい。
.PP
よく知られた綴りの違い以外に、微妙な違いもいくつか見られる。
.IP * 3
アメリカ英語では "backward", "upward", "toward" を使う傾向にあるが、イギリス英語では "backwards",
"upwards", "towards" などを使う方が多い。
.SS "BSD バージョン番号"
BSD バージョン番号の伝統的な表記方法は \fIx.yBSD\fP である (\fIx.y\fP はバージョン番号; 例: 4.2BSD)。 \fIBSD 4.3\fP
といった表記は避けること。
.SS 大文字表記
サブセクション ("SS") 見出しでは、最初の単語だけ先頭文字を大文字にし、残りの単語は小文字にすること。但し、英語の用法 (例えば、固有名詞)
やプログラミング言語の要件 (例えば、識別子の名前) などで別の表記をする場合はこの限りではない。
.PP
.EX
    .SS Unicode under Linux
.EE
.\"
.SS 構造体の定義、シェルのセッションログなどの字下げ、など
When structure definitions, shell session logs, and so on are included in
running text, indent them by 4 spaces (i.e., a block enclosed by \fI.in\ +4n\fP
and \fI.in\fP), format them using the \fI.EX\fP and \fIEE\fP macros, and surround
them with suitable paragraph markers (either \fI.PP\fP or \fI.IP\fP).  For
example:
.PP
.in +4n
.EX
    .PP
    .in +4n
    .EX
    int
    main(int argc, char *argv[])
    {
        return 0;
    }
    .EE
    .in
    .PP
.EE
.in
.SS 推奨用語
以下の表にマニュアルページでの使用が推奨される用語を示す。これらは主にマニュアルページ間での一貫性を保つためである。
.TS
l l l
---
l l l.
用語	使用を避ける単語	備考

bit mask	bitmask
built\-in	builtin
Epoch	epoch	T{
For the UNIX Epoch (00:00:00, 1 Jan 1970 UTC)
T}
filename	file name
filesystem	file system
hostname	host name
inode	i\-node
lowercase	lower case, lower\-case
nonzero	non\-zero
pathname	path name
pseudoterminal	pseudo\-terminal
privileged port	T{
reserved port,
system port
T}
real\-time	T{
realtime,
real time
T}
run time	runtime
saved set\-group\-ID	T{
saved group ID,
saved set\-GID
T}
saved set\-user\-ID	T{
saved user ID,
saved set\-UID
T}
set\-group\-ID	set\-GID, setgid
set\-user\-ID	set\-UID, setuid
superuser	T{
super user,
super\-user
T}
superblock	T{
super block,
super\-block
T}
timestamp	time stamp
timezone	time zone
uppercase	upper case, upper\-case
usable	useable
user space	userspace
username	user name
x86\-64	x86_64	T{
Except if referring to result of "uname\ \-m" or similar
T}
zeros	zeroes
.TE
.PP
以下の\fI修飾子としての複合語におけるハイフン\fPの議論も参照。
.SS 使用を避ける用語
以下の表にマニュアルページでの使用を避けるべき用語を示す。 推奨される表現も合わせて記載している。
これらは主にマニュアルページ間での一貫性を保つためである。
.TS
l l l
---
l l l.
使用を避ける	使用を推奨	備考

32bit	32\-bit	T{
8\-bit, 16\-bit なども同様
T}
current process	calling process	T{
カーネルプログラマーがマニュアルページを書く際によくする間違い
T}
manpage	T{
man page, manual page
T}
minus infinity	negative infinity
non\-root	unprivileged user
non\-superuser	unprivileged user
nonprivileged	unprivileged
OS	operating system
plus infinity	positive infinity
pty	pseudoterminal
tty	terminal
Unices	UNIX systems
Unixes	UNIX systems
.TE
.SS 商標
商標については正しい綴りと大文字小文字を使うこと。以下は時々綴りの間違いがある商標の正しい綴りのリストである。
.PP
     DG/UX
     HP\-UX
     UNIX
     UnixWare
.SS "NULL, NUL, ヌルポインター、ヌル文字"
\fInull pointer\fP (\fIヌルポインター\fP) は何もないものを指すポインターで、通常は定数 \fINULL\fP で示される。 一方、
\fINUL\fP は \fInull byte\fP (\fIヌルバイト\fP、値 0 のバイト) で、 C では文字定数 \fI\(aq\e0\(aq\fP と表現される。
.PP
ポインターとして推奨される用語は "null pointer" (ヌルポインター) もしくは単に "NULL" である。 "NULL pointer"
と記載するのは避けること。
.PP
バイトとして推奨される用語は "null byte" (ヌルバイト) である。 "NUL" と記載するのは避けること。 "NUL" は "NULL"
と間違われることが非常に多いからである。 また、 "zero byte" (ゼロバイト) と "null character" (ヌル文字)
も避けること。 C の文字列を終端するバイトは "the terminating null byte" (終端ヌルバイト)、
文字列の説明として使う場合には "null\-terminated" (ヌル終端された) と記載すべきである。 "NUL\-terminated"
の使用は避けること。
.SS ハイパーリンク
ハイパーリンクについては、 \fI.UR\fP/\fI.UE\fP マクロの組を使うこと (\fBgroff_man\fP(7)
参照)。ページを以下のようにレンダリングする場合に、このマクロはウェブブラウザーで使用できる正しいハイパーリンクを生成してくれる。
.PP
     BROWSER=firefox man \-H pagename
.SS "e.g., i.e., etc., a.k.a. などの使用"
In general, the use of abbreviations such as "e.g.", "i.e.", "etc.", "cf.",
and "a.k.a." should be avoided, in favor of suitable full wordings ("for
example", "that is", "and so on", "compare to", "also known as").
.PP
これらの省略形の使用が認められる唯一の場所は、 \fI短い\fP括弧で囲まれた余談 ("(e.g., like this one)") の場合である。
.PP
ここで記載しているように、これらの省略形では必ずピリオドを入れること。 また、"e.g." と "i.e." では常に後にカンマも付けること。
.SS "em によるダッシュ"
*roff で em によるダッシュ\(emこの部分の両端にある記号\(emを書くには "\e(em" を使う。 (ASCII 端末では em
によるダッシュは通常ハイフン 2 つとして表示されるが、別の活版印刷の場合などでは長いダッシュとして表示されることもある。) em
によるダッシュの両側にはスペースを\fI置かないこと\fP。
.SS 修飾子としての複合語におけるハイフン
何かを修飾する際 (すなわち後続の名詞を限定する場合) 複合語にはハイフンを入れること。いくつか例を挙げる。
.PP
    32\-bit value (32 ビット値)
    command\-line argument (コマンドライン引数)
    floating\-point number (浮動小数点数)
    run\-time check (実行時チェック)
    user\-space function (ユーザー空間関数)
    wide\-character string (ワイド文字の文字列)
.SS "multi, non, pre, re, sub などとの組み合わせでのハイフン"
一般的に最近の英語の傾向では、"multi", "non", "pre", "re", "sub" などの接尾辞の後ろにはハイフンを付けない。
これらの接尾辞が単純な接尾語との普通の英語の組み合わせの場合には、 マニュアルページでは基本的にこのルールに従う。
以下のリストに推奨される形式での例をいくつか挙げる。
.PP
    interprocess
    multithreaded
    multiprocess
    nonblocking
    nondefault
    nonempty
    noninteractive
    nonnegative
    nonportable
    nonzero
    preallocated
    precreate
    prerecorded
    reestablished
    reinitialize
    rearm
    reread
    subcomponent
    subdirectory
    subsystem
.PP
接尾語が通常の英単語以外 (商標、固有名詞、頭字語、複合語) と組み合わされる場合は、ハイフンを使うこと。以下に例を挙げる。
.PP
    non\-ASCII
    non\-English
    non\-NULL
    non\-real\-time
.PP
.\"
最後に、"re\-create" と "recreate" は異なる別の動詞である点に注意すること。たいていの場合、使おうと思っているのは前者であろう。
.SS "Generating optimal glyphs"
Where a real minus character is required (e.g., for numbers such as \-1, for
man page cross references such as \fButf\-8\fP(7), or when writing options that
have a leading dash, such as in \fIls\ \-l\fP), use the following form in the
man page source:
.PP
    \e\-
.PP
このガイドラインはサンプルコードの場合にも適用される。
.PP
To produce unslanted single quotes that render well in ASCII, UTF\-8, and
PDF, use "\e(aq" ("apostrophe quote"); for example
.PP
    \e(aqC\e(aq
.PP
ここで \fIC\fP が括弧で囲まれる文字である。このガイドラインはサンプルコードの場合にも適用される。
.PP
Where a proper caret (\(ha) that renders well in both a terminal and PDF is
required, use "\e(ha".  This is especially necessary in code samples, to get
a nicely rendered caret when rendering to PDF.
.PP
.\"
Using a naked "\(ti" character results in a poor rendering in PDF.  Instead
use "\e(ti".  This is especially necessary in code samples, to get a nicely
rendered tilde when rendering to PDF.
.SS サンプルプログラムとシェルのセッション
マニュアルページには、システムコールやライブラリ関数の使い方を示す サンプルプログラムを含めることができる。 その際には、以下の点に留意すべきである。
.IP * 3
サンプルプログラムは C で記載すること。
.IP *
サンプルプログラムは、 インターフェースについて文章で簡単に説明できる以上のことを示す場合にだけ
必要かつ有用である。インターフェースを呼び出す以外に何もしないサンプル プログラムは普通はほとんど役に立たない。
.IP *
Example programs should ideally be short (e.g., a good example can often be
provided in less than 100 lines of code), though in some cases longer
programs may be necessary to properly illustrate the use of an API.
.IP *
Expressive code and useful comments are appreciated.
.IP *
サンプルプログラムでは、システムコールやライブラリ関数を呼び出した後で エラーチェックを行うこと。
.IP *
サンプルプログラムは完結していて、 \fIcc\ \-Wall\fP でコンパイルした際に警告なしでコンパイルできること。
.IP *
可能かつ適切な場合には、サンプルプログラムで 入力により動作を変化させるなどの実験を行うとよい
(理想的には、コマンドライン引数や、プログラムが読み込む入力データ 経由で、動作を変化させるのがよい)。
.IP *
Example programs should be laid out according to Kernighan and Ritchie
style, with 4\-space indents.  (Avoid the use of TAB characters in source
code!)  The following command can be used to format your source code to
something close to the preferred style:
.IP
    indent \-npro \-kr \-i4 \-ts4 \-sob \-l72 \-ss \-nut \-psl prog.c
.IP *
一貫性を保つため、すべてのサンプルプログラムは以下のいずれかで終了すること。
.IP
     exit(EXIT_SUCCESS);
     exit(EXIT_FAILURE);
.IP
プログラムを終了するのに以下を使うのは避けること。
.IP
    exit(0);
    exit(1);
    return n;
.IP *
プログラムソースの前に説明文がある場合は、\fIプログラムソース\fPの見出しをソースコードの前に付けること。
.IP
\&.SS プログラムのソース
.IP
説明文がシェルセッションのログを含む場合は必ずこのようにすること。
.PP
プログラムの使い方や他のシステムの特徴を示すためにシェルのセッションログを含める場合、
.IP * 3
セッションログをソースコードの前に置くこと
.IP *
セッションログをスペース 4 つで字下げすること
.IP *
ユーザーの入力文をボールドにして、システムが生成する出力と区別できるようにすること
.PP
サンプルプログラムがどんな風になっていればよいかの例については、 \fBwait\fP(2)  と \fBpipe\fP(2)  を参照すること。
.SH 例
\fIman\-pages\fP パッケージに含まれるマニュアルページの体裁の標準的な例については、 \fBpipe\fP(2)  と \fBfcntl\fP(2)
を参照すること。
.SH 関連項目
\fBman\fP(1), \fBman2html\fP(1), \fBattributes\fP(7), \fBgroff\fP(7), \fBgroff_man\fP(7),
\fBman\fP(7), \fBmdoc\fP(7)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 5.10 の一部である。プロジェクトの説明とバグ報告に関する情報は
\%https://www.kernel.org/doc/man\-pages/ に書かれている。
