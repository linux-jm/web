.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 18:54:45 1993 by Rik Faith (faith@cs.unc.edu)
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Copyright (c) 1998
.\"             ISHIKAWA Mutsumi, all rights reserved.
.\" Translated Sat May 23 15:22:35 JST 1998
.\"         by ISHIKAWA Mutsumi <ishikawa@linux.or.jp>
.\"
.TH MEMFROB 3 2017\-03\-13 GNU "Linux Programmer's Manual"
.SH 名前
memfrob \- メモリーエリアの操作 (暗号化)
.SH 書式
.nf
\fB#define _GNU_SOURCE\fP             /* feature_test_macros(7) 参照 */
\fB#include <string.h>\fP
.PP
\fBvoid *memfrob(void *\fP\fIs\fP\fB, size_t \fP\fIn\fP\fB);\fP
.fi
.SH 説明
\fBmemfrob\fP()  関数は、メモリーエリア \fIs\fP の最初の \fIn\fP バイトの それぞれの文字を 42
との排他的論理をとることによって暗号化する。 変換後のデータは、暗号化されているメモリーエリアに (再度)  \fBmemfrob\fP()
関数を施すことで、元に戻すことができる。
.PP
この関数は妥当な暗号化ルーチンであるとは言えないことに注意して欲しい。 XOR
をとる定数を固定しているので、せいぜい、文字列を隠す程度の用途にしか向いていない。
.SH 返り値
\fBmemfrob\fP()  関数は、暗号化されたメモリーエリアへのポインターを返す。
.SH 属性
この節で使用されている用語の説明については、 \fBattributes\fP(7) を参照。
.TS
allbox;
lb lb lb
l l l.
インターフェース	属性	値
T{
\fBmemfrob\fP()
T}	Thread safety	MT\-Safe
.TE
.SH 準拠
\fBmemfrob\fP()  関数は GNU C ライブラリに固有である。
.SH 関連項目
\fBbstring\fP(3), \fBstrfry\fP(3)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 5.10 の一部である。プロジェクトの説明とバグ報告に関する情報は
\%https://www.kernel.org/doc/man\-pages/ に書かれている。
