.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 18:55:27 1993 by Rik Faith (faith@cs.unc.edu)
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Copyright (c) 1997 HIROFUMI Nishizuka
.\"	all rights reserved.
.\" Translated Wed Dec 17 12:12:15 JST 1997
.\"	by HIROFUMI Nishizuka <nishi@rpts.cl.nec.co.jp>
.\" Updated 2013-05-04, Akihiro MOTOKI <amotoki@gmail.com>
.\"
.TH MEMCMP 3 2017\-09\-15 "" "Linux Programmer's Manual"
.SH 名前
memcmp \- メモリー領域を比較する
.SH 書式
.nf
\fB#include <string.h>\fP
.PP
\fBint memcmp(const void *\fP\fIs1\fP\fB, const void *\fP\fIs2\fP\fB, size_t \fP\fIn\fP\fB);\fP
.fi
.SH 説明
\fBmemcmp\fP()  関数は、メモリー領域 \fIs1\fP と\fIs2\fP の最初の \fIn\fP バイトを比較する (各バイトは \fIunsigned
char\fP として解釈される)。
.SH 返り値
\fBmemcmp\fP()  関数は、\fIs1\fP の最初の \fIn\fP バイトが \fIs2\fP の最初の \fIn\fP バイトよりも
小さいか、同じか、あるいは大きいかによってそれぞれ、負の整数、0、 正の整数を返す。
.PP
0 でない値の場合、 \fIs1\fP と \fIs2\fP で値が異なった最初のバイトの値の差で符号は決定される (バイトは \fIunsigned char\fP
で解釈される)。
.PP
\fIn\fP が 0 の場合、返り値は 0 となる。
.SH 属性
この節で使用されている用語の説明については、 \fBattributes\fP(7) を参照。
.TS
allbox;
lb lb lb
l l l.
インターフェース	属性	値
T{
\fBmemcmp\fP()
T}	Thread safety	MT\-Safe
.TE
.SH 準拠
POSIX.1\-2001, POSIX.1\-2008, C89, C99, SVr4, 4.3BSD.
.SH 注意
暗号化された秘密などセキュリティ的に重要なデータの比較には \fBmemcmp\fP() を使用しないこと。 必要な CPU
時間は値が等しいバイトの量に依存するからである。 その代わり、 一定時間で比較を実行する関数が必要である。 いくつかのオペレーティングシステムでは
(例えば NetBSD の \fBconsttime_memequal\fP() などの) 関数が提供されているが、 このような関数は POSIX
では規定されていない。 Linux では、 このような関数自体を実装する必要があるかもしれない。
.SH 関連項目
\fBbcmp\fP(3), \fBbstring\fP(3), \fBstrcasecmp\fP(3), \fBstrcmp\fP(3), \fBstrcoll\fP(3),
\fBstrncasecmp\fP(3), \fBstrncmp\fP(3), \fBwmemcmp\fP(3)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 5.10 の一部である。プロジェクトの説明とバグ報告に関する情報は
\%https://www.kernel.org/doc/man\-pages/ に書かれている。
