.\" Copyright (c) 2012 by Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH MALLOC_USABLE_SIZE 3 2017\-09\-15 GNU "Linux Programmer's Manual"
.SH 名前
malloc_usable_size \- ヒープから確保したメモリーブロックのサイズを取得する
.SH 書式
\fB#include <malloc.h>\fP
.PP
\fBsize_t malloc_usable_size (void *\fP\fIptr\fP\fB);\fP
.SH 説明
\fBmalloc_usable_size\fP() 関数は、 \fIptr\fP が指すブロックで使用可能なバイト数を返す。 \fIptr\fP
は、\fBmalloc\fP(3) や同様の関数で割り当てられたメモリーブロックへのポインターである。
.SH 返り値
\fBmalloc_usable_size\fP() は \fIptr\fP が指す割り当て済みメモリーブロックで使用可能なバイト数を返す。 \fIptr\fP が
NULL の場合、 0 が返される。
.SH 属性
この節で使用されている用語の説明については、 \fBattributes\fP(7) を参照。
.TS
allbox;
lbw20 lb lb
l l l.
インターフェース	属性	値
T{
\fBmalloc_usable_size\fP()
T}	Thread safety	MT\-Safe
.TE
.SH 準拠
この関数は GNU による拡張である。
.SH 注意
\fBmalloc_usable_size\fP() が返す値は、 要求された割り当てサイズよりも大きい場合がある。
これは、メモリーアラインメントと最小サイズの制約のためである。 この超過バイトをアプリケーションは悪影響なしで上書きすることができるが、
これを行うのはプログラミングマナーとしてはよいこととは言えない。 アプリケーションの超過バイトの量は、内部の実装に依存する。
.PP
この関数の主な使用目的はデバッグと内部調査である。
.SH 関連項目
\fBmalloc\fP(3)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 5.10 の一部である。プロジェクトの説明とバグ報告に関する情報は
\%https://www.kernel.org/doc/man\-pages/ に書かれている。
