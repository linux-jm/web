.\" Copyright (c) 1990, 1991 Regents of the University of California.
.\" All rights reserved.
.\"
.\" %%%LICENSE_START(BSD_4_CLAUSE_UCB)
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\" %%%LICENSE_END
.\"
.\"     @(#)stdio.3	6.5 (Berkeley) 5/6/91
.\"
.\" Converted for Linux, Mon Nov 29 16:07:22 1993, faith@cs.unc.edu
.\" Modified, 2001-12-26, aeb
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Copyright (c) 1997 YOSHINO Takashi
.\"       all rights reserved.
.\" Translated Mon Jan 20 23:06:18 JST 1997
.\"       by YOSHINO Takashi <yoshino@civil.jcn.nihon-u.ac.jp>
.\" Updated & Modified Thu Feb 14 21:39:49 JST 2002
.\"       by Yuichi SATO <ysato@h4.dion.ne.jp>
.\" Updated & Modified Sun Sep  7 14:36:19 JST 2003
.\"       by Yuichi SATO <ysato444@yahoo.co.jp>
.\" Updated & Modified Sat Jan 17 03:18:29 JST 2004 by Yuichi SATO
.\"
.TH STDIO 3 2017\-11\-26 "" "Linux Programmer's Manual"
.SH 名前
stdio \- 標準入出力ライブラリ関数
.SH 書式
\fB#include <stdio.h>\fP
.PP
\fBFILE *\fP\fIstdin\fP\fB;\fP
.br
\fBFILE *\fP\fIstdout\fP\fB;\fP
.br
\fBFILE *\fP\fIstderr\fP\fB;\fP
.SH 説明
標準入出力ライブラリは、簡単かつ効果のよい、 バッファーリングされたストリーム入出力インターフェースを提供する。
入力と出力は論理データストリームに割り付けられ、 入出力の物理的な特徴は隠蔽される。 このライブラリに属する関数とマクロを以下に挙げる。
より詳しい情報は個々の man ページから得ることができる。
.PP
ファイルを \fIオープン (open) する\fP ことによって、 ストリームは外部ファイル (通常は物理デバイス) に連結される。
この操作には新しくファイルを作成することも含まれる。 既存のファイルと同じ名前のファイルを新たに作ると、 もとのファイルの中身が捨てられてしまう。
ファイルが位置指定リクエストをサポートしている (ディスクファイルなどが相当する。逆の例としては端末が挙げられる) 場合、 そのストリームに連結された
\fIファイル位置指示子 (file position indicator)\fP は、追加モードで開かれない限りファイルの先頭 (0 バイト目)
に位置する。 追加モードを使用した場合、 位置指示子をファイルの先頭に置かれるか末尾に置かれるかは規定されていない。 位置指示子は、
以降の読み書きや位置指定リクエストによって変更される。 すべての入力は、 \fBfgetc\fP(3)
関数を次々に呼び出して文字を読み込んだかのように行われる。 一方すべての出力は、 \fBfputc\fP(3)
関数を次々に呼び出して文字を書き込んだかのように行われる。
.PP
ファイルを \fIクローズ (close) する\fP ことによって、そのファイルはストリームから切り離される。
出力ストリームは、そのストリームがファイルから切り離される前にフラッシュされる (書き込まれていないすべてのバッファーの内容がホスト環境に転送される)。
\fIFILE\fP オブジェクトへのポインターの値は、 ファイルを閉じた後では不確定になる (ゴミになってしまう)。
.PP
ファイルはその後 (同じまたは別のプログラムによって)  再びオープンされることもあり、 その内容が修正されたり変更されたりする
(そのファイルで先頭への位置移動が可能であれば)。 main 関数がもとの呼び出し側に返ったり、 \fBexit\fP(3)  関数が呼ばれた場合、
プログラムの終了の前に 現在開いているすべてのファイルは閉じられる (その結果、すべての出力ストリームはフラッシュされる)。 プログラムの停止に
\fBabort\fP(3)  のような他の方法を用いた場合には、 ファイルが正しく閉じられる保証はない。
.PP
プログラムの起動時に 3 個のテキストストリームが予め定義されており、 それらは明示的に開く必要がない。 \fI標準入力 (standard
input)\fP (通常の入力を読み取るのに使う)、 \fI標準出力 (standard output)\fP (通常の出力を書き込むのに使う)、
\fI標準エラー出力 (standard error)\fP (診断出力を書き込むのに使う) である。 これらのストリームは \fIstdin\fP,
\fIstdout\fP, \fIstderr\fP と短縮して表現される。 オープンされたときには、 標準エラーストリームは
完全にはバッファーリングされていない。 標準入力ストリームと標準出力ストリームは、 ストリームがインタラクティブなデバイスを参照していなければ、
完全にバッファーリングされている。
.PP
端末デバイスを参照する出力ストリームは、 デフォルトでは常に行単位でバッファーリングされている。
ただしそのようなストリームにおけるバッファー内の出力は、 端末デバイスを参照している入力ストリームからの読み込みがあるたびに、 自動的に書き込まれる。
出力端末に行の一部を書き込んだ後で大量の計算を行う場合、 出力が表示されるように、計算に取りかかる前に標準出力に対して \fBfflush\fP(3)
を実行する必要がある。
.PP
\fIstdio\fP ライブラリは \fBlibc\fP ライブラリの一部であり、ルーチンは \fBcc\fP(1) によって必要な時に自動的に読み込まれる。 後述する
man ページ中の「書式」の節には、 どのインクルードファイルを使用しなければならないか、 その関数のコンパイラー宣言はどのようなものか、
どのような外部変数が関係するのかが示されている。
.PP
.\" Not on Linux: .BR fropen ,
.\" Not on Linux: .BR fwopen ,
\fBBUFSIZ\fP, \fBEOF\fP, \fBFILENAME_MAX\fP, \fBFOPEN_MAX\fP, \fBL_cuserid\fP,
\fBL_ctermid\fP, \fBL_tmpnam\fP, \fBNULL\fP, \fBSEEK_END\fP, \fBSEEK_SET\fP, \fBSEEK_CUR\fP,
\fBTMP_MAX\fP, \fBclearerr\fP, \fBfeof\fP, \fBferror\fP, \fBfileno\fP, \fBgetc\fP, \fBgetchar\fP,
\fBputc\fP, \fBputchar\fP, \fBstderr\fP, \fBstdin\fP, \fBstdout\fP はマクロとして定義されている。
これらの名前は、現在の定義を \fB#undef\fP で削除しない限り、再利用することはできない。 マクロ関数の関数版として、 \fBfeof\fP,
\fBferror\fP, \fBclearerr\fP, \fBfileno\fP, \fBgetc\fP, \fBgetchar\fP, \fBputc\fP, \fBputchar\fP
がある。 マクロの定義が明示的に消去されている場合には、 これらを使用することになるだろう。
.SS 関数のリスト
.TS
;
lb lb
l l.
関数	説明
_
 \fBclearerr\fP(3)	ストリームの状態の確認とリセット
 \fBfclose\fP(3)	ストリームをクローズする
 \fBfdopen\fP(3)	ストリームをオープンする
 \fBfeof\fP(3)	ストリームの状態の確認とリセット
 \fBferror\fP(3)	ストリームの状態の確認とリセット
 \fBfflush\fP(3)	ストリームをフラッシュする
 \fBfgetc\fP(3)	次の文字または語を入力ストリームから取得する
 \fBfgetpos\fP(3)	ストリームの位置指示子を移動する
 \fBfgets\fP(3)	行を入力ストリームから取得する
 \fBfileno\fP(3)	引数であるストリームの整数値のディスクリプターを返す
 \fBfopen\fP(3)	ストリームをオープンする
 \fBfprintf\fP(3)	書式付き出力変換
 \fBfpurge\fP(3)	ストリームをフラッシュする
 \fBfputc\fP(3)	文字または語をストリームに出力する
 \fBfputs\fP(3)	行をストリームに出力する
 \fBfread\fP(3)	バイナリーストリーム入出力
 \fBfreopen\fP(3)	ストリームをオープンする
 \fBfscanf\fP(3)	書式付き入力変換
\fBfseek\fP(3)	ストリームの位置指示子を移動する
 \fBfsetpos\fP(3)	ストリームの位置指示子を移動する
 \fBftell\fP(3)	ストリームの位置指示子を移動する
 \fBfwrite\fP(3)	バイナリーストリーム入出力
 \fBgetc\fP(3)	次の文字または語を入力ストリームから取得する
 \fBgetchar\fP(3)	次の文字または語を入力ストリームから取得する
 \fBgets\fP(3)	行を入力ストリームから取得する
 \fBgetw\fP(3)	次の文字または語を入力ストリームから取得する
 \fBmktemp\fP(3)	他と重ならないテンポラリファイル名を作る
 \fBperror\fP(3)	システムエラーメッセージ
\fBprintf\fP(3)	書式付き出力変換
 \fBputc\fP(3)	文字または語をストリームに出力する
 \fBputchar\fP(3)	文字または語をストリームに出力する
 \fBputs\fP(3)	行をストリームに出力する
 \fBputw\fP(3)	文字または語をストリームに出力する
 \fBremove\fP(3)	ディレクトリエントリーを削除する
 \fBrewind\fP(3)	ストリームの位置指示子を移動する
 \fBscanf\fP(3)	書式付き入力変換
 \fBsetbuf\fP(3)	ストリームのバッファーリングの操作
 \fBsetbuffer\fP(3)	ストリームのバッファーリングの操作
 \fBsetlinebuf\fP(3)	ストリームのバッファーリングの操作
 \fBsetvbuf\fP(3)	ストリームのバッファーリングの操作
 \fBsprintf\fP(3)	書式付き出力変換
 \fBsscanf\fP(3)	書式付き入力変換
 \fBstrerror\fP(3)	システムエラーメッセージ
 \fBsys_errlist\fP(3)	システムエラーメッセージ
 \fBsys_nerr\fP(3)	システムエラーメッセージ
 \fBtempnam\fP(3)	テンポラリファイルの操作
 \fBtmpfile\fP(3)	テンポラリファイルの操作
 \fBtmpnam\fP(3)	テンポラリファイルの操作
 \fBungetc\fP(3)	入力ストリームへ 1 文字戻す
 \fBvfprintf\fP(3)	書式付き出力変換
 \fBvfscanf\fP(3)	書式付き入力変換
 \fBvprintf\fP(3)	書式付き出力変換
 \fBvscanf\fP(3)	書式付き入力変換
 \fBvsprintf\fP(3)	書式付き出力変換
 \fBvsscanf\fP(3)	書式付き入力変換
.TE
.SH 準拠
\fIstdio\fP ライブラリは C89 に準拠している。
.SH 関連項目
\fBclose\fP(2), \fBopen\fP(2), \fBread\fP(2), \fBwrite\fP(2), \fBstdout\fP(3),
\fBunlocked_stdio\fP(3)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 5.10 の一部である。プロジェクトの説明とバグ報告に関する情報は
\%https://www.kernel.org/doc/man\-pages/ に書かれている。
