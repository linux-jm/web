.\" Copyright (c) 2008, Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Copyright (c) 2008  Akihiro MOTOKI
.\"         all rights reserved.
.\" Translated 2008-08-21, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v3.04
.\"
.TH SIGWAIT 3 2020\-06\-09 Linux "Linux Programmer's Manual"
.SH 名前
sigwait \- シグナルを待つ
.SH 書式
.nf
\fB#include <signal.h>\fP
.PP
\fB int sigwait(const sigset_t *\fP\fIset\fP\fB, int *\fP\fIsig\fP\fB);\fP
.fi
.PP
.RS -4
glibc 向けの機能検査マクロの要件 (\fBfeature_test_macros\fP(7)  参照):
.RE
.PP
.ad l
\fBsigwait\fP():
.RS 4
glibc 2.26 以降:
    _POSIX_C_SOURCE >= 199506L
.br
Glibc 2.25 以前:
    _POSIX_C_SOURCE
.RE
.ad b
.SH 説明
\fBsigwait\fP()  関数は、シグナル集合 \fIset\fP で指定されたシグナルの一つが処理待ち (pending) になるまで、
呼び出したスレッドの実行を中断する。 この関数はそのシグナルを受け取り (つまり、処理待ちのシグナルのリスト
からそのシグナルを削除し)、そのシグナル番号を \fIsig\fP に格納して返す。
.PP
\fBsigwait\fP()  の動作は \fBsigwaitinfo\fP(2)  と同じだが、以下の点が異なる。
.IP * 2
\fBsigwait\fP()  は、シグナルの内容を表す \fIsiginfo_t\fP 構造体を返すのではなく、単にシグナル番号を返す。
.IP *
返り値が \fBsigwaitinfo\fP(2)  とは異なる。
.SH 返り値
成功すると、 \fBsigwait\fP()  は 0 を返す。 エラーの場合、(「エラー」の節のリストにある) 正のエラー番号を返す。
.SH エラー
.TP 
\fBEINVAL\fP
.\" Does not occur for glibc.
\fIset\fP に無効なシグナル番号が入っている。
.SH 属性
この節で使用されている用語の説明については、 \fBattributes\fP(7) を参照。
.TS
allbox;
lb lb lb
l l l.
インターフェース	属性	値
T{
\fBsigwait\fP()
T}	Thread safety	MT\-Safe
.TE
.SH 準拠
POSIX.1\-2001, POSIX.1\-2008.
.SH 注意
\fBsigwait\fP()  は \fBsigtimedwait\fP(2)  を使って実装されている。
.PP
The glibc implementation of \fBsigwait\fP()  silently ignores attempts to wait
for the two real\-time signals that are used internally by the NPTL threading
implementation.  See \fBnptl\fP(7)  for details.
.SH 例
\fBpthread_sigmask\fP(3)  を参照。
.SH 関連項目
\fBsigaction\fP(2), \fBsignalfd\fP(2), \fBsigpending\fP(2), \fBsigsuspend\fP(2),
\fBsigwaitinfo\fP(2), \fBsigsetops\fP(3), \fBsignal\fP(7)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 5.10 の一部である。プロジェクトの説明とバグ報告に関する情報は
\%https://www.kernel.org/doc/man\-pages/ に書かれている。
