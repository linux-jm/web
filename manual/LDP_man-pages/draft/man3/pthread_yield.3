.\" Copyright (c) 2009 Michael Kerrisk, <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Copyright (c) 2012  Akihiro MOTOKI
.\"         all rights reserved.
.\" Translated 2012-05-04, Akihiro MOTOKI <amotoki@gmail.com>
.\"
.TH PTHREAD_YIELD 3 2017\-11\-26 Linux "Linux Programmer's Manual"
.SH 名前
pthread_yield \- プロセッサを明け渡す (yield)
.SH 書式
.nf
\fB#define _GNU_SOURCE\fP             /* See feature_test_macros(7) */
\fB#include <pthread.h>\fP
.PP
\fBint pthread_yield(void);\fP
.fi
.PP
\fI\-pthread\fP を付けてコンパイルとリンクを行う。
.SH 説明
\fBpthread_yield\fP() を呼び出すと、呼び出したスレッドは CPU を手放す。
スレッドはそのスレッドの静的優先度の実行キューの末尾に回り、
別のスレッドが実行されるようにスケジューリングされる。
詳細は \fBsched_yield\fP(2) を参照。
.SH 返り値
成功すると、 \fBpthread_yield\fP() は 0 を返す。
エラーの場合、エラー番号を返す。
.SH エラー
Linux では、この関数の呼び出しは常に成功する
(ただし、移植性や将来も動作することを保証したいアプリケーションでは
正のエラーの返り値を処理するようにすべきである)。
.SH 属性
この節で使用されている用語の説明については、 \fBattributes\fP(7) を参照。
.TS
allbox;
lb lb lb
l l l.
インターフェース	属性	値
T{
\fBpthread_yield\fP()
T}	Thread safety	MT\-Safe
.TE
.SH 準拠
.\" e.g., the BSDs, Tru64, AIX, and Irix.
この関数は非標準だが、他のいくつかのシステムにも存在する。
代わりに、標準化されている \fBsched_yield\fP(2) を使うこと。
.SH 注意
Linux では、この関数は \fBsched_yield\fP(2) を呼び出す形で実装されている。
.PP
\fBpthread_yield\fP()  is intended for use with real\-time scheduling policies
(i.e., \fBSCHED_FIFO\fP or \fBSCHED_RR\fP).  Use of \fBpthread_yield\fP()  with
nondeterministic scheduling policies such as \fBSCHED_OTHER\fP is unspecified
and very likely means your application design is broken.
.SH 関連項目
.\" FIXME . .BR pthread_cond_wait (3),
\fBsched_yield\fP(2), \fBpthreads\fP(7), \fBsched\fP(7)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 5.10 の一部である。プロジェクトの説明とバグ報告に関する情報は
\%https://www.kernel.org/doc/man\-pages/ に書かれている。
