.\" Copyright (c) Bruno Haible <haible@clisp.cons.org>
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_ONEPARA)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"   GNU glibc-2 source code and manual
.\"   Dinkumware C library reference http://www.dinkumware.com/
.\"   OpenGroup's Single UNIX specification http://www.UNIX-systems.org/online.html
.\"   ISO/IEC 9899:1999
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Translated Sat Oct 23 17:53:50 JST 1999
.\"           by FUJIWARA Teruyoshi <fujiwara@linux.or.jp>
.\"
.TH WCSTOK 3 2020\-06\-09 GNU "Linux Programmer's Manual"
.SH 名前
wcstok \- ワイド文字文字列をトークンに分割する
.SH 書式
.nf
\fB#include <wchar.h>\fP
.PP
\fBwchar_t *wcstok(wchar_t *\fP\fIwcs\fP\fB, const wchar_t *\fP\fIdelim\fP\fB, wchar_t **\fP\fIptr\fP\fB);\fP
.fi
.SH 説明
\fBwcstok\fP()  関数は、 \fBstrtok\fP(3)  関数に対応するワイド文字関数に、
マルチスレッドセーフの動作をさせるための引数を追加したものである。 この関数を用いて、ワイド文字文字列 \fIwcs\fP をトークンに分解すること
ができる。ここで、トークンは \fIdelim\fP に列挙されている文字を含まな い部分文字列として定義される。
.PP
検索は \fIwcs\fP が NULL でなければ \fIwcs\fP から開始され、\fIwcs\fP が NULL ならば \fI*ptr\fP
から開始される。まず、全ての区切りワイド文字 がスキップされる。つまり、\fIdelim\fP に含まれるワイド文字を超えるよう
にポインターが前に進められる。 ワイド文字文字列の終わりに達したら、 \fBwcstok\fP()  は NULL を返して
トークンが全く見つからなかったことを示し、この後に \fBwcstok\fP()  を呼び 出しても NULL が返されるように \fI*ptr\fP
に適切な値を設定する。それ 以外の場合には、 \fBwcstok\fP()  関数はトークンの先頭を識別し、これを指す
ポインターを返す。ただしこれを行う前に、トークンの後にある、\fIdelim\fP に含まれている文字をヌルワイド文字 (L\(aq\e0\(aq)
に置き換えること によってトークンを 0 で終端させる。さらに \fI*ptr\fP を更新し、後で \fBwcstok\fP()  を呼び出した
際に、識別されたトークンの続きから検索できるようにする。
.SH 返り値
\fBwcstok\fP()  関数は次のトークンへのポインターを返す。トークンが見つから なければ NULL を返す。
.SH 属性
この節で使用されている用語の説明については、 \fBattributes\fP(7) を参照。
.TS
allbox;
lb lb lb
l l l.
インターフェース	属性	値
T{
\fBwcstok\fP()
T}	Thread safety	MT\-Safe
.TE
.SH 準拠
POSIX.1\-2001, POSIX.1\-2008, C99.
.SH 注意
関数に与えたワイド文字列 \fIwcs\fP は、関数の動作によって完全に書き換 えられる。
.SH 例
以下のコードは、ワイド文字文字列に含まれるトークンを取り出しながら ループする。
.PP
.EX
wchar_t *wcs = ...;
wchar_t *token;
wchar_t *state;
for (token = wcstok(wcs, " \et\en", &state);
    token != NULL;
    token = wcstok(NULL, " \et\en", &state)) {
    ...
}
.EE
.SH 関連項目
\fBstrtok\fP(3), \fBwcschr\fP(3)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 5.10 の一部である。プロジェクトの説明とバグ報告に関する情報は
\%https://www.kernel.org/doc/man\-pages/ に書かれている。
