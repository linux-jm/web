.\" Copyright (c) 2009 Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Copyright (c) 2012  Akihiro MOTOKI
.\"         all rights reserved.
.\" Translated 2012-05-04, Akihiro MOTOKI <amotoki@gmail.com>
.\"
.TH PTHREAD_SIGMASK 3 2020\-11\-01 Linux "Linux Programmer's Manual"
.SH 名前
pthread_sigmask \- 禁止するシグナルマスクの確認と変更を行う
.SH 書式
.nf
\fB#include <signal.h>\fP
.PP
\fBint pthread_sigmask(int \fP\fIhow\fP\fB, const sigset_t *\fP\fIset\fP\fB, sigset_t *\fP\fIoldset\fP\fB);\fP
.fi
.PP
\fI\-pthread\fP を付けてコンパイルとリンクを行う。
.PP
.RS -4
glibc 向けの機能検査マクロの要件 (\fBfeature_test_macros\fP(7)  参照):
.RE
.PP
.ad l
\fBpthread_sigmask\fP():
.RS 4
_POSIX_C_SOURCE\ >=\ 199506L || _XOPEN_SOURCE\ >=\ 500
.RE
.ad b
.SH 説明
\fBpthread_sigmask\fP() 関数は \fBsigprocmask\fP(2) と全く同様だが、マルチスレッドプログラムでの利用が POSIX.1
で明示的に規定されている点が異なる。他の違いはこのマニュアルページで説明する。
.PP
この関数の引数と動作の説明は \fBsigprocmask\fP(2) を参照。
.SH 返り値
成功すると、 \fBpthread_sigmask\fP() は 0 を返す。
エラーの場合、エラー番号を返す。
.SH エラー
\fBsigprocmask\fP(2) を参照。
.SH 属性
この節で使用されている用語の説明については、 \fBattributes\fP(7) を参照。
.TS
allbox;
lb lb lb
l l l.
インターフェース	属性	値
T{
\fBpthread_sigmask\fP()
T}	Thread safety	MT\-Safe
.TE
.SH 準拠
POSIX.1\-2001, POSIX.1\-2008.
.SH 注意
新しいスレッドは、スレッドを作成したスレッドのシグナルマスクのコピーを
継承する。
.PP
The glibc \fBpthread_sigmask\fP()  function silently ignores attempts to block
the two real\-time signals that are used internally by the NPTL threading
implementation.  See \fBnptl\fP(7)  for details.
.SH 例
以下のプログラムは、メインスレッドでシグナルのいくつかを禁止 (block)
するように設定を行い、 \fBsigwait\fP(3) 経由でそれらのシグナルを集める
専用のスレッドを作成する。
下記のシェルのセッションはその利用例を示したものである。
.PP
.in +4n
.EX
$\fB ./a.out &\fP
[1] 5423
$\fB kill \-QUIT %1\fP
Signal handling thread got signal 3
$\fB kill \-USR1 %1\fP
Signal handling thread got signal 10
$\fB kill \-TERM %1\fP
[1]+  Terminated              ./a.out
.EE
.in
.SS プログラムのソース
\&
.EX
#include <pthread.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <signal.h>
#include <errno.h>

/* Simple error handling functions */

#define handle_error_en(en, msg) \e
        do { errno = en; perror(msg); exit(EXIT_FAILURE); } while (0)

static void *
sig_thread(void *arg)
{
    sigset_t *set = arg;
    int s, sig;

    for (;;) {
        s = sigwait(set, &sig);
        if (s != 0)
            handle_error_en(s, "sigwait");
        printf("Signal handling thread got signal %d\en", sig);
    }
}

int
main(int argc, char *argv[])
{
    pthread_t thread;
    sigset_t set;
    int s;

    /* Block SIGQUIT and SIGUSR1; other threads created by main()
       will inherit a copy of the signal mask. */

    sigemptyset(&set);
    sigaddset(&set, SIGQUIT);
    sigaddset(&set, SIGUSR1);
    s = pthread_sigmask(SIG_BLOCK, &set, NULL);
    if (s != 0)
        handle_error_en(s, "pthread_sigmask");

    s = pthread_create(&thread, NULL, &sig_thread, &set);
    if (s != 0)
        handle_error_en(s, "pthread_create");

    /* Main thread carries on to create other threads and/or do
       other work */

    pause();            /* Dummy pause so we can test program */
}
.EE
.SH 関連項目
\fBsigaction\fP(2), \fBsigpending\fP(2), \fBsigprocmask\fP(2),
\fBpthread_attr_setsigmask_np\fP(3), \fBpthread_create\fP(3), \fBpthread_kill\fP(3),
\fBsigsetops\fP(3), \fBpthreads\fP(7), \fBsignal\fP(7)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 5.10 の一部である。プロジェクトの説明とバグ報告に関する情報は
\%https://www.kernel.org/doc/man\-pages/ に書かれている。
