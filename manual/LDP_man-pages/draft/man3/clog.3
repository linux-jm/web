.\" Copyright 2002 Walter Harms (walter.harms@informatik.uni-oldenburg.de)
.\"
.\" %%%LICENSE_START(GPL_NOVERSION_ONELINE)
.\" Distributed under GPL
.\" %%%LICENSE_END
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Copyright (c) 2003  Akihiro MOTOKI
.\"         all rights reserved.
.\" Translated Thu Jul 24 01:47:42 JST 2003
.\"         by Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\"
.TH CLOG 3 2017\-09\-15 "" "Linux Programmer's Manual"
.SH 名前
clog, clogf, clogl \- 複素数の自然対数
.SH 書式
\fB#include <complex.h>\fP
.PP
\fBdouble complex clog(double complex \fP\fIz\fP\fB);\fP
.br
\fBfloat complex clogf(float complex \fP\fIz\fP\fB);\fP
.br
\fBlong double complex clogl(long double complex \fP\fIz\fP\fB);\fP
.PP
\fI\-lm\fP でリンクする。
.SH 説明
これらの関数は、複素数 \fIz\fP の自然対数を計算する。実軸の負の部分に沿って分枝切断 (branch cut) がある。
.PP
対数 \fBclog\fP()  は指数関数 \fBcexp\fP()  の逆関数である。 したがって、 \fIy = clog(z)\fP ならば、 \fIz =
cexp(y)\fP が成立する。 \fIy\fP の虚数部の値は区間 [\-pi,pi] から選択される。
.PP
次の関係が成立する:
.PP
.nf
    clog(z) = log(cabs(z)) + I * carg(z)
.fi
.PP
\fIz\fP として 0 に近い値を入れると、オーバーフローを起こすため、 注意が必要である。
.SH バージョン
これらの関数は glibc バージョン 2.1 で初めて登場した。
.SH 属性
この節で使用されている用語の説明については、 \fBattributes\fP(7) を参照。
.TS
allbox;
lbw24 lb lb
l l l.
インターフェース	属性	値
T{
\fBclog\fP(),
\fBclogf\fP(),
\fBclogl\fP()
T}	Thread safety	MT\-Safe
.TE
.SH 準拠
C99, POSIX.1\-2001, POSIX.1\-2008.
.SH 関連項目
\fBcabs\fP(3), \fBcexp\fP(3), \fBclog10\fP(3), \fBclog2\fP(3), \fBcomplex\fP(7)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 5.10 の一部である。プロジェクトの説明とバグ報告に関する情報は
\%https://www.kernel.org/doc/man\-pages/ に書かれている。
