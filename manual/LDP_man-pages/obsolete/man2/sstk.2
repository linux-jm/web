.\" From the 4.3BSD Architecture Manual - BSD copyright
.\"
.\" Japanese Version Copyright (c) 2004 Yuichi SATO
.\"         all rights reserved.
.\" Translated Fri Jun 25 02:23:34 JST 2004
.\"         by Yuichi SATO <ysato444@yahoo.co.jp>
.\"
.TH SSTK 2 2003-11-11 "" "BSD planned"
.\"O .SH NAME
.SH 名前
.\"O sstk \- change stack size
sstk \- スタックサイズを変更する
.\"O .SH SYNOPSIS
.SH 書式
caddr_t sstk(int incr);
.\"O .SH DESCRIPTION
.SH 説明
.\"O (From the 4.3BSD Architecture Manual)
(4.3BSD アーキテクチャマニュアルより)
.sp
.\"O Each process begins execution with three logical areas of memories
.\"O called text, data and stack. The text area is read-only and shared,
.\"O while the data and stack areas are private to the process.
各プロセスは、テキスト・データ・スタックという
メモリの 3 つの論理領域を保持して実行を開始する。
テキスト領域は読み込み専用で共有される。
一方、データ領域とスタック領域はプロセスが公開しない領域である。
.\"O Both the data and stack areas may be extended and contracted on
.\"O program request. The call
データ領域とスタック領域はプログラムの要求により拡大・縮小することができる。
呼び出し
.sp
.in +5
caddr_t addr = sbrk(incr);
.in
.sp
.\"O changes the size of the data area by
.\"O .I incr
.\"O bytes and returns the new end of the data area, while
はデータ領域のサイズを
.I incr
バイトに変更し、データ領域の新しい終端を返す。
一方、
.sp
.in +5
caddr_t addr = sstk(incr);
.in
.sp
.\"O changes the size of the stack area. The stack area is also automatically
.\"O extended as needed. On the VAX the text and data areas are adjacent
.\"O in the P0 region, while the stack section is in the P1 region, and
.\"O grows downward.
はスタック領域のサイズを変更する。
スタック領域は必要に応じて自動的に拡大されたりもする。
VAX では、テキスト領域とデータ領域は P0 領域の隣り合った場所にある。
またスタック区画は P1 領域にあって、下方へ成長する。
.\"O .SH NOTE
.SH 注意
.\"O This call is not supported in 4.3BSD or 4.4BSD or glibc or Linux or any
.\"O other known Unix-like system. Some systems have a routine of this name
.\"O that returns ENOSYS.
この呼び出しは 4.3BSD,  4.4BSD, glibc, Linux,
その他の知られている Unix 系システムではサポートされない。
ENOSYS を返すようなこの名前のルーチンを持っているシステムもある。
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR sbrk (2)
