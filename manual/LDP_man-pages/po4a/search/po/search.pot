# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-03-12 14:01+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#: build/C/man3/bsearch.3:31
#, no-wrap
msgid "BSEARCH"
msgstr ""

#. type: TH
#: build/C/man3/bsearch.3:31 build/C/man3/hsearch.3:35 build/C/man3/qsort.3:37 build/C/man3/tsearch.3:25
#, no-wrap
msgid "2020-11-01"
msgstr ""

#. type: TH
#: build/C/man3/bsearch.3:31 build/C/man3/hsearch.3:35 build/C/man3/lsearch.3:26 build/C/man3/qsort.3:37 build/C/man3/tsearch.3:25
#, no-wrap
msgid "Linux Programmer's Manual"
msgstr ""

#. type: SH
#: build/C/man3/bsearch.3:32 build/C/man3/hsearch.3:36 build/C/man3/lsearch.3:27 build/C/man3/qsort.3:38 build/C/man3/tsearch.3:26
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: build/C/man3/bsearch.3:34
msgid "bsearch - binary search of a sorted array"
msgstr ""

#. type: SH
#: build/C/man3/bsearch.3:34 build/C/man3/hsearch.3:39 build/C/man3/lsearch.3:29 build/C/man3/qsort.3:40 build/C/man3/tsearch.3:28
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: build/C/man3/bsearch.3:37 build/C/man3/qsort.3:43
#, no-wrap
msgid "B<#include E<lt>stdlib.hE<gt>>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/bsearch.3:41
#, no-wrap
msgid ""
"B<void *bsearch(const void *>I<key>B<, const void *>I<base>B<,>\n"
"B<              size_t >I<nmemb>B<, size_t >I<size>B<,>\n"
"B<              int (*>I<compar>B<)(const void *, const void *));>\n"
msgstr ""

#. type: SH
#: build/C/man3/bsearch.3:42 build/C/man3/hsearch.3:59 build/C/man3/lsearch.3:39 build/C/man3/qsort.3:61 build/C/man3/tsearch.3:57
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: build/C/man3/bsearch.3:56
msgid ""
"The B<bsearch>()  function searches an array of I<nmemb> objects, the "
"initial member of which is pointed to by I<base>, for a member that matches "
"the object pointed to by I<key>.  The size of each member of the array is "
"specified by I<size>."
msgstr ""

#. type: Plain text
#: build/C/man3/bsearch.3:70
msgid ""
"The contents of the array should be in ascending sorted order according to "
"the comparison function referenced by I<compar>.  The I<compar> routine is "
"expected to have two arguments which point to the I<key> object and to an "
"array member, in that order, and should return an integer less than, equal "
"to, or greater than zero if the I<key> object is found, respectively, to be "
"less than, to match, or be greater than the array member."
msgstr ""

#. type: SH
#: build/C/man3/bsearch.3:70 build/C/man3/hsearch.3:173 build/C/man3/lsearch.3:72 build/C/man3/qsort.3:91 build/C/man3/tsearch.3:189
#, no-wrap
msgid "RETURN VALUE"
msgstr ""

#. type: Plain text
#: build/C/man3/bsearch.3:77
msgid ""
"The B<bsearch>()  function returns a pointer to a matching member of the "
"array, or NULL if no match is found.  If there are multiple elements that "
"match the key, the element returned is unspecified."
msgstr ""

#. type: SH
#: build/C/man3/bsearch.3:77 build/C/man3/hsearch.3:230 build/C/man3/lsearch.3:80 build/C/man3/qsort.3:100 build/C/man3/tsearch.3:218
#, no-wrap
msgid "ATTRIBUTES"
msgstr ""

#. type: Plain text
#: build/C/man3/bsearch.3:80 build/C/man3/hsearch.3:233 build/C/man3/lsearch.3:83 build/C/man3/qsort.3:103 build/C/man3/tsearch.3:221
msgid "For an explanation of the terms used in this section, see B<attributes>(7)."
msgstr ""

#. type: tbl table
#: build/C/man3/bsearch.3:84 build/C/man3/hsearch.3:237 build/C/man3/lsearch.3:87 build/C/man3/qsort.3:107 build/C/man3/tsearch.3:225
#, no-wrap
msgid "Interface"
msgstr ""

#. type: tbl table
#: build/C/man3/bsearch.3:84 build/C/man3/hsearch.3:237 build/C/man3/lsearch.3:87 build/C/man3/qsort.3:107 build/C/man3/tsearch.3:225
#, no-wrap
msgid "Attribute"
msgstr ""

#. type: tbl table
#: build/C/man3/bsearch.3:84 build/C/man3/hsearch.3:237 build/C/man3/lsearch.3:87 build/C/man3/qsort.3:107 build/C/man3/tsearch.3:225
#, no-wrap
msgid "Value"
msgstr ""

#. type: tbl table
#: build/C/man3/bsearch.3:87
#, no-wrap
msgid "B<bsearch>()"
msgstr ""

#. type: tbl table
#: build/C/man3/bsearch.3:87 build/C/man3/hsearch.3:243 build/C/man3/hsearch.3:249 build/C/man3/lsearch.3:91 build/C/man3/qsort.3:111 build/C/man3/tsearch.3:231 build/C/man3/tsearch.3:234 build/C/man3/tsearch.3:237 build/C/man3/tsearch.3:240
#, no-wrap
msgid "Thread safety"
msgstr ""

#. type: tbl table
#: build/C/man3/bsearch.3:87 build/C/man3/lsearch.3:91 build/C/man3/qsort.3:111 build/C/man3/tsearch.3:240
#, no-wrap
msgid "MT-Safe"
msgstr ""

#. type: SH
#: build/C/man3/bsearch.3:90 build/C/man3/hsearch.3:251 build/C/man3/lsearch.3:94 build/C/man3/qsort.3:114 build/C/man3/tsearch.3:242
#, no-wrap
msgid "CONFORMING TO"
msgstr ""

#. type: Plain text
#: build/C/man3/bsearch.3:92
msgid "POSIX.1-2001, POSIX.1-2008, C89, C99, SVr4, 4.3BSD."
msgstr ""

#. type: SH
#: build/C/man3/bsearch.3:92 build/C/man3/hsearch.3:299 build/C/man3/qsort.3:121 build/C/man3/tsearch.3:266
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Plain text
#: build/C/man3/bsearch.3:97
msgid ""
"The example below first sorts an array of structures using B<qsort>(3), then "
"retrieves desired elements using B<bsearch>()."
msgstr ""

#. type: Plain text
#: build/C/man3/bsearch.3:102 build/C/man3/qsort.3:132
#, no-wrap
msgid ""
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>string.hE<gt>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/bsearch.3:111
#, no-wrap
msgid ""
"struct mi {\n"
"    int nr;\n"
"    char *name;\n"
"} months[] = {\n"
"    { 1, \"jan\" }, { 2, \"feb\" }, { 3, \"mar\" }, { 4, \"apr\" },\n"
"    { 5, \"may\" }, { 6, \"jun\" }, { 7, \"jul\" }, { 8, \"aug\" },\n"
"    { 9, \"sep\" }, {10, \"oct\" }, {11, \"nov\" }, {12, \"dec\" }\n"
"};\n"
msgstr ""

#. type: Plain text
#: build/C/man3/bsearch.3:113
#, no-wrap
msgid "#define nr_of_months (sizeof(months)/sizeof(months[0]))\n"
msgstr ""

#. type: Plain text
#: build/C/man3/bsearch.3:121
#, no-wrap
msgid ""
"static int\n"
"compmi(const void *m1, const void *m2)\n"
"{\n"
"    const struct mi *mi1 = m1;\n"
"    const struct mi *mi2 = m2;\n"
"    return strcmp(mi1-E<gt>name, mi2-E<gt>name);\n"
"}\n"
msgstr ""

#. type: Plain text
#: build/C/man3/bsearch.3:129
#, no-wrap
msgid ""
"int\n"
"main(int argc, char **argv)\n"
"{\n"
"    qsort(months, nr_of_months, sizeof(months[0]), compmi);\n"
"    for (int i = 1; i E<lt> argc; i++) {\n"
"        struct mi key;\n"
"        struct mi *res;\n"
msgstr ""

#. type: Plain text
#: build/C/man3/bsearch.3:140
#, no-wrap
msgid ""
"        key.name = argv[i];\n"
"        res = bsearch(&key, months, nr_of_months,\n"
"                      sizeof(months[0]), compmi);\n"
"        if (res == NULL)\n"
"            printf(\"\\(aq%s\\(aq: unknown month\\en\", argv[i]);\n"
"        else\n"
"            printf(\"%s: month #%d\\en\", res-E<gt>name, res-E<gt>nr);\n"
"    }\n"
"    exit(EXIT_SUCCESS);\n"
"}\n"
msgstr ""

#. type: SH
#: build/C/man3/bsearch.3:142 build/C/man3/hsearch.3:348 build/C/man3/lsearch.3:99 build/C/man3/qsort.3:158 build/C/man3/tsearch.3:343
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: build/C/man3/bsearch.3:147
msgid "B<hsearch>(3), B<lsearch>(3), B<qsort>(3), B<tsearch>(3)"
msgstr ""

#. type: SH
#: build/C/man3/bsearch.3:147 build/C/man3/hsearch.3:353 build/C/man3/lsearch.3:103 build/C/man3/qsort.3:163 build/C/man3/tsearch.3:348
#, no-wrap
msgid "COLOPHON"
msgstr ""

#. type: Plain text
#: build/C/man3/bsearch.3:155 build/C/man3/hsearch.3:361 build/C/man3/lsearch.3:111 build/C/man3/qsort.3:171 build/C/man3/tsearch.3:356
msgid ""
"This page is part of release 5.10 of the Linux I<man-pages> project.  A "
"description of the project, information about reporting bugs, and the latest "
"version of this page, can be found at "
"\\%https://www.kernel.org/doc/man-pages/."
msgstr ""

#. type: TH
#: build/C/man3/hsearch.3:35
#, no-wrap
msgid "HSEARCH"
msgstr ""

#. type: TH
#: build/C/man3/hsearch.3:35 build/C/man3/lsearch.3:26 build/C/man3/tsearch.3:25
#, no-wrap
msgid "GNU"
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:39
msgid ""
"hcreate, hdestroy, hsearch, hcreate_r, hdestroy_r, hsearch_r - hash table "
"management"
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:42 build/C/man3/lsearch.3:32 build/C/man3/tsearch.3:31
#, no-wrap
msgid "B<#include E<lt>search.hE<gt>>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:44
#, no-wrap
msgid "B<int hcreate(size_t >I<nel>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:46
#, no-wrap
msgid "B<ENTRY *hsearch(ENTRY >I<item>B<, ACTION >I<action>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:48
#, no-wrap
msgid "B<void hdestroy(void);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:51 build/C/man3/tsearch.3:49
#, no-wrap
msgid ""
"B<#define _GNU_SOURCE>         /* See feature_test_macros(7) */\n"
"B<#include E<lt>search.hE<gt>>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:53
#, no-wrap
msgid "B<int hcreate_r(size_t >I<nel>B<, struct hsearch_data *>I<htab>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:56
#, no-wrap
msgid ""
"B<int hsearch_r(ENTRY >I<item>B<, ACTION >I<action>B<, ENTRY "
"**>I<retval>B<,>\n"
"B<              struct hsearch_data *>I<htab>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:58
#, no-wrap
msgid "B<void hdestroy_r(struct hsearch_data *>I<htab>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:68
msgid ""
"The three functions B<hcreate>(), B<hsearch>(), and B<hdestroy>()  allow the "
"caller to create and manage a hash search table containing entries "
"consisting of a key (a string) and associated data.  Using these functions, "
"only one hash table can be used at a time."
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:82
msgid ""
"The three functions B<hcreate_r>(), B<hsearch_r>(), B<hdestroy_r>()  are "
"reentrant versions that allow a program to use more than one hash search "
"table at the same time.  The last argument, I<htab>, points to a structure "
"that describes the table on which the function is to operate.  The "
"programmer should treat this structure as opaque (i.e., do not attempt to "
"directly access or modify the fields in this structure)."
msgstr ""

#.  e.g., in glibc it is raised to the next higher prime number
#. type: Plain text
#: build/C/man3/hsearch.3:91
msgid ""
"First a hash table must be created using B<hcreate>().  The argument I<nel> "
"specifies the maximum number of entries in the table.  (This maximum cannot "
"be changed later, so choose it wisely.)  The implementation may adjust this "
"value upward to improve the performance of the resulting hash table."
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:102
msgid ""
"The B<hcreate_r>()  function performs the same task as B<hcreate>(), but for "
"the table described by the structure I<*htab>.  The structure pointed to by "
"I<htab> must be zeroed before the first call to B<hcreate_r>()."
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:117
msgid ""
"The function B<hdestroy>()  frees the memory occupied by the hash table that "
"was created by B<hcreate>().  After calling B<hdestroy>(), a new hash table "
"can be created using B<hcreate>().  The B<hdestroy_r>()  function performs "
"the analogous task for a hash table described by I<*htab>, which was "
"previously created using B<hcreate_r>()."
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:124
msgid ""
"The B<hsearch>()  function searches the hash table for an item with the same "
"key as I<item> (where \"the same\" is determined using B<strcmp>(3)), and if "
"successful returns a pointer to it."
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:127
msgid ""
"The argument I<item> is of type I<ENTRY>, which is defined in "
"I<E<lt>search.hE<gt>> as follows:"
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:134
#, no-wrap
msgid ""
"typedef struct entry {\n"
"    char *key;\n"
"    void *data;\n"
"} ENTRY;\n"
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:140
msgid ""
"The field I<key> points to a null-terminated string which is the search "
"key.  The field I<data> points to data that is associated with that key."
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:159
msgid ""
"The argument I<action> determines what B<hsearch>()  does after an "
"unsuccessful search.  This argument must either have the value B<ENTER>, "
"meaning insert a copy of I<item> (and return a pointer to the new hash table "
"entry as the function result), or the value B<FIND>, meaning that NULL "
"should be returned.  (If I<action> is B<FIND>, then I<data> is ignored.)"
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:173
msgid ""
"The B<hsearch_r>()  function is like B<hsearch>()  but operates on the hash "
"table described by I<*htab>.  The B<hsearch_r>()  function differs from "
"B<hsearch>()  in that a pointer to the found item is returned in I<*retval>, "
"rather than as the function result."
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:181
msgid ""
"B<hcreate>()  and B<hcreate_r>()  return nonzero on success.  They return 0 "
"on error, with I<errno> set to indicate the cause of the error."
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:195
msgid ""
"On success, B<hsearch>()  returns a pointer to an entry in the hash table.  "
"B<hsearch>()  returns NULL on error, that is, if I<action> is B<ENTER> and "
"the hash table is full, or I<action> is B<FIND> and I<item> cannot be found "
"in the hash table.  B<hsearch_r>()  returns nonzero on success, and 0 on "
"error.  In the event of an error, these two functions set I<errno> to "
"indicate the cause of the error."
msgstr ""

#. type: SH
#: build/C/man3/hsearch.3:195
#, no-wrap
msgid "ERRORS"
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:200
msgid "B<hcreate_r>()  and B<hdestroy_r>()  can fail for the following reasons:"
msgstr ""

#. type: TP
#: build/C/man3/hsearch.3:200
#, no-wrap
msgid "B<EINVAL>"
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:204
msgid "I<htab> is NULL."
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:209
msgid "B<hsearch>()  and B<hsearch_r>()  can fail for the following reasons:"
msgstr ""

#. type: TP
#: build/C/man3/hsearch.3:209
#, no-wrap
msgid "B<ENOMEM>"
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:217
msgid ""
"I<action> was B<ENTER>, I<key> was not found in the table, and there was no "
"room in the table to add a new entry."
msgstr ""

#. type: TP
#: build/C/man3/hsearch.3:217
#, no-wrap
msgid "B<ESRCH>"
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:225
msgid "I<action> was B<FIND>, and I<key> was not found in the table."
msgstr ""

#.  PROX.1-2001, POSIX.1-2008
#. type: Plain text
#: build/C/man3/hsearch.3:230
msgid "POSIX.1 specifies only the B<ENOMEM> error."
msgstr ""

#. type: tbl table
#: build/C/man3/hsearch.3:241
#, no-wrap
msgid ""
"B<hcreate>(),\n"
"B<hsearch>(),\n"
msgstr ""

#. type: tbl table
#: build/C/man3/hsearch.3:241 build/C/man3/hsearch.3:247 build/C/man3/tsearch.3:229
#, no-wrap
msgid ".br\n"
msgstr ""

#. type: tbl table
#: build/C/man3/hsearch.3:243
#, no-wrap
msgid "B<hdestroy>()"
msgstr ""

#. type: tbl table
#: build/C/man3/hsearch.3:243
#, no-wrap
msgid "MT-Unsafe race:hsearch"
msgstr ""

#. type: tbl table
#: build/C/man3/hsearch.3:247
#, no-wrap
msgid ""
"B<hcreate_r>(),\n"
"B<hsearch_r>(),\n"
msgstr ""

#. type: tbl table
#: build/C/man3/hsearch.3:249
#, no-wrap
msgid "B<hdestroy_r>()"
msgstr ""

#. type: tbl table
#: build/C/man3/hsearch.3:249
#, no-wrap
msgid "MT-Safe race:htab"
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:258
msgid ""
"The functions B<hcreate>(), B<hsearch>(), and B<hdestroy>()  are from SVr4, "
"and are described in POSIX.1-2001 and POSIX.1-2008."
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:265
msgid ""
"The functions B<hcreate_r>(), B<hsearch_r>(), and B<hdestroy_r>()  are GNU "
"extensions."
msgstr ""

#. type: SH
#: build/C/man3/hsearch.3:265 build/C/man3/qsort.3:117 build/C/man3/tsearch.3:249
#, no-wrap
msgid "NOTES"
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:272
msgid ""
"Hash table implementations are usually more efficient when the table "
"contains enough free space to minimize collisions.  Typically, this means "
"that I<nel> should be at least 25% larger than the maximum number of "
"elements that the caller expects to store in the table."
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:290
msgid ""
"The B<hdestroy>()  and B<hdestroy_r>()  functions do not free the buffers "
"pointed to by the I<key> and I<data> elements of the hash table entries.  "
"(It can't do this because it doesn't know whether these buffers were "
"allocated dynamically.)  If these buffers need to be freed (perhaps because "
"the program is repeatedly creating and destroying hash tables, rather than "
"creating a single table whose lifetime matches that of the program), then "
"the program must maintain bookkeeping data structures that allow it to free "
"them."
msgstr ""

#. type: SH
#: build/C/man3/hsearch.3:290 build/C/man3/lsearch.3:97
#, no-wrap
msgid "BUGS"
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:297
msgid ""
"SVr4 and POSIX.1-2001 specify that I<action> is significant only for "
"unsuccessful searches, so that an B<ENTER> should not do anything for a "
"successful search.  In libc and glibc (before version 2.3), the "
"implementation violates the specification, updating the I<data> for the "
"given I<key> in this case."
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:299
msgid "Individual hash table entries can be added, but not deleted."
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:302
msgid ""
"The following program inserts 24 items into a hash table, then prints some "
"of them."
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:307
#, no-wrap
msgid ""
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>search.hE<gt>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:314
#, no-wrap
msgid ""
"static char *data[] = { \"alpha\", \"bravo\", \"charlie\", \"delta\",\n"
"     \"echo\", \"foxtrot\", \"golf\", \"hotel\", \"india\", \"juliet\",\n"
"     \"kilo\", \"lima\", \"mike\", \"november\", \"oscar\", \"papa\",\n"
"     \"quebec\", \"romeo\", \"sierra\", \"tango\", \"uniform\",\n"
"     \"victor\", \"whisky\", \"x-ray\", \"yankee\", \"zulu\"\n"
"};\n"
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:320
#, no-wrap
msgid ""
"int\n"
"main(void)\n"
"{\n"
"    ENTRY e;\n"
"    ENTRY *ep;\n"
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:322
#, no-wrap
msgid "    hcreate(30);\n"
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:335
#, no-wrap
msgid ""
"    for (int i = 0; i E<lt> 24; i++) {\n"
"        e.key = data[i];\n"
"        /* data is just an integer, instead of a\n"
"           pointer to something */\n"
"        e.data = (void *) i;\n"
"        ep = hsearch(e, ENTER);\n"
"        /* there should be no failures */\n"
"        if (ep == NULL) {\n"
"            fprintf(stderr, \"entry failed\\en\");\n"
"            exit(EXIT_FAILURE);\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:347
#, no-wrap
msgid ""
"    for (int i = 22; i E<lt> 26; i++) {\n"
"        /* print two entries from the table, and\n"
"           show that two are not in the table */\n"
"        e.key = data[i];\n"
"        ep = hsearch(e, FIND);\n"
"        printf(\"%9.9s -E<gt> %9.9s:%d\\en\", e.key,\n"
"               ep ? ep-E<gt>key : \"NULL\", ep ? (int)(ep-E<gt>data) : 0);\n"
"    }\n"
"    hdestroy();\n"
"    exit(EXIT_SUCCESS);\n"
"}\n"
msgstr ""

#. type: Plain text
#: build/C/man3/hsearch.3:353
msgid "B<bsearch>(3), B<lsearch>(3), B<malloc>(3), B<tsearch>(3)"
msgstr ""

#. type: TH
#: build/C/man3/lsearch.3:26
#, no-wrap
msgid "LSEARCH"
msgstr ""

#. type: TH
#: build/C/man3/lsearch.3:26
#, no-wrap
msgid "2017-09-15"
msgstr ""

#. type: Plain text
#: build/C/man3/lsearch.3:29
msgid "lfind, lsearch - linear search of an array"
msgstr ""

#. type: Plain text
#: build/C/man3/lsearch.3:35
#, no-wrap
msgid ""
"B<void *lfind(const void *>I<key>B<, const void *>I<base>B<, size_t "
"*>I<nmemb>B<,>\n"
"B<         size_t >I<size>B<, int(*>I<compar>B<)(const void *, const void "
"*));>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/lsearch.3:38
#, no-wrap
msgid ""
"B<void *lsearch(const void *>I<key>B<, void *>I<base>B<, size_t "
"*>I<nmemb>B<,>\n"
"B<         size_t >I<size>B<, int(*>I<compar>B<)(const void *, const void "
"*));>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/lsearch.3:61
msgid ""
"B<lfind>()  and B<lsearch>()  perform a linear search for I<key> in the "
"array I<base> which has I<*nmemb> elements of I<size> bytes each.  The "
"comparison function referenced by I<compar> is expected to have two "
"arguments which point to the I<key> object and to an array member, in that "
"order, and which returns zero if the I<key> object matches the array member, "
"and nonzero otherwise."
msgstr ""

#. type: Plain text
#: build/C/man3/lsearch.3:72
msgid ""
"If B<lsearch>()  does not find a matching element, then the I<key> object is "
"inserted at the end of the table, and I<*nmemb> is incremented.  In "
"particular, one should know that a matching element exists, or that more "
"room is available."
msgstr ""

#. type: Plain text
#: build/C/man3/lsearch.3:80
msgid ""
"B<lfind>()  returns a pointer to a matching member of the array, or NULL if "
"no match is found.  B<lsearch>()  returns a pointer to a matching member of "
"the array, or to the newly added member if no match is found."
msgstr ""

#. type: tbl table
#: build/C/man3/lsearch.3:91
#, no-wrap
msgid ""
"B<lfind>(),\n"
"B<lsearch>()"
msgstr ""

#. type: Plain text
#: build/C/man3/lsearch.3:97
msgid ""
"POSIX.1-2001, POSIX.1-2008, SVr4, 4.3BSD.  Present in libc since "
"libc-4.6.27."
msgstr ""

#. type: Plain text
#: build/C/man3/lsearch.3:99
msgid "The naming is unfortunate."
msgstr ""

#. type: Plain text
#: build/C/man3/lsearch.3:103
msgid "B<bsearch>(3), B<hsearch>(3), B<tsearch>(3)"
msgstr ""

#. type: TH
#: build/C/man3/qsort.3:37
#, no-wrap
msgid "QSORT"
msgstr ""

#. type: Plain text
#: build/C/man3/qsort.3:40
msgid "qsort, qsort_r - sort an array"
msgstr ""

#. type: Plain text
#: build/C/man3/qsort.3:46
#, no-wrap
msgid ""
"B<void qsort(void *>I<base>B<, size_t >I<nmemb>B<, size_t >I<size>B<,>\n"
"B<           int (*>I<compar>B<)(const void *, const void *));>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/qsort.3:50
#, no-wrap
msgid ""
"B<void qsort_r(void *>I<base>B<, size_t >I<nmemb>B<, size_t >I<size>B<,>\n"
"B<           int (*>I<compar>B<)(const void *, const void *, void *),>\n"
"B<           void *>I<arg>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/qsort.3:55
msgid "Feature Test Macro Requirements for glibc (see B<feature_test_macros>(7)):"
msgstr ""

#. type: Plain text
#: build/C/man3/qsort.3:60
msgid "B<qsort_r>(): _GNU_SOURCE"
msgstr ""

#. type: Plain text
#: build/C/man3/qsort.3:68
msgid ""
"The B<qsort>()  function sorts an array with I<nmemb> elements of size "
"I<size>.  The I<base> argument points to the start of the array."
msgstr ""

#. type: Plain text
#: build/C/man3/qsort.3:72
msgid ""
"The contents of the array are sorted in ascending order according to a "
"comparison function pointed to by I<compar>, which is called with two "
"arguments that point to the objects being compared."
msgstr ""

#. type: Plain text
#: build/C/man3/qsort.3:78
msgid ""
"The comparison function must return an integer less than, equal to, or "
"greater than zero if the first argument is considered to be respectively "
"less than, equal to, or greater than the second.  If two members compare as "
"equal, their order in the sorted array is undefined."
msgstr ""

#. type: Plain text
#: build/C/man3/qsort.3:91
msgid ""
"The B<qsort_r>()  function is identical to B<qsort>()  except that the "
"comparison function I<compar> takes a third argument.  A pointer is passed "
"to the comparison function via I<arg>.  In this way, the comparison function "
"does not need to use global variables to pass through arbitrary arguments, "
"and is therefore reentrant and safe to use in threads."
msgstr ""

#. type: Plain text
#: build/C/man3/qsort.3:97
msgid "The B<qsort>()  and B<qsort_r>()  functions return no value."
msgstr ""

#. type: SH
#: build/C/man3/qsort.3:97 build/C/man3/tsearch.3:215
#, no-wrap
msgid "VERSIONS"
msgstr ""

#. type: Plain text
#: build/C/man3/qsort.3:100
msgid "B<qsort_r>()  was added to glibc in version 2.8."
msgstr ""

#. type: tbl table
#: build/C/man3/qsort.3:111
#, no-wrap
msgid ""
"B<qsort>(),\n"
"B<qsort_r>()"
msgstr ""

#. type: Plain text
#: build/C/man3/qsort.3:117
msgid "B<qsort>(): POSIX.1-2001, POSIX.1-2008, C89, C99, SVr4, 4.3BSD."
msgstr ""

#. type: Plain text
#: build/C/man3/qsort.3:121
msgid ""
"To compare C strings, the comparison function can call B<strcmp>(3), as "
"shown in the example below."
msgstr ""

#. type: Plain text
#: build/C/man3/qsort.3:124
msgid "For one example of use, see the example under B<bsearch>(3)."
msgstr ""

#. type: Plain text
#: build/C/man3/qsort.3:127
msgid ""
"Another example is the following program, which sorts the strings given in "
"its command-line arguments:"
msgstr ""

#. type: Plain text
#: build/C/man3/qsort.3:139
#, no-wrap
msgid ""
"static int\n"
"cmpstringp(const void *p1, const void *p2)\n"
"{\n"
"    /* The actual arguments to this function are \"pointers to\n"
"       pointers to char\", but strcmp(3) arguments are \"pointers\n"
"       to char\", hence the following cast plus dereference */\n"
msgstr ""

#. type: Plain text
#: build/C/man3/qsort.3:142
#, no-wrap
msgid ""
"    return strcmp(*(const char **) p1, *(const char **) p2);\n"
"}\n"
msgstr ""

#. type: Plain text
#: build/C/man3/qsort.3:150
#, no-wrap
msgid ""
"int\n"
"main(int argc, char *argv[])\n"
"{\n"
"    if (argc E<lt> 2) {\n"
"        fprintf(stderr, \"Usage: %s E<lt>stringE<gt>...\\en\", argv[0]);\n"
"        exit(EXIT_FAILURE);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: build/C/man3/qsort.3:152
#, no-wrap
msgid "    qsort(&argv[1], argc - 1, sizeof(char *), cmpstringp);\n"
msgstr ""

#. type: Plain text
#: build/C/man3/qsort.3:157
#, no-wrap
msgid ""
"    for (int j = 1; j E<lt> argc; j++)\n"
"        puts(argv[j]);\n"
"    exit(EXIT_SUCCESS);\n"
"}\n"
msgstr ""

#. type: Plain text
#: build/C/man3/qsort.3:163
msgid "B<sort>(1), B<alphasort>(3), B<strcmp>(3), B<versionsort>(3)"
msgstr ""

#. type: TH
#: build/C/man3/tsearch.3:25
#, no-wrap
msgid "TSEARCH"
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:28
msgid "tsearch, tfind, tdelete, twalk, tdestroy - manage a binary search tree"
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:33
#, no-wrap
msgid "B<typedef enum { preorder, postorder, endorder, leaf } VISIT;>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:36
#, no-wrap
msgid ""
"B<void *tsearch(const void *>I<key>B<, void **>I<rootp>B<,>\n"
"B<                int (*>I<compar>B<)(const void *, const void *));>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:39
#, no-wrap
msgid ""
"B<void *tfind(const void *>I<key>B<, void *const *>I<rootp>B<,>\n"
"B<                int (*>I<compar>B<)(const void *, const void *));>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:42
#, no-wrap
msgid ""
"B<void *tdelete(const void *>I<key>B<, void **>I<rootp>B<,>\n"
"B<                int (*>I<compar>B<)(const void *, const void *));>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:46
#, no-wrap
msgid ""
"B<void twalk(const void *>I<root>B<,>\n"
"B<                void (*>I<action>B<)(const void *>I<nodep>B<, VISIT "
">I<which>B<,>\n"
"B<                               int >I<depth>B<));>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:54
#, no-wrap
msgid ""
"B<void twalk_r(const void *>I<root>B<,>\n"
"B<                void (*>I<action>B<)(const void *>I<nodep>B<, VISIT "
">I<which>B<,>\n"
"B<                               void *>I<closure>B<),>\n"
"B<                void *>I<closure>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:56
#, no-wrap
msgid ""
"B<void tdestroy(void *>I<root>B<, void (*>I<free_node>B<)(void "
"*>I<nodep>B<));>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:75
msgid ""
"B<tsearch>(), B<tfind>(), B<twalk>(), and B<tdelete>()  manage a binary "
"search tree.  They are generalized from Knuth (6.2.2) Algorithm T.  The "
"first field in each node of the tree is a pointer to the corresponding data "
"item.  (The calling program must store the actual data.)  I<compar> points "
"to a comparison routine, which takes pointers to two items.  It should "
"return an integer which is negative, zero, or positive, depending on whether "
"the first item is less than, equal to, or greater than the second."
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:97
msgid ""
"B<tsearch>()  searches the tree for an item.  I<key> points to the item to "
"be searched for.  I<rootp> points to a variable which points to the root of "
"the tree.  If the tree is empty, then the variable that I<rootp> points to "
"should be set to NULL.  If the item is found in the tree, then B<tsearch>()  "
"returns a pointer to the corresponding tree node.  (In other words, "
"B<tsearch>()  returns a pointer to a pointer to the data item.)  If the item "
"is not found, then B<tsearch>()  adds it, and returns a pointer to the "
"corresponding tree node."
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:105
msgid ""
"B<tfind>()  is like B<tsearch>(), except that if the item is not found, then "
"B<tfind>()  returns NULL."
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:110
msgid ""
"B<tdelete>()  deletes an item from the tree.  Its arguments are the same as "
"for B<tsearch>()."
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:145
msgid ""
"B<twalk>()  performs depth-first, left-to-right traversal of a binary tree.  "
"I<root> points to the starting node for the traversal.  If that node is not "
"the root, then only part of the tree will be visited.  B<twalk>()  calls the "
"user function I<action> each time a node is visited (that is, three times "
"for an internal node, and once for a leaf).  I<action>, in turn, takes three "
"arguments.  The first argument is a pointer to the node being visited.  The "
"structure of the node is unspecified, but it is possible to cast the pointer "
"to a pointer-to-pointer-to-element in order to access the element stored "
"within the node.  The application must not modify the structure pointed to "
"by this argument.  The second argument is an integer which takes one of the "
"values B<preorder>, B<postorder>, or B<endorder> depending on whether this "
"is the first, second, or third visit to the internal node, or the value "
"B<leaf> if this is the single visit to a leaf node.  (These symbols are "
"defined in I<E<lt>search.hE<gt>>.)  The third argument is the depth of the "
"node; the root node has depth zero."
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:161
msgid ""
"(More commonly, B<preorder>, B<postorder>, and B<endorder> are known as "
"B<preorder>, B<inorder>, and B<postorder>: before visiting the children, "
"after the first and before the second, and after visiting the children.  "
"Thus, the choice of name B<post\\%order> is rather confusing.)"
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:174
msgid ""
"B<twalk_r>()  is similar to B<twalk>(), but instead of the I<depth> "
"argument, the I<closure> argument pointer is passed to each invocation of "
"the action callback, unchanged.  This pointer can be used to pass "
"information to and from the callback function in a thread-safe fashion, "
"without resorting to global variables."
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:189
msgid ""
"B<tdestroy>()  removes the whole tree pointed to by I<root>, freeing all "
"resources allocated by the B<tsearch>()  function.  For the data in each "
"tree node the function I<free_node> is called.  The pointer to the data is "
"passed as the argument to the function.  If no such work is necessary, "
"I<free_node> must point to a function doing nothing."
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:199
msgid ""
"B<tsearch>()  returns a pointer to a matching node in the tree, or to the "
"newly added node, or NULL if there was insufficient memory to add the item.  "
"B<tfind>()  returns a pointer to the node, or NULL if no match is found.  If "
"there are multiple items that match the key, the item whose node is returned "
"is unspecified."
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:206
msgid ""
"B<tdelete>()  returns a pointer to the parent of the node deleted, or NULL "
"if the item was not found.  If the deleted node was the root node, "
"B<tdelete>()  returns a dangling pointer that must not be accessed."
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:215
msgid ""
"B<tsearch>(), B<tfind>(), and B<tdelete>()  also return NULL if I<rootp> was "
"NULL on entry."
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:218
msgid "B<twalk_r>()  is available in glibc since version 2.30."
msgstr ""

#. type: tbl table
#: build/C/man3/tsearch.3:229
#, no-wrap
msgid ""
"B<tsearch>(),\n"
"B<tfind>(),\n"
msgstr ""

#. type: tbl table
#: build/C/man3/tsearch.3:231
#, no-wrap
msgid "B<tdelete>()"
msgstr ""

#. type: tbl table
#: build/C/man3/tsearch.3:231
#, no-wrap
msgid "MT-Safe race:rootp"
msgstr ""

#. type: tbl table
#: build/C/man3/tsearch.3:234
#, no-wrap
msgid "B<twalk>()"
msgstr ""

#. type: tbl table
#: build/C/man3/tsearch.3:234 build/C/man3/tsearch.3:237
#, no-wrap
msgid "MT-Safe race:root"
msgstr ""

#. type: tbl table
#: build/C/man3/tsearch.3:237
#, no-wrap
msgid "B<twalk_r>()"
msgstr ""

#. type: tbl table
#: build/C/man3/tsearch.3:240
#, no-wrap
msgid "B<tdestroy>()"
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:249
msgid ""
"POSIX.1-2001, POSIX.1-2008, SVr4.  The functions B<tdestroy>()  and "
"B<twalk_r>()  are GNU extensions."
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:253
msgid ""
"B<twalk>()  takes a pointer to the root, while the other functions take a "
"pointer to a variable which points to the root."
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:258
msgid ""
"B<tdelete>()  frees the memory required for the node in the tree.  The user "
"is responsible for freeing the memory for the corresponding data."
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:266
msgid ""
"The example program depends on the fact that B<twalk>()  makes no further "
"reference to a node after calling the user function with argument "
"\"endorder\" or \"leaf\".  This works with the GNU library implementation, "
"but is not in the System V documentation."
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:270
msgid ""
"The following program inserts twelve random numbers into a binary tree, "
"where duplicate numbers are collapsed, then prints the numbers in order."
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:278
#, no-wrap
msgid ""
"#define _GNU_SOURCE     /* Expose declaration of tdestroy() */\n"
"#include E<lt>search.hE<gt>\n"
"#include E<lt>stddef.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>time.hE<gt>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:280
#, no-wrap
msgid "static void *root = NULL;\n"
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:291
#, no-wrap
msgid ""
"static void *\n"
"xmalloc(size_t n)\n"
"{\n"
"    void *p;\n"
"    p = malloc(n);\n"
"    if (p)\n"
"        return p;\n"
"    fprintf(stderr, \"insufficient memory\\en\");\n"
"    exit(EXIT_FAILURE);\n"
"}\n"
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:301
#, no-wrap
msgid ""
"static int\n"
"compare(const void *pa, const void *pb)\n"
"{\n"
"    if (*(int *) pa E<lt> *(int *) pb)\n"
"        return -1;\n"
"    if (*(int *) pa E<gt> *(int *) pb)\n"
"        return 1;\n"
"    return 0;\n"
"}\n"
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:306
#, no-wrap
msgid ""
"static void\n"
"action(const void *nodep, VISIT which, int depth)\n"
"{\n"
"    int *datap;\n"
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:322
#, no-wrap
msgid ""
"    switch (which) {\n"
"    case preorder:\n"
"        break;\n"
"    case postorder:\n"
"        datap = *(int **) nodep;\n"
"        printf(\"%6d\\en\", *datap);\n"
"        break;\n"
"    case endorder:\n"
"        break;\n"
"    case leaf:\n"
"        datap = *(int **) nodep;\n"
"        printf(\"%6d\\en\", *datap);\n"
"        break;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:327
#, no-wrap
msgid ""
"int\n"
"main(void)\n"
"{\n"
"    int **val;\n"
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:342
#, no-wrap
msgid ""
"    srand(time(NULL));\n"
"    for (int i = 0; i E<lt> 12; i++) {\n"
"        int *ptr = xmalloc(sizeof(*ptr));\n"
"        *ptr = rand() & 0xff;\n"
"        val = tsearch(ptr, &root, compare);\n"
"        if (val == NULL)\n"
"            exit(EXIT_FAILURE);\n"
"        else if (*val != ptr)\n"
"            free(ptr);\n"
"    }\n"
"    twalk(root, action);\n"
"    tdestroy(root, free);\n"
"    exit(EXIT_SUCCESS);\n"
"}\n"
msgstr ""

#. type: Plain text
#: build/C/man3/tsearch.3:348
msgid "B<bsearch>(3), B<hsearch>(3), B<lsearch>(3), B<qsort>(3)"
msgstr ""
