# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-03-12 14:00+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#: build/C/man3/cabs.3:7
#, no-wrap
msgid "CABS"
msgstr ""

#. type: TH
#: build/C/man3/cabs.3:7 build/C/man3/casin.3:7 build/C/man3/casinh.3:7 build/C/man3/cimag.3:7 build/C/man3/conj.3:7 build/C/man3/cpow.3:7 build/C/man3/cproj.3:7 build/C/man3/creal.3:7
#, no-wrap
msgid "2015-04-19"
msgstr ""

#. type: TH
#: build/C/man3/cabs.3:7 build/C/man3/cacos.3:8 build/C/man3/cacosh.3:8 build/C/man3/carg.3:7 build/C/man3/casin.3:7 build/C/man3/casinh.3:7 build/C/man3/catan.3:8 build/C/man3/catanh.3:8 build/C/man3/ccos.3:7 build/C/man3/ccosh.3:7 build/C/man3/cexp.3:7 build/C/man3/cexp2.3:7 build/C/man3/cimag.3:7 build/C/man3/clog.3:7 build/C/man3/clog10.3:7 build/C/man3/clog2.3:7 build/C/man7/complex.7:7 build/C/man3/conj.3:7 build/C/man3/cpow.3:7 build/C/man3/cproj.3:7 build/C/man3/creal.3:7 build/C/man3/csin.3:7 build/C/man3/csinh.3:7 build/C/man3/csqrt.3:7 build/C/man3/ctan.3:7 build/C/man3/ctanh.3:7
#, no-wrap
msgid "Linux Programmer's Manual"
msgstr ""

#. type: SH
#: build/C/man3/cabs.3:8 build/C/man3/cacos.3:9 build/C/man3/cacosh.3:9 build/C/man3/carg.3:8 build/C/man3/casin.3:8 build/C/man3/casinh.3:8 build/C/man3/catan.3:9 build/C/man3/catanh.3:9 build/C/man3/ccos.3:8 build/C/man3/ccosh.3:8 build/C/man3/cexp.3:8 build/C/man3/cexp2.3:8 build/C/man3/cimag.3:8 build/C/man3/clog.3:8 build/C/man3/clog10.3:8 build/C/man3/clog2.3:8 build/C/man7/complex.7:8 build/C/man3/conj.3:8 build/C/man3/cpow.3:8 build/C/man3/cproj.3:8 build/C/man3/creal.3:8 build/C/man3/csin.3:8 build/C/man3/csinh.3:8 build/C/man3/csqrt.3:8 build/C/man3/ctan.3:8 build/C/man3/ctanh.3:8
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: build/C/man3/cabs.3:10
msgid "cabs, cabsf, cabsl - absolute value of a complex number"
msgstr ""

#. type: SH
#: build/C/man3/cabs.3:10 build/C/man3/cacos.3:11 build/C/man3/cacosh.3:11 build/C/man3/carg.3:10 build/C/man3/casin.3:10 build/C/man3/casinh.3:10 build/C/man3/catan.3:11 build/C/man3/catanh.3:11 build/C/man3/ccos.3:10 build/C/man3/ccosh.3:10 build/C/man3/cexp.3:10 build/C/man3/cexp2.3:10 build/C/man3/cimag.3:10 build/C/man3/clog.3:10 build/C/man3/clog10.3:10 build/C/man3/clog2.3:10 build/C/man7/complex.7:10 build/C/man3/conj.3:10 build/C/man3/cpow.3:10 build/C/man3/cproj.3:10 build/C/man3/creal.3:10 build/C/man3/csin.3:10 build/C/man3/csinh.3:10 build/C/man3/csqrt.3:10 build/C/man3/ctan.3:10 build/C/man3/ctanh.3:10
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: build/C/man3/cabs.3:12 build/C/man3/cacos.3:13 build/C/man3/cacosh.3:13 build/C/man3/carg.3:12 build/C/man3/casin.3:12 build/C/man3/casinh.3:12 build/C/man3/catan.3:13 build/C/man3/catanh.3:13 build/C/man3/ccos.3:12 build/C/man3/ccosh.3:12 build/C/man3/cexp.3:12 build/C/man3/cexp2.3:12 build/C/man3/cimag.3:12 build/C/man3/clog.3:12 build/C/man3/clog10.3:14 build/C/man3/clog2.3:12 build/C/man7/complex.7:12 build/C/man3/conj.3:12 build/C/man3/cproj.3:12 build/C/man3/creal.3:12 build/C/man3/csin.3:12 build/C/man3/csinh.3:12 build/C/man3/csqrt.3:12 build/C/man3/ctan.3:12 build/C/man3/ctanh.3:12
msgid "B<#include E<lt>complex.hE<gt>>"
msgstr ""

#. type: Plain text
#: build/C/man3/cabs.3:14
msgid "B<double cabs(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cabs.3:16
msgid "B<float cabsf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cabs.3:18
msgid "B<long double cabsl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cabs.3:20 build/C/man3/cacos.3:21 build/C/man3/cacosh.3:21 build/C/man3/carg.3:20 build/C/man3/casin.3:20 build/C/man3/casinh.3:20 build/C/man3/catan.3:21 build/C/man3/catanh.3:21 build/C/man3/ccos.3:20 build/C/man3/ccosh.3:20 build/C/man3/cexp.3:20 build/C/man3/cexp2.3:20 build/C/man3/cimag.3:20 build/C/man3/clog.3:20 build/C/man3/clog10.3:22 build/C/man3/conj.3:20 build/C/man3/cproj.3:20 build/C/man3/creal.3:20 build/C/man3/csin.3:20 build/C/man3/csinh.3:20 build/C/man3/csqrt.3:20 build/C/man3/ctan.3:20 build/C/man3/ctanh.3:20
msgid "Link with I<-lm>."
msgstr ""

#. type: SH
#: build/C/man3/cabs.3:20 build/C/man3/cacos.3:21 build/C/man3/cacosh.3:21 build/C/man3/carg.3:20 build/C/man3/casin.3:20 build/C/man3/casinh.3:20 build/C/man3/catan.3:21 build/C/man3/catanh.3:21 build/C/man3/ccos.3:20 build/C/man3/ccosh.3:20 build/C/man3/cexp.3:20 build/C/man3/cexp2.3:20 build/C/man3/cimag.3:20 build/C/man3/clog.3:20 build/C/man3/clog10.3:22 build/C/man3/clog2.3:20 build/C/man7/complex.7:12 build/C/man3/conj.3:20 build/C/man3/cpow.3:21 build/C/man3/cproj.3:20 build/C/man3/creal.3:20 build/C/man3/csin.3:20 build/C/man3/csinh.3:20 build/C/man3/csqrt.3:20 build/C/man3/ctan.3:20 build/C/man3/ctanh.3:20
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: build/C/man3/cabs.3:24
msgid ""
"These functions return the absolute value of the complex number I<z>.  The "
"result is a real number."
msgstr ""

#. type: SH
#: build/C/man3/cabs.3:24 build/C/man3/cacos.3:34 build/C/man3/cacosh.3:37 build/C/man3/carg.3:59 build/C/man3/casin.3:33 build/C/man3/casinh.3:33 build/C/man3/catan.3:32 build/C/man3/catanh.3:34 build/C/man3/ccos.3:29 build/C/man3/ccosh.3:29 build/C/man3/cexp.3:30 build/C/man3/cimag.3:29 build/C/man3/clog.3:43 build/C/man3/clog10.3:41 build/C/man3/conj.3:30 build/C/man3/cpow.3:29 build/C/man3/cproj.3:30 build/C/man3/creal.3:29 build/C/man3/csin.3:29 build/C/man3/csinh.3:29 build/C/man3/csqrt.3:27 build/C/man3/ctan.3:29 build/C/man3/ctanh.3:30
#, no-wrap
msgid "VERSIONS"
msgstr ""

#. type: Plain text
#: build/C/man3/cabs.3:26 build/C/man3/cacos.3:36 build/C/man3/cacosh.3:39 build/C/man3/carg.3:61 build/C/man3/casin.3:35 build/C/man3/casinh.3:35 build/C/man3/catan.3:34 build/C/man3/catanh.3:36 build/C/man3/ccos.3:31 build/C/man3/ccosh.3:31 build/C/man3/cexp.3:32 build/C/man3/cimag.3:31 build/C/man3/clog.3:45 build/C/man3/clog10.3:43 build/C/man3/conj.3:32 build/C/man3/cpow.3:31 build/C/man3/cproj.3:32 build/C/man3/creal.3:31 build/C/man3/csin.3:31 build/C/man3/csinh.3:31 build/C/man3/csqrt.3:29 build/C/man3/ctan.3:31 build/C/man3/ctanh.3:32
msgid "These functions first appeared in glibc in version 2.1."
msgstr ""

#. type: SH
#: build/C/man3/cabs.3:26 build/C/man3/cacos.3:36 build/C/man3/cacosh.3:39 build/C/man3/carg.3:61 build/C/man3/casin.3:35 build/C/man3/casinh.3:35 build/C/man3/catan.3:34 build/C/man3/catanh.3:36 build/C/man3/ccos.3:31 build/C/man3/cexp.3:32 build/C/man3/cimag.3:31 build/C/man3/clog.3:45 build/C/man3/clog10.3:43 build/C/man3/conj.3:32 build/C/man3/cpow.3:31 build/C/man3/cproj.3:32 build/C/man3/creal.3:31 build/C/man3/csin.3:31 build/C/man3/csinh.3:31 build/C/man3/csqrt.3:29 build/C/man3/ctan.3:31 build/C/man3/ctanh.3:32
#, no-wrap
msgid "ATTRIBUTES"
msgstr ""

#. type: Plain text
#: build/C/man3/cabs.3:29 build/C/man3/cacos.3:39 build/C/man3/cacosh.3:42 build/C/man3/carg.3:64 build/C/man3/casin.3:38 build/C/man3/casinh.3:38 build/C/man3/catan.3:37 build/C/man3/catanh.3:39 build/C/man3/ccos.3:34 build/C/man3/cexp.3:35 build/C/man3/cimag.3:34 build/C/man3/clog.3:48 build/C/man3/clog10.3:46 build/C/man3/conj.3:35 build/C/man3/cpow.3:34 build/C/man3/cproj.3:35 build/C/man3/creal.3:34 build/C/man3/csin.3:34 build/C/man3/csinh.3:34 build/C/man3/csqrt.3:32 build/C/man3/ctan.3:34 build/C/man3/ctanh.3:35
msgid "For an explanation of the terms used in this section, see B<attributes>(7)."
msgstr ""

#. type: tbl table
#: build/C/man3/cabs.3:33 build/C/man3/cacos.3:43 build/C/man3/cacosh.3:46 build/C/man3/carg.3:68 build/C/man3/casin.3:42 build/C/man3/casinh.3:42 build/C/man3/catan.3:41 build/C/man3/catanh.3:43 build/C/man3/ccos.3:38 build/C/man3/cexp.3:39 build/C/man3/cimag.3:38 build/C/man3/clog.3:52 build/C/man3/clog10.3:50 build/C/man3/conj.3:39 build/C/man3/cpow.3:38 build/C/man3/cproj.3:39 build/C/man3/creal.3:38 build/C/man3/csin.3:38 build/C/man3/csinh.3:38 build/C/man3/csqrt.3:36 build/C/man3/ctan.3:38 build/C/man3/ctanh.3:39
#, no-wrap
msgid "Interface"
msgstr ""

#. type: tbl table
#: build/C/man3/cabs.3:33 build/C/man3/cacos.3:43 build/C/man3/cacosh.3:46 build/C/man3/carg.3:68 build/C/man3/casin.3:42 build/C/man3/casinh.3:42 build/C/man3/catan.3:41 build/C/man3/catanh.3:43 build/C/man3/ccos.3:38 build/C/man3/cexp.3:39 build/C/man3/cimag.3:38 build/C/man3/clog.3:52 build/C/man3/clog10.3:50 build/C/man3/conj.3:39 build/C/man3/cpow.3:38 build/C/man3/cproj.3:39 build/C/man3/creal.3:38 build/C/man3/csin.3:38 build/C/man3/csinh.3:38 build/C/man3/csqrt.3:36 build/C/man3/ctan.3:38 build/C/man3/ctanh.3:39
#, no-wrap
msgid "Attribute"
msgstr ""

#. type: tbl table
#: build/C/man3/cabs.3:33 build/C/man3/cacos.3:43 build/C/man3/cacosh.3:46 build/C/man3/carg.3:68 build/C/man3/casin.3:42 build/C/man3/casinh.3:42 build/C/man3/catan.3:41 build/C/man3/catanh.3:43 build/C/man3/ccos.3:38 build/C/man3/cexp.3:39 build/C/man3/cimag.3:38 build/C/man3/clog.3:52 build/C/man3/clog10.3:50 build/C/man3/conj.3:39 build/C/man3/cpow.3:38 build/C/man3/cproj.3:39 build/C/man3/creal.3:38 build/C/man3/csin.3:38 build/C/man3/csinh.3:38 build/C/man3/csqrt.3:36 build/C/man3/ctan.3:38 build/C/man3/ctanh.3:39
#, no-wrap
msgid "Value"
msgstr ""

#. type: tbl table
#: build/C/man3/cabs.3:38
#, no-wrap
msgid ""
"B<cabs>(),\n"
"B<cabsf>(),\n"
"B<cabsl>()"
msgstr ""

#. type: tbl table
#: build/C/man3/cabs.3:38 build/C/man3/cacos.3:48 build/C/man3/cacosh.3:51 build/C/man3/carg.3:73 build/C/man3/casin.3:47 build/C/man3/casinh.3:47 build/C/man3/catan.3:46 build/C/man3/catanh.3:48 build/C/man3/ccos.3:43 build/C/man3/cexp.3:44 build/C/man3/cimag.3:43 build/C/man3/clog.3:57 build/C/man3/clog10.3:55 build/C/man3/conj.3:44 build/C/man3/cpow.3:43 build/C/man3/cproj.3:44 build/C/man3/creal.3:43 build/C/man3/csin.3:43 build/C/man3/csinh.3:43 build/C/man3/csqrt.3:41 build/C/man3/ctan.3:43 build/C/man3/ctanh.3:44
#, no-wrap
msgid "Thread safety"
msgstr ""

#. type: tbl table
#: build/C/man3/cabs.3:38 build/C/man3/cacos.3:48 build/C/man3/cacosh.3:51 build/C/man3/carg.3:73 build/C/man3/casin.3:47 build/C/man3/casinh.3:47 build/C/man3/catan.3:46 build/C/man3/catanh.3:48 build/C/man3/ccos.3:43 build/C/man3/cexp.3:44 build/C/man3/cimag.3:43 build/C/man3/clog.3:57 build/C/man3/clog10.3:55 build/C/man3/conj.3:44 build/C/man3/cpow.3:43 build/C/man3/cproj.3:44 build/C/man3/creal.3:43 build/C/man3/csin.3:43 build/C/man3/csinh.3:43 build/C/man3/csqrt.3:41 build/C/man3/ctan.3:43 build/C/man3/ctanh.3:44
#, no-wrap
msgid "MT-Safe"
msgstr ""

#. type: SH
#: build/C/man3/cabs.3:40 build/C/man3/cacos.3:50 build/C/man3/cacosh.3:53 build/C/man3/carg.3:75 build/C/man3/casin.3:49 build/C/man3/casinh.3:49 build/C/man3/catan.3:48 build/C/man3/catanh.3:50 build/C/man3/ccos.3:46 build/C/man3/ccosh.3:31 build/C/man3/cexp.3:47 build/C/man3/cexp2.3:23 build/C/man3/cimag.3:45 build/C/man3/clog.3:59 build/C/man3/clog10.3:57 build/C/man3/clog2.3:34 build/C/man3/conj.3:46 build/C/man3/cpow.3:45 build/C/man3/cproj.3:46 build/C/man3/creal.3:45 build/C/man3/csin.3:46 build/C/man3/csinh.3:46 build/C/man3/csqrt.3:44 build/C/man3/ctan.3:46 build/C/man3/ctanh.3:47
#, no-wrap
msgid "CONFORMING TO"
msgstr ""

#. type: Plain text
#: build/C/man3/cabs.3:42 build/C/man3/cacos.3:52 build/C/man3/cacosh.3:55 build/C/man3/carg.3:77 build/C/man3/casin.3:51 build/C/man3/casinh.3:51 build/C/man3/catan.3:50 build/C/man3/catanh.3:52 build/C/man3/ccos.3:48 build/C/man3/ccosh.3:33 build/C/man3/cexp.3:49 build/C/man3/cimag.3:47 build/C/man3/clog.3:61 build/C/man3/conj.3:48 build/C/man3/cpow.3:47 build/C/man3/cproj.3:48 build/C/man3/creal.3:47 build/C/man3/csin.3:48 build/C/man3/csinh.3:48 build/C/man3/csqrt.3:46 build/C/man3/ctan.3:48 build/C/man3/ctanh.3:49
msgid "C99, POSIX.1-2001, POSIX.1-2008."
msgstr ""

#. type: SH
#: build/C/man3/cabs.3:42 build/C/man3/cimag.3:47 build/C/man3/cproj.3:48 build/C/man3/creal.3:47
#, no-wrap
msgid "NOTES"
msgstr ""

#. type: Plain text
#: build/C/man3/cabs.3:47
msgid ""
"The function is actually an alias for I<hypot(a,\\ b)> (or, equivalently, "
"I<sqrt(a*a\\ +\\ b*b)>)."
msgstr ""

#. type: SH
#: build/C/man3/cabs.3:47 build/C/man3/cacos.3:85 build/C/man3/cacosh.3:85 build/C/man3/carg.3:77 build/C/man3/casin.3:51 build/C/man3/casinh.3:51 build/C/man3/catan.3:81 build/C/man3/catanh.3:82 build/C/man3/ccos.3:48 build/C/man3/ccosh.3:33 build/C/man3/cexp.3:49 build/C/man3/cexp2.3:28 build/C/man3/cimag.3:50 build/C/man3/clog.3:61 build/C/man3/clog10.3:60 build/C/man3/clog2.3:39 build/C/man7/complex.7:55 build/C/man3/conj.3:48 build/C/man3/cpow.3:47 build/C/man3/cproj.3:54 build/C/man3/creal.3:50 build/C/man3/csin.3:48 build/C/man3/csinh.3:48 build/C/man3/csqrt.3:46 build/C/man3/ctan.3:48 build/C/man3/ctanh.3:49
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: build/C/man3/cabs.3:52
msgid "B<abs>(3), B<cimag>(3), B<hypot>(3), B<complex>(7)"
msgstr ""

#. type: SH
#: build/C/man3/cabs.3:52 build/C/man3/cacos.3:89 build/C/man3/cacosh.3:91 build/C/man3/carg.3:80 build/C/man3/casin.3:55 build/C/man3/casinh.3:57 build/C/man3/catan.3:86 build/C/man3/catanh.3:88 build/C/man3/ccos.3:54 build/C/man3/ccosh.3:39 build/C/man3/cexp.3:55 build/C/man3/cexp2.3:33 build/C/man3/cimag.3:54 build/C/man3/clog.3:67 build/C/man3/clog10.3:66 build/C/man3/clog2.3:45 build/C/man7/complex.7:82 build/C/man3/conj.3:52 build/C/man3/cpow.3:51 build/C/man3/cproj.3:57 build/C/man3/creal.3:54 build/C/man3/csin.3:54 build/C/man3/csinh.3:54 build/C/man3/csqrt.3:50 build/C/man3/ctan.3:54 build/C/man3/ctanh.3:55
#, no-wrap
msgid "COLOPHON"
msgstr ""

#. type: Plain text
#: build/C/man3/cabs.3:60 build/C/man3/cacos.3:97 build/C/man3/cacosh.3:99 build/C/man3/carg.3:88 build/C/man3/casin.3:63 build/C/man3/casinh.3:65 build/C/man3/catan.3:94 build/C/man3/catanh.3:96 build/C/man3/ccos.3:62 build/C/man3/ccosh.3:47 build/C/man3/cexp.3:63 build/C/man3/cexp2.3:41 build/C/man3/cimag.3:62 build/C/man3/clog.3:75 build/C/man3/clog10.3:74 build/C/man3/clog2.3:53 build/C/man7/complex.7:90 build/C/man3/conj.3:60 build/C/man3/cpow.3:59 build/C/man3/cproj.3:65 build/C/man3/creal.3:62 build/C/man3/csin.3:62 build/C/man3/csinh.3:62 build/C/man3/csqrt.3:58 build/C/man3/ctan.3:62 build/C/man3/ctanh.3:63
msgid ""
"This page is part of release 5.10 of the Linux I<man-pages> project.  A "
"description of the project, information about reporting bugs, and the latest "
"version of this page, can be found at "
"\\%https://www.kernel.org/doc/man-pages/."
msgstr ""

#. type: TH
#: build/C/man3/cacos.3:8
#, no-wrap
msgid "CACOS"
msgstr ""

#. type: TH
#: build/C/man3/cacos.3:8 build/C/man3/cacosh.3:8 build/C/man3/catan.3:8 build/C/man3/catanh.3:8 build/C/man3/cexp2.3:7 build/C/man3/clog2.3:7 build/C/man7/complex.7:7
#, no-wrap
msgid "2020-06-09"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:11
msgid "cacos, cacosf, cacosl - complex arc cosine"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:15
msgid "B<double complex cacos(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:17
msgid "B<float complex cacosf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:19
msgid "B<long double complex cacosl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:28
msgid ""
"These functions calculate the complex arc cosine of I<z>.  If I<y\\ =\\ "
"cacos(z)>, then I<z\\ =\\ ccos(y)>.  The real part of I<y> is chosen in the "
"interval [0,pi]."
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:30 build/C/man3/cacosh.3:33 build/C/man3/carg.3:53 build/C/man3/casin.3:29 build/C/man3/casinh.3:29 build/C/man3/catan.3:28 build/C/man3/catanh.3:30 build/C/man3/cexp.3:26 build/C/man3/cimag.3:25 build/C/man3/clog.3:35 build/C/man3/conj.3:26 build/C/man3/creal.3:25
msgid "One has:"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:33
#, no-wrap
msgid "    cacos(z) = -i * clog(z + i * csqrt(1 - z * z))\n"
msgstr ""

#. type: tbl table
#: build/C/man3/cacos.3:48
#, no-wrap
msgid ""
"B<cacos>(),\n"
"B<cacosf>(),\n"
"B<cacosl>()"
msgstr ""

#. type: SH
#: build/C/man3/cacos.3:52 build/C/man3/cacosh.3:55 build/C/man3/catan.3:50 build/C/man3/catanh.3:52 build/C/man7/complex.7:36
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:55 build/C/man3/cacosh.3:58 build/C/man3/catan.3:53 build/C/man3/catanh.3:55
#, no-wrap
msgid "/* Link with \"-lm\" */\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:60 build/C/man3/cacosh.3:63 build/C/man3/catan.3:58 build/C/man3/catanh.3:60
#, no-wrap
msgid ""
"#include E<lt>complex.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>unistd.hE<gt>\n"
"#include E<lt>stdio.hE<gt>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:66 build/C/man3/catan.3:64
#, no-wrap
msgid ""
"int\n"
"main(int argc, char *argv[])\n"
"{\n"
"    double complex z, c, f;\n"
"    double complex i = I;\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:71 build/C/man3/cacosh.3:73 build/C/man3/catan.3:69 build/C/man3/catanh.3:70
#, no-wrap
msgid ""
"    if (argc != 3) {\n"
"        fprintf(stderr, \"Usage: %s E<lt>realE<gt> E<lt>imagE<gt>\\en\", "
"argv[0]);\n"
"        exit(EXIT_FAILURE);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:73 build/C/man3/cacosh.3:75 build/C/man3/catan.3:71 build/C/man3/catanh.3:72
#, no-wrap
msgid "    z = atof(argv[1]) + atof(argv[2]) * I;\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:75
#, no-wrap
msgid "    c = cacos(z);\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:77
#, no-wrap
msgid "    printf(\"cacos() = %6.3f %6.3f*i\\en\", creal(c), cimag(c));\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:79
#, no-wrap
msgid "    f = -i * clog(z + i * csqrt(1 - z * z));\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:81
#, no-wrap
msgid "    printf(\"formula = %6.3f %6.3f*i\\en\", creal(f), cimag(f));\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:84 build/C/man3/cacosh.3:84 build/C/man3/catan.3:80 build/C/man3/catanh.3:81
#, no-wrap
msgid ""
"    exit(EXIT_SUCCESS);\n"
"}\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:89
msgid "B<ccos>(3), B<clog>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/cacosh.3:8
#, no-wrap
msgid "CACOSH"
msgstr ""

#. type: Plain text
#: build/C/man3/cacosh.3:11
msgid "cacosh, cacoshf, cacoshl - complex arc hyperbolic cosine"
msgstr ""

#. type: Plain text
#: build/C/man3/cacosh.3:15
msgid "B<double complex cacosh(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cacosh.3:17
msgid "B<float complex cacoshf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cacosh.3:19
msgid "B<long double complex cacoshl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cacosh.3:31
msgid ""
"These functions calculate the complex arc hyperbolic cosine of I<z>.  If "
"I<y\\ =\\ cacosh(z)>, then I<z\\ =\\ ccosh(y)>.  The imaginary part of I<y> "
"is chosen in the interval [-pi,pi].  The real part of I<y> is chosen "
"nonnegative."
msgstr ""

#. type: Plain text
#: build/C/man3/cacosh.3:36
#, no-wrap
msgid "    cacosh(z) = 2 * clog(csqrt((z + 1) / 2) + csqrt((z - 1) / 2))\n"
msgstr ""

#. type: tbl table
#: build/C/man3/cacosh.3:51
#, no-wrap
msgid ""
"B<cacosh>(),\n"
"B<cacoshf>(),\n"
"B<cacoshl>()"
msgstr ""

#. type: Plain text
#: build/C/man3/cacosh.3:68 build/C/man3/catanh.3:65
#, no-wrap
msgid ""
"int\n"
"main(int argc, char *argv[])\n"
"{\n"
"    double complex z, c, f;\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cacosh.3:78
#, no-wrap
msgid ""
"    c = cacosh(z);\n"
"    printf(\"cacosh() = %6.3f %6.3f*i\\en\", creal(c), cimag(c));\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cacosh.3:81
#, no-wrap
msgid ""
"    f = 2 * clog(csqrt((z + 1)/2) + csqrt((z - 1)/2));\n"
"    printf(\"formula  = %6.3f %6.3f*i\\en\", creal(f2), cimag(f2));\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cacosh.3:91
msgid "B<acosh>(3), B<cabs>(3), B<ccosh>(3), B<cimag>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/carg.3:7
#, no-wrap
msgid "CARG"
msgstr ""

#. type: TH
#: build/C/man3/carg.3:7 build/C/man3/ccos.3:7 build/C/man3/ccosh.3:7 build/C/man3/cexp.3:7 build/C/man3/clog.3:7 build/C/man3/clog10.3:7 build/C/man3/csin.3:7 build/C/man3/csinh.3:7 build/C/man3/csqrt.3:7 build/C/man3/ctan.3:7 build/C/man3/ctanh.3:7
#, no-wrap
msgid "2017-09-15"
msgstr ""

#. type: Plain text
#: build/C/man3/carg.3:10
msgid "carg, cargf, cargl - calculate the complex argument"
msgstr ""

#. type: Plain text
#: build/C/man3/carg.3:14
msgid "B<double carg(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/carg.3:16
msgid "B<float cargf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/carg.3:18
msgid "B<long double cargl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/carg.3:24
msgid ""
"These functions calculate the complex argument (also called phase angle) of "
"I<z>, with a branch cut along the negative real axis."
msgstr ""

#. type: Plain text
#: build/C/man3/carg.3:27
msgid ""
"A complex number can be described by two real coordinates.  One may use "
"rectangular coordinates and gets"
msgstr ""

#. type: Plain text
#: build/C/man3/carg.3:30
#, no-wrap
msgid "    z = x + I * y\n"
msgstr ""

#. type: Plain text
#: build/C/man3/carg.3:36
msgid "where I<x\\ =\\ creal(z)> and I<y\\ =\\ cimag(z)>."
msgstr ""

#. type: Plain text
#: build/C/man3/carg.3:38
msgid "Or one may use polar coordinates and gets"
msgstr ""

#. type: Plain text
#: build/C/man3/carg.3:41
#, no-wrap
msgid "    z = r * cexp(I * a)\n"
msgstr ""

#. type: Plain text
#: build/C/man3/carg.3:51
msgid ""
"where I<r\\ =\\ cabs(z)> is the \"radius\", the \"modulus\", the absolute "
"value of I<z>, and I<a\\ =\\ carg(z)> is the \"phase angle\", the argument "
"of I<z>."
msgstr ""

#. type: Plain text
#: build/C/man3/carg.3:56
#, no-wrap
msgid "    tan(carg(z)) = cimag(z) / creal(z)\n"
msgstr ""

#. type: SH
#: build/C/man3/carg.3:57
#, no-wrap
msgid "RETURN VALUE"
msgstr ""

#. type: Plain text
#: build/C/man3/carg.3:59
msgid "The return value is in the range of [-pi,pi]."
msgstr ""

#. type: tbl table
#: build/C/man3/carg.3:73
#, no-wrap
msgid ""
"B<carg>(),\n"
"B<cargf>(),\n"
"B<cargl>()"
msgstr ""

#. type: Plain text
#: build/C/man3/carg.3:80 build/C/man3/cproj.3:57
msgid "B<cabs>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/casin.3:7
#, no-wrap
msgid "CASIN"
msgstr ""

#. type: Plain text
#: build/C/man3/casin.3:10
msgid "casin, casinf, casinl - complex arc sine"
msgstr ""

#. type: Plain text
#: build/C/man3/casin.3:14
msgid "B<double complex casin(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/casin.3:16
msgid "B<float complex casinf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/casin.3:18
msgid "B<long double complex casinl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/casin.3:27
msgid ""
"These functions calculate the complex arc sine of I<z>.  If I<y\\ =\\ "
"casin(z)>, then I<z\\ =\\ csin(y)>.  The real part of I<y> is chosen in the "
"interval [-pi/2,pi/2]."
msgstr ""

#. type: Plain text
#: build/C/man3/casin.3:32
#, no-wrap
msgid "    casin(z) = -i clog(iz + csqrt(1 - z * z))\n"
msgstr ""

#. type: tbl table
#: build/C/man3/casin.3:47
#, no-wrap
msgid ""
"B<casin>(),\n"
"B<casinf>(),\n"
"B<casinl>()"
msgstr ""

#. type: Plain text
#: build/C/man3/casin.3:55
msgid "B<clog>(3), B<csin>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/casinh.3:7
#, no-wrap
msgid "CASINH"
msgstr ""

#. type: Plain text
#: build/C/man3/casinh.3:10
msgid "casinh, casinhf, casinhl - complex arc sine hyperbolic"
msgstr ""

#. type: Plain text
#: build/C/man3/casinh.3:14
msgid "B<double complex casinh(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/casinh.3:16
msgid "B<float complex casinhf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/casinh.3:18
msgid "B<long double complex casinhl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/casinh.3:27
msgid ""
"These functions calculate the complex arc hyperbolic sine of I<z>.  If I<y\\ "
"=\\ casinh(z)>, then I<z\\ =\\ csinh(y)>.  The imaginary part of I<y> is "
"chosen in the interval [-pi/2,pi/2]."
msgstr ""

#. type: Plain text
#: build/C/man3/casinh.3:32
#, no-wrap
msgid "    casinh(z) = clog(z + csqrt(z * z + 1))\n"
msgstr ""

#. type: tbl table
#: build/C/man3/casinh.3:47
#, no-wrap
msgid ""
"B<casinh>(),\n"
"B<casinhf>(),\n"
"B<casinhl>()"
msgstr ""

#. type: Plain text
#: build/C/man3/casinh.3:57
msgid "B<asinh>(3), B<cabs>(3), B<cimag>(3), B<csinh>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/catan.3:8
#, no-wrap
msgid "CATAN"
msgstr ""

#. type: Plain text
#: build/C/man3/catan.3:11
msgid "catan, catanf, catanl - complex arc tangents"
msgstr ""

#. type: Plain text
#: build/C/man3/catan.3:15
msgid "B<double complex catan(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/catan.3:17
msgid "B<float complex catanf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/catan.3:19
msgid "B<long double complex catanl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/catan.3:26
msgid ""
"These functions calculate the complex arc tangent of I<z>.  If I<y\\ =\\ "
"catan(z)>, then I<z\\ =\\ ctan(y)>.  The real part of y is chosen in the "
"interval [-pi/2,pi/2]."
msgstr ""

#. type: Plain text
#: build/C/man3/catan.3:31
#, no-wrap
msgid "    catan(z) = (clog(1 + i * z) - clog(1 - i * z)) / (2 * i)\n"
msgstr ""

#. type: tbl table
#: build/C/man3/catan.3:46
#, no-wrap
msgid ""
"B<catan>(),\n"
"B<catanf>(),\n"
"B<catanl>()"
msgstr ""

#. type: Plain text
#: build/C/man3/catan.3:74
#, no-wrap
msgid ""
"    c = catan(z);\n"
"    printf(\"catan() = %6.3f %6.3f*i\\en\", creal(c), cimag(c));\n"
msgstr ""

#. type: Plain text
#: build/C/man3/catan.3:77
#, no-wrap
msgid ""
"    f = (clog(1 + i * z) - clog(1 - i * z)) / (2 * i);\n"
"    printf(\"formula = %6.3f %6.3f*i\\en\", creal(f2), cimag(f2));\n"
msgstr ""

#. type: Plain text
#: build/C/man3/catan.3:86
msgid "B<ccos>(3), B<clog>(3), B<ctan>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/catanh.3:8
#, no-wrap
msgid "CATANH"
msgstr ""

#. type: Plain text
#: build/C/man3/catanh.3:11
msgid "catanh, catanhf, catanhl - complex arc tangents hyperbolic"
msgstr ""

#. type: Plain text
#: build/C/man3/catanh.3:15
msgid "B<double complex catanh(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/catanh.3:17
msgid "B<float complex catanhf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/catanh.3:19
msgid "B<long double complex catanhl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/catanh.3:28
msgid ""
"These functions calculate the complex arc hyperbolic tangent of I<z>.  If "
"I<y\\ =\\ catanh(z)>, then I<z\\ =\\ ctanh(y)>.  The imaginary part of I<y> "
"is chosen in the interval [-pi/2,pi/2]."
msgstr ""

#. type: Plain text
#: build/C/man3/catanh.3:33
#, no-wrap
msgid "    catanh(z) = 0.5 * (clog(1 + z) - clog(1 - z))\n"
msgstr ""

#. type: tbl table
#: build/C/man3/catanh.3:48
#, no-wrap
msgid ""
"B<catanh>(),\n"
"B<catanhf>(),\n"
"B<catanhl>()"
msgstr ""

#. type: Plain text
#: build/C/man3/catanh.3:75
#, no-wrap
msgid ""
"    c = catanh(z);\n"
"    printf(\"catanh() = %6.3f %6.3f*i\\en\", creal(c), cimag(c));\n"
msgstr ""

#. type: Plain text
#: build/C/man3/catanh.3:78
#, no-wrap
msgid ""
"    f = 0.5 * (clog(1 + z) - clog(1 - z));\n"
"    printf(\"formula  = %6.3f %6.3f*i\\en\", creal(f2), cimag(f2));\n"
msgstr ""

#. type: Plain text
#: build/C/man3/catanh.3:88
msgid "B<atanh>(3), B<cabs>(3), B<cimag>(3), B<ctanh>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/ccos.3:7
#, no-wrap
msgid "CCOS"
msgstr ""

#. type: Plain text
#: build/C/man3/ccos.3:10
msgid "ccos, ccosf, ccosl - complex cosine function"
msgstr ""

#. type: Plain text
#: build/C/man3/ccos.3:14
msgid "B<double complex ccos(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/ccos.3:16
msgid "B<float complex ccosf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/ccos.3:18
msgid "B<long double complex ccosl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/ccos.3:23
msgid "These functions calculate the complex cosine of I<z>."
msgstr ""

#. type: Plain text
#: build/C/man3/ccos.3:25
msgid "The complex cosine function is defined as:"
msgstr ""

#. type: Plain text
#: build/C/man3/ccos.3:28
#, no-wrap
msgid "    ccos(z) = (exp(i * z) + exp(-i * z)) / 2\n"
msgstr ""

#. type: tbl table
#: build/C/man3/ccos.3:43
#, no-wrap
msgid ""
"B<ccos>(),\n"
"B<ccosf>(),\n"
"B<ccosl>()"
msgstr ""

#. type: Plain text
#: build/C/man3/ccos.3:54
msgid "B<cabs>(3), B<cacos>(3), B<csin>(3), B<ctan>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/ccosh.3:7
#, no-wrap
msgid "CCOSH"
msgstr ""

#. type: Plain text
#: build/C/man3/ccosh.3:10
msgid "ccosh, ccoshf, ccoshl - complex hyperbolic cosine"
msgstr ""

#. type: Plain text
#: build/C/man3/ccosh.3:14
msgid "B<double complex ccosh(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/ccosh.3:16
msgid "B<float complex ccoshf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/ccosh.3:18
msgid "B<long double complex ccoshl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/ccosh.3:23
msgid "These functions calculate the complex hyperbolic cosine of I<z>."
msgstr ""

#. type: Plain text
#: build/C/man3/ccosh.3:25
msgid "The complex hyperbolic cosine function is defined as:"
msgstr ""

#. type: Plain text
#: build/C/man3/ccosh.3:28
#, no-wrap
msgid "    ccosh(z) = (exp(z)+exp(-z))/2\n"
msgstr ""

#. type: Plain text
#: build/C/man3/ccosh.3:39
msgid "B<cabs>(3), B<cacosh>(3), B<csinh>(3), B<ctanh>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/cexp.3:7
#, no-wrap
msgid "CEXP"
msgstr ""

#. type: Plain text
#: build/C/man3/cexp.3:10
msgid "cexp, cexpf, cexpl - complex exponential function"
msgstr ""

#. type: Plain text
#: build/C/man3/cexp.3:14
msgid "B<double complex cexp(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cexp.3:16
msgid "B<float complex cexpf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cexp.3:18
msgid "B<long double complex cexpl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cexp.3:24
msgid ""
"These functions calculate e (2.71828..., the base of natural logarithms)  "
"raised to the power of I<z>."
msgstr ""

#. type: Plain text
#: build/C/man3/cexp.3:29
#, no-wrap
msgid "    cexp(I * z) = ccos(z) + I * csin(z)\n"
msgstr ""

#. type: tbl table
#: build/C/man3/cexp.3:44
#, no-wrap
msgid ""
"B<cexp>(),\n"
"B<cexpf>(),\n"
"B<cexpl>()"
msgstr ""

#. type: Plain text
#: build/C/man3/cexp.3:55
msgid "B<cabs>(3), B<cexp2>(3), B<clog>(3), B<cpow>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/cexp2.3:7
#, no-wrap
msgid "CEXP2"
msgstr ""

#. type: Plain text
#: build/C/man3/cexp2.3:10
msgid "cexp2, cexp2f, cexp2l - base-2 exponent of a complex number"
msgstr ""

#. type: Plain text
#: build/C/man3/cexp2.3:14
msgid "B<double complex cexp2(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cexp2.3:16
msgid "B<float complex cexp2f(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cexp2.3:18
msgid "B<long double complex cexp2l(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cexp2.3:23
msgid "The function returns 2 raised to the power of I<z>."
msgstr ""

#. type: Plain text
#: build/C/man3/cexp2.3:25 build/C/man3/clog2.3:36
msgid "These function names are reserved for future use in C99."
msgstr ""

#.  But reserved in NAMESPACE.
#. type: Plain text
#: build/C/man3/cexp2.3:28
msgid "As at version 2.31, these functions are not provided in glibc."
msgstr ""

#. type: Plain text
#: build/C/man3/cexp2.3:33
msgid "B<cabs>(3), B<cexp>(3), B<clog10>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/cimag.3:7
#, no-wrap
msgid "CIMAG"
msgstr ""

#. type: Plain text
#: build/C/man3/cimag.3:10
msgid "cimag, cimagf, cimagl - get imaginary part of a complex number"
msgstr ""

#. type: Plain text
#: build/C/man3/cimag.3:14
msgid "B<double cimag(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cimag.3:16
msgid "B<float cimagf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cimag.3:18
msgid "B<long double cimagl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cimag.3:23
msgid "These functions return the imaginary part of the complex number I<z>."
msgstr ""

#. type: Plain text
#: build/C/man3/cimag.3:28 build/C/man3/creal.3:28
#, no-wrap
msgid "    z = creal(z) + I * cimag(z)\n"
msgstr ""

#. type: tbl table
#: build/C/man3/cimag.3:43
#, no-wrap
msgid ""
"B<cimag>(),\n"
"B<cimagf>(),\n"
"B<cimagl>()"
msgstr ""

#. type: Plain text
#: build/C/man3/cimag.3:50
msgid "gcc also supports __imag__.  That is a GNU extension."
msgstr ""

#. type: Plain text
#: build/C/man3/cimag.3:54
msgid "B<cabs>(3), B<creal>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/clog.3:7
#, no-wrap
msgid "CLOG"
msgstr ""

#. type: Plain text
#: build/C/man3/clog.3:10
msgid "clog, clogf, clogl - natural logarithm of a complex number"
msgstr ""

#. type: Plain text
#: build/C/man3/clog.3:14
msgid "B<double complex clog(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/clog.3:16
msgid "B<float complex clogf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/clog.3:18
msgid "B<long double complex clogl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/clog.3:24
msgid ""
"These functions calculate the complex natural logarithm of I<z>, with a "
"branch cut along the negative real axis."
msgstr ""

#. type: Plain text
#: build/C/man3/clog.3:33
msgid ""
"The logarithm B<clog>()  is the inverse function of the exponential "
"B<cexp>(3).  Thus, if I<y\\ =\\ clog(z)>, then I<z\\ =\\ cexp(y)>.  The "
"imaginary part of I<y> is chosen in the interval [-pi,pi]."
msgstr ""

#. type: Plain text
#: build/C/man3/clog.3:38
#, no-wrap
msgid "    clog(z) = log(cabs(z)) + I * carg(z)\n"
msgstr ""

#. type: Plain text
#: build/C/man3/clog.3:43 build/C/man3/clog10.3:41 build/C/man3/clog2.3:34
msgid "Note that I<z> close to zero will cause an overflow."
msgstr ""

#. type: tbl table
#: build/C/man3/clog.3:57
#, no-wrap
msgid ""
"B<clog>(),\n"
"B<clogf>(),\n"
"B<clogl>()"
msgstr ""

#. type: Plain text
#: build/C/man3/clog.3:67
msgid "B<cabs>(3), B<cexp>(3), B<clog10>(3), B<clog2>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/clog10.3:7
#, no-wrap
msgid "CLOG10"
msgstr ""

#. type: Plain text
#: build/C/man3/clog10.3:10
msgid "clog10, clog10f, clog10l - base-10 logarithm of a complex number"
msgstr ""

#. type: Plain text
#: build/C/man3/clog10.3:12
msgid "B<#define _GNU_SOURCE> /* See feature_test_macros(7) */"
msgstr ""

#. type: Plain text
#: build/C/man3/clog10.3:16
msgid "B<double complex clog10(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/clog10.3:18
msgid "B<float complex clog10f(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/clog10.3:20
msgid "B<long double complex clog10l(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/clog10.3:26
msgid "The call I<clog10(z)> is equivalent to:"
msgstr ""

#. type: Plain text
#: build/C/man3/clog10.3:28
#, no-wrap
msgid "    clog(z)/log(10)\n"
msgstr ""

#. type: Plain text
#: build/C/man3/clog10.3:30
msgid "or equally:"
msgstr ""

#. type: Plain text
#: build/C/man3/clog10.3:32
#, no-wrap
msgid "    log10(cabs(c)) + I * carg(c) / log(10)\n"
msgstr ""

#. type: Plain text
#: build/C/man3/clog10.3:37 build/C/man3/clog2.3:30
msgid "The other functions perform the same task for I<float> and I<long double>."
msgstr ""

#. type: tbl table
#: build/C/man3/clog10.3:55
#, no-wrap
msgid ""
"B<clog10>(),\n"
"B<clog10f>(),\n"
"B<clog10l>()"
msgstr ""

#. type: Plain text
#: build/C/man3/clog10.3:60
msgid ""
"These functions are GNU extensions.  The identifiers are reserved for future "
"use in C99 and C11."
msgstr ""

#. type: Plain text
#: build/C/man3/clog10.3:66
msgid "B<cabs>(3), B<cexp>(3), B<clog>(3), B<clog2>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/clog2.3:7
#, no-wrap
msgid "CLOG2"
msgstr ""

#. type: Plain text
#: build/C/man3/clog2.3:10
msgid "clog2, clog2f, clog2l - base-2 logarithm of a complex number"
msgstr ""

#. type: Plain text
#: build/C/man3/clog2.3:14
msgid "B<double complex clog2(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/clog2.3:16
msgid "B<float complex clog2f(float complex >I<z>B<);>"
msgstr ""

#.  .PP
#.  Link with \fI\-lm\fP.
#. type: Plain text
#: build/C/man3/clog2.3:20
msgid "B<long double complex clog2l(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/clog2.3:25
msgid "The call I<clog2(z)> is equivalent to I<clog(z)/log(2)>."
msgstr ""

#.  But reserved in NAMESPACE.
#. type: Plain text
#: build/C/man3/clog2.3:39
msgid "Not yet in glibc, as at version 2.19."
msgstr ""

#. type: Plain text
#: build/C/man3/clog2.3:45
msgid "B<cabs>(3), B<cexp>(3), B<clog>(3), B<clog10>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man7/complex.7:7
#, no-wrap
msgid "COMPLEX"
msgstr ""

#. type: Plain text
#: build/C/man7/complex.7:10
msgid "complex - basics of complex mathematics"
msgstr ""

#. type: Plain text
#: build/C/man7/complex.7:15
msgid ""
"Complex numbers are numbers of the form z = a+b*i, where a and b are real "
"numbers and i = sqrt(-1), so that i*i = -1."
msgstr ""

#. type: Plain text
#: build/C/man7/complex.7:25
msgid ""
"There are other ways to represent that number.  The pair (a,b) of real "
"numbers may be viewed as a point in the plane, given by X- and "
"Y-coordinates.  This same point may also be described by giving the pair of "
"real numbers (r,phi), where r is the distance to the origin O, and phi the "
"angle between the X-axis and the line Oz.  Now z = r*exp(i*phi) = "
"r*(cos(phi)+i*sin(phi))."
msgstr ""

#. type: Plain text
#: build/C/man7/complex.7:27
msgid "The basic operations are defined on z = a+b*i and w = c+d*i as:"
msgstr ""

#. type: TP
#: build/C/man7/complex.7:27
#, no-wrap
msgid "B<addition: z+w = (a+c) + (b+d)*i>"
msgstr ""

#. type: TP
#: build/C/man7/complex.7:29
#, no-wrap
msgid "B<multiplication: z*w = (a*c - b*d) + (a*d + b*c)*i>"
msgstr ""

#. type: TP
#: build/C/man7/complex.7:31
#, no-wrap
msgid "B<division: z/w = ((a*c + b*d)/(c*c + d*d)) + ((b*c - a*d)/(c*c + d*d))*i>"
msgstr ""

#. type: Plain text
#: build/C/man7/complex.7:36
msgid ""
"Nearly all math function have a complex counterpart but there are some "
"complex-only functions."
msgstr ""

#. type: Plain text
#: build/C/man7/complex.7:40
msgid ""
"Your C-compiler can work with complex numbers if it supports the C99 "
"standard.  Link with I<-lm>.  The imaginary unit is represented by I."
msgstr ""

#. type: Plain text
#: build/C/man7/complex.7:46
#, no-wrap
msgid ""
"/* check that exp(i * pi) == -1 */\n"
"#include E<lt>math.hE<gt>        /* for atan */\n"
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>complex.hE<gt>\n"
msgstr ""

#. type: Plain text
#: build/C/man7/complex.7:54
#, no-wrap
msgid ""
"int\n"
"main(void)\n"
"{\n"
"    double pi = 4 * atan(1.0);\n"
"    double complex z = cexp(I * pi);\n"
"    printf(\"%f + %f * i\\en\", creal(z), cimag(z));\n"
"}\n"
msgstr ""

#. type: Plain text
#: build/C/man7/complex.7:82
msgid ""
"B<cabs>(3), B<cacos>(3), B<cacosh>(3), B<carg>(3), B<casin>(3), "
"B<casinh>(3), B<catan>(3), B<catanh>(3), B<ccos>(3), B<ccosh>(3), "
"B<cerf>(3), B<cexp>(3), B<cexp2>(3), B<cimag>(3), B<clog>(3), B<clog10>(3), "
"B<clog2>(3), B<conj>(3), B<cpow>(3), B<cproj>(3), B<creal>(3), B<csin>(3), "
"B<csinh>(3), B<csqrt>(3), B<ctan>(3), B<ctanh>(3)"
msgstr ""

#. type: TH
#: build/C/man3/conj.3:7
#, no-wrap
msgid "CONJ"
msgstr ""

#. type: Plain text
#: build/C/man3/conj.3:10
msgid "conj, conjf, conjl - calculate the complex conjugate"
msgstr ""

#. type: Plain text
#: build/C/man3/conj.3:14
msgid "B<double complex conj(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/conj.3:16
msgid "B<float complex conjf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/conj.3:18
msgid "B<long double complex conjl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/conj.3:24
msgid ""
"These functions return the complex conjugate value of I<z>.  That is the "
"value obtained by changing the sign of the imaginary part."
msgstr ""

#. type: Plain text
#: build/C/man3/conj.3:29
#, no-wrap
msgid "    cabs(z) = csqrt(z * conj(z))\n"
msgstr ""

#. type: tbl table
#: build/C/man3/conj.3:44
#, no-wrap
msgid ""
"B<conj>(),\n"
"B<conjf>(),\n"
"B<conjl>()"
msgstr ""

#. type: Plain text
#: build/C/man3/conj.3:52
msgid "B<cabs>(3), B<csqrt>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/cpow.3:7
#, no-wrap
msgid "CPOW"
msgstr ""

#. type: Plain text
#: build/C/man3/cpow.3:10
msgid "cpow, cpowf, cpowl - complex power function"
msgstr ""

#. type: Plain text
#: build/C/man3/cpow.3:13
#, no-wrap
msgid "B<#include E<lt>complex.hE<gt>>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cpow.3:18
#, no-wrap
msgid ""
"B<double complex cpow(double complex >I<x>B<, complex double >I<z>B<);>\n"
"B<float complex cpowf(float complex >I<x>B<, complex float >I<z>B<);>\n"
"B<long double complex cpowl(long double complex >I<x>B<,>\n"
"B<                          complex long double >I<z>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cpow.3:20
#, no-wrap
msgid "Link with I<-lm>.\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cpow.3:29
msgid ""
"These functions calculate I<x> raised to the power I<z> (with a branch cut "
"for I<x> along the negative real axis.)"
msgstr ""

#. type: tbl table
#: build/C/man3/cpow.3:43
#, no-wrap
msgid ""
"B<cpow>(),\n"
"B<cpowf>(),\n"
"B<cpowl>()"
msgstr ""

#. type: Plain text
#: build/C/man3/cpow.3:51
msgid "B<cabs>(3), B<pow>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/cproj.3:7
#, no-wrap
msgid "CPROJ"
msgstr ""

#. type: Plain text
#: build/C/man3/cproj.3:10
msgid "cproj, cprojf, cprojl - project into Riemann Sphere"
msgstr ""

#. type: Plain text
#: build/C/man3/cproj.3:14
msgid "B<double complex cproj(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cproj.3:16
msgid "B<float complex cprojf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cproj.3:18
msgid "B<long double complex cprojl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cproj.3:30
msgid ""
"These functions project a point in the plane onto the surface of a Riemann "
"Sphere, the one-point compactification of the complex plane.  Each finite "
"point I<z> projects to I<z> itself.  Every complex infinite value is "
"projected to a single infinite value, namely to positive infinity on the "
"real axis."
msgstr ""

#. type: tbl table
#: build/C/man3/cproj.3:44
#, no-wrap
msgid ""
"B<cproj>(),\n"
"B<cprojf>(),\n"
"B<cprojl>()"
msgstr ""

#.  http://sources.redhat.com/bugzilla/show_bug.cgi?id=10401
#. type: Plain text
#: build/C/man3/cproj.3:54
msgid ""
"In glibc 2.11 and earlier, the implementation does something different (a "
"I<stereographic> projection onto a Riemann Sphere)."
msgstr ""

#. type: TH
#: build/C/man3/creal.3:7
#, no-wrap
msgid "CREAL"
msgstr ""

#. type: Plain text
#: build/C/man3/creal.3:10
msgid "creal, crealf, creall - get real part of a complex number"
msgstr ""

#. type: Plain text
#: build/C/man3/creal.3:14
msgid "B<double creal(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/creal.3:16
msgid "B<float crealf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/creal.3:18
msgid "B<long double creall(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/creal.3:23
msgid "These functions return the real part of the complex number I<z>."
msgstr ""

#. type: tbl table
#: build/C/man3/creal.3:43
#, no-wrap
msgid ""
"B<creal>(),\n"
"B<crealf>(),\n"
"B<creall>()"
msgstr ""

#. type: Plain text
#: build/C/man3/creal.3:50
msgid "The gcc supports also __real__.  That is a GNU extension."
msgstr ""

#. type: Plain text
#: build/C/man3/creal.3:54
msgid "B<cabs>(3), B<cimag>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/csin.3:7
#, no-wrap
msgid "CSIN"
msgstr ""

#. type: Plain text
#: build/C/man3/csin.3:10
msgid "csin, csinf, csinl - complex sine function"
msgstr ""

#. type: Plain text
#: build/C/man3/csin.3:14
msgid "B<double complex csin(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/csin.3:16
msgid "B<float complex csinf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/csin.3:18
msgid "B<long double complex csinl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/csin.3:23
msgid "These functions calculate the complex sine of I<z>."
msgstr ""

#. type: Plain text
#: build/C/man3/csin.3:25
msgid "The complex sine function is defined as:"
msgstr ""

#. type: Plain text
#: build/C/man3/csin.3:28
#, no-wrap
msgid "    csin(z) = (exp(i * z) - exp(-i * z)) / (2 * i)\n"
msgstr ""

#. type: tbl table
#: build/C/man3/csin.3:43
#, no-wrap
msgid ""
"B<csin>(),\n"
"B<csinf>(),\n"
"B<csinl>()"
msgstr ""

#. type: Plain text
#: build/C/man3/csin.3:54
msgid "B<cabs>(3), B<casin>(3), B<ccos>(3), B<ctan>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/csinh.3:7
#, no-wrap
msgid "CSINH"
msgstr ""

#. type: Plain text
#: build/C/man3/csinh.3:10
msgid "csinh, csinhf, csinhl - complex hyperbolic sine"
msgstr ""

#. type: Plain text
#: build/C/man3/csinh.3:14
msgid "B<double complex csinh(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/csinh.3:16
msgid "B<float complex csinhf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/csinh.3:18
msgid "B<long double complex csinhl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/csinh.3:23
msgid "These functions calculate the complex hyperbolic sine of I<z>."
msgstr ""

#. type: Plain text
#: build/C/man3/csinh.3:25
msgid "The complex hyperbolic sine function is defined as:"
msgstr ""

#. type: Plain text
#: build/C/man3/csinh.3:28
#, no-wrap
msgid "    csinh(z) = (exp(z)-exp(-z))/2\n"
msgstr ""

#. type: tbl table
#: build/C/man3/csinh.3:43
#, no-wrap
msgid ""
"B<csinh>(),\n"
"B<csinhf>(),\n"
"B<csinhl>()"
msgstr ""

#. type: Plain text
#: build/C/man3/csinh.3:54
msgid "B<cabs>(3), B<casinh>(3), B<ccosh>(3), B<ctanh>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/csqrt.3:7
#, no-wrap
msgid "CSQRT"
msgstr ""

#. type: Plain text
#: build/C/man3/csqrt.3:10
msgid "csqrt, csqrtf, csqrtl - complex square root"
msgstr ""

#. type: Plain text
#: build/C/man3/csqrt.3:14
msgid "B<double complex csqrt(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/csqrt.3:16
msgid "B<float complex csqrtf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/csqrt.3:18
msgid "B<long double complex csqrtl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/csqrt.3:27
msgid ""
"These functions calculate the complex square root of I<z>, with a branch cut "
"along the negative real axis.  (That means that I<csqrt(-1+eps*I)> will be "
"close to I while I<csqrt(-1-eps*I)> will be close to -I, I<if eps> is a "
"small positive real number.)"
msgstr ""

#. type: tbl table
#: build/C/man3/csqrt.3:41
#, no-wrap
msgid ""
"B<csqrt>(),\n"
"B<csqrtf>(),\n"
"B<csqrtl>()"
msgstr ""

#. type: Plain text
#: build/C/man3/csqrt.3:50
msgid "B<cabs>(3), B<cexp>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/ctan.3:7
#, no-wrap
msgid "CTAN"
msgstr ""

#. type: Plain text
#: build/C/man3/ctan.3:10
msgid "ctan, ctanf, ctanl - complex tangent function"
msgstr ""

#. type: Plain text
#: build/C/man3/ctan.3:14
msgid "B<double complex ctan(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/ctan.3:16
msgid "B<float complex ctanf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/ctan.3:18
msgid "B<long double complex ctanl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/ctan.3:23
msgid "These functions calculate the complex tangent of I<z>."
msgstr ""

#. type: Plain text
#: build/C/man3/ctan.3:25
msgid "The complex tangent function is defined as:"
msgstr ""

#. type: Plain text
#: build/C/man3/ctan.3:28
#, no-wrap
msgid "    ctan(z) = csin(z) / ccos(z)\n"
msgstr ""

#. type: tbl table
#: build/C/man3/ctan.3:43
#, no-wrap
msgid ""
"B<ctan>(),\n"
"B<ctanf>(),\n"
"B<ctanl>()"
msgstr ""

#. type: Plain text
#: build/C/man3/ctan.3:54
msgid "B<cabs>(3), B<catan>(3), B<ccos>(3), B<csin>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/ctanh.3:7
#, no-wrap
msgid "CTANH"
msgstr ""

#. type: Plain text
#: build/C/man3/ctanh.3:10
msgid "ctanh, ctanhf, ctanhl - complex hyperbolic tangent"
msgstr ""

#. type: Plain text
#: build/C/man3/ctanh.3:14
msgid "B<double complex ctanh(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/ctanh.3:16
msgid "B<float complex ctanhf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/ctanh.3:18
msgid "B<long double complex ctanhl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/ctanh.3:23
msgid "These functions calculate the complex hyperbolic tangent of I<z>."
msgstr ""

#. type: Plain text
#: build/C/man3/ctanh.3:26
msgid "The complex hyperbolic tangent function is defined mathematically as:"
msgstr ""

#. type: Plain text
#: build/C/man3/ctanh.3:29
#, no-wrap
msgid "    ctanh(z) = csinh(z) / ccosh(z)\n"
msgstr ""

#. type: tbl table
#: build/C/man3/ctanh.3:44
#, no-wrap
msgid ""
"B<ctanh>(),\n"
"B<ctanhf>(),\n"
"B<ctanhl>()"
msgstr ""

#. type: Plain text
#: build/C/man3/ctanh.3:55
msgid "B<cabs>(3), B<catanh>(3), B<ccosh>(3), B<csinh>(3), B<complex>(7)"
msgstr ""
