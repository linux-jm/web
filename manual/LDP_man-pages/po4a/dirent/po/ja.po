# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-03-12 14:01+0900\n"
"PO-Revision-Date: 2021-07-14 00:20+0900\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#: build/C/man3/closedir.3:31
#, no-wrap
msgid "CLOSEDIR"
msgstr "CLOSEDIR"

#. type: TH
#: build/C/man3/closedir.3:31 build/C/man3/rewinddir.3:31
#, no-wrap
msgid "2015-08-08"
msgstr "2015-08-08"

#. type: TH
#: build/C/man3/closedir.3:31 build/C/man3/dirfd.3:25
#: build/C/man2/getdents.2:31 build/C/man3/getdirentries.3:27
#: build/C/man3/opendir.3:32 build/C/man2/readdir.2:30
#: build/C/man3/readdir.3:36 build/C/man3/readdir_r.3:26
#: build/C/man3/rewinddir.3:31 build/C/man3/scandir.3:62
#: build/C/man3/seekdir.3:31 build/C/man3/telldir.3:30
#, no-wrap
msgid "Linux Programmer's Manual"
msgstr "Linux Programmer's Manual"

#. type: SH
#: build/C/man3/closedir.3:32 build/C/man3/dirfd.3:26
#: build/C/man2/getdents.2:32 build/C/man3/getdirentries.3:28
#: build/C/man3/opendir.3:33 build/C/man2/readdir.2:31
#: build/C/man3/readdir.3:37 build/C/man3/readdir_r.3:27
#: build/C/man3/rewinddir.3:32 build/C/man3/scandir.3:63
#: build/C/man3/seekdir.3:32 build/C/man3/telldir.3:31
#, no-wrap
msgid "NAME"
msgstr "名前"

#. type: Plain text
#: build/C/man3/closedir.3:34
msgid "closedir - close a directory"
msgstr "closedir - ディレクトリをクローズする"

#. type: SH
#: build/C/man3/closedir.3:34 build/C/man3/dirfd.3:28
#: build/C/man2/getdents.2:34 build/C/man3/getdirentries.3:30
#: build/C/man3/opendir.3:35 build/C/man2/readdir.2:33
#: build/C/man3/readdir.3:39 build/C/man3/readdir_r.3:29
#: build/C/man3/rewinddir.3:34 build/C/man3/scandir.3:66
#: build/C/man3/seekdir.3:35 build/C/man3/telldir.3:33
#, no-wrap
msgid "SYNOPSIS"
msgstr "書式"

#. type: Plain text
#: build/C/man3/closedir.3:37 build/C/man3/rewinddir.3:37
#, no-wrap
msgid "B<#include E<lt>sys/types.hE<gt>>\n"
msgstr "B<#include E<lt>sys/types.hE<gt>>\n"

#. type: Plain text
#: build/C/man3/closedir.3:39 build/C/man3/readdir.3:42
#: build/C/man3/readdir_r.3:32 build/C/man3/rewinddir.3:39
#: build/C/man3/scandir.3:69 build/C/man3/seekdir.3:38
#: build/C/man3/telldir.3:36
#, no-wrap
msgid "B<#include E<lt>dirent.hE<gt>>\n"
msgstr "B<#include E<lt>dirent.hE<gt>>\n"

#. type: Plain text
#: build/C/man3/closedir.3:41
#, no-wrap
msgid "B<int closedir(DIR *>I<dirp>B<);>\n"
msgstr "B<int closedir(DIR *>I<dirp>B<);>\n"

#. type: SH
#: build/C/man3/closedir.3:42 build/C/man3/dirfd.3:50
#: build/C/man2/getdents.2:49 build/C/man3/getdirentries.3:46
#: build/C/man3/opendir.3:62 build/C/man2/readdir.2:42
#: build/C/man3/readdir.3:45 build/C/man3/readdir_r.3:49
#: build/C/man3/rewinddir.3:42 build/C/man3/scandir.3:112
#: build/C/man3/seekdir.3:51 build/C/man3/telldir.3:49
#, no-wrap
msgid "DESCRIPTION"
msgstr "説明"

#. type: Plain text
#: build/C/man3/closedir.3:55
msgid ""
"The B<closedir>()  function closes the directory stream associated with "
"I<dirp>.  A successful call to B<closedir>()  also closes the underlying "
"file descriptor associated with I<dirp>.  The directory stream descriptor "
"I<dirp> is not available after this call."
msgstr ""
"B<closedir>()  関数は I<dirp> に関連付けられた ディレクトリストリームをクロー"
"ズする。\n"
"B<closedir>()  の呼び出しが成功すると、 I<dirp> に関連付けられた\n"
"ファイルディスクリプターもクローズされる。\n"
"ディレクトリストリームディスクリプター (directory stream descriptor) I<dirp> "
"は、\n"
"この呼び出しの後では使用することができない。"

#. type: SH
#: build/C/man3/closedir.3:55 build/C/man3/dirfd.3:65
#: build/C/man2/getdents.2:184 build/C/man3/getdirentries.3:59
#: build/C/man3/opendir.3:82 build/C/man2/readdir.2:93
#: build/C/man3/readdir.3:164 build/C/man3/readdir_r.3:127
#: build/C/man3/rewinddir.3:49 build/C/man3/scandir.3:178
#: build/C/man3/seekdir.3:62 build/C/man3/telldir.3:54
#, no-wrap
msgid "RETURN VALUE"
msgstr "返り値"

#. type: Plain text
#: build/C/man3/closedir.3:62
msgid ""
"The B<closedir>()  function returns 0 on success.  On error, -1 is returned, "
"and I<errno> is set appropriately."
msgstr ""
"B<closedir>()  関数は成功時に 0 を返す。 エラーの場合は、-1 が返されて、 "
"I<errno> が適切に設定される。"

#. type: SH
#: build/C/man3/closedir.3:62 build/C/man3/dirfd.3:72
#: build/C/man2/getdents.2:190 build/C/man3/getdirentries.3:65
#: build/C/man3/opendir.3:91 build/C/man2/readdir.2:99
#: build/C/man3/readdir.3:187 build/C/man3/readdir_r.3:136
#: build/C/man3/scandir.3:194 build/C/man3/telldir.3:62
#, no-wrap
msgid "ERRORS"
msgstr "エラー"

#. type: TP
#: build/C/man3/closedir.3:63 build/C/man2/getdents.2:191
#: build/C/man3/opendir.3:95 build/C/man2/readdir.2:100
#: build/C/man3/readdir.3:188 build/C/man3/readdir_r.3:137
#: build/C/man3/scandir.3:207 build/C/man3/telldir.3:63
#, no-wrap
msgid "B<EBADF>"
msgstr "B<EBADF>"

#. type: Plain text
#: build/C/man3/closedir.3:67 build/C/man3/readdir.3:191
#: build/C/man3/readdir_r.3:140 build/C/man3/telldir.3:66
msgid "Invalid directory stream descriptor I<dirp>."
msgstr "ディレクトリストリームディスクリプター I<dirp> が無効である。"

#. type: SH
#: build/C/man3/closedir.3:67 build/C/man3/dirfd.3:85
#: build/C/man3/getdirentries.3:67 build/C/man3/opendir.3:117
#: build/C/man3/readdir.3:191 build/C/man3/readdir_r.3:143
#: build/C/man3/rewinddir.3:53 build/C/man3/scandir.3:223
#: build/C/man3/seekdir.3:66 build/C/man3/telldir.3:66
#, no-wrap
msgid "ATTRIBUTES"
msgstr "属性"

#. type: Plain text
#: build/C/man3/closedir.3:70 build/C/man3/dirfd.3:88
#: build/C/man3/getdirentries.3:70 build/C/man3/opendir.3:120
#: build/C/man3/readdir.3:194 build/C/man3/readdir_r.3:146
#: build/C/man3/rewinddir.3:56 build/C/man3/scandir.3:226
#: build/C/man3/seekdir.3:69 build/C/man3/telldir.3:69
msgid ""
"For an explanation of the terms used in this section, see B<attributes>(7)."
msgstr "この節で使用されている用語の説明については、 B<attributes>(7) を参照。"

#. type: tbl table
#: build/C/man3/closedir.3:74 build/C/man3/dirfd.3:92
#: build/C/man3/getdirentries.3:74 build/C/man3/opendir.3:124
#: build/C/man3/readdir.3:198 build/C/man3/readdir_r.3:150
#: build/C/man3/rewinddir.3:60 build/C/man3/scandir.3:230
#: build/C/man3/seekdir.3:73 build/C/man3/telldir.3:73
#, no-wrap
msgid "Interface"
msgstr "インターフェース"

#. type: tbl table
#: build/C/man3/closedir.3:74 build/C/man3/dirfd.3:92
#: build/C/man3/getdirentries.3:74 build/C/man3/opendir.3:124
#: build/C/man3/readdir.3:198 build/C/man3/readdir_r.3:150
#: build/C/man3/rewinddir.3:60 build/C/man3/scandir.3:230
#: build/C/man3/seekdir.3:73 build/C/man3/telldir.3:73
#, no-wrap
msgid "Attribute"
msgstr "属性"

#. type: tbl table
#: build/C/man3/closedir.3:74 build/C/man3/dirfd.3:92
#: build/C/man3/getdirentries.3:74 build/C/man3/opendir.3:124
#: build/C/man3/readdir.3:198 build/C/man3/readdir_r.3:150
#: build/C/man3/rewinddir.3:60 build/C/man3/scandir.3:230
#: build/C/man3/seekdir.3:73 build/C/man3/telldir.3:73
#, no-wrap
msgid "Value"
msgstr "値"

#. type: tbl table
#: build/C/man3/closedir.3:77
#, no-wrap
msgid "B<closedir>()"
msgstr "B<closedir>()"

#. type: tbl table
#: build/C/man3/closedir.3:77 build/C/man3/dirfd.3:95
#: build/C/man3/getdirentries.3:77 build/C/man3/opendir.3:128
#: build/C/man3/readdir.3:201 build/C/man3/readdir_r.3:153
#: build/C/man3/rewinddir.3:63 build/C/man3/scandir.3:234
#: build/C/man3/scandir.3:238 build/C/man3/seekdir.3:76
#: build/C/man3/telldir.3:76
#, no-wrap
msgid "Thread safety"
msgstr "Thread safety"

#. type: tbl table
#: build/C/man3/closedir.3:77 build/C/man3/dirfd.3:95
#: build/C/man3/getdirentries.3:77 build/C/man3/opendir.3:128
#: build/C/man3/readdir_r.3:153 build/C/man3/rewinddir.3:63
#: build/C/man3/scandir.3:234 build/C/man3/seekdir.3:76
#: build/C/man3/telldir.3:76
#, no-wrap
msgid "MT-Safe"
msgstr "MT-Safe"

#. type: SH
#: build/C/man3/closedir.3:79 build/C/man3/dirfd.3:97
#: build/C/man2/getdents.2:207 build/C/man3/getdirentries.3:79
#: build/C/man3/opendir.3:130 build/C/man2/readdir.2:116
#: build/C/man3/readdir.3:224 build/C/man3/readdir_r.3:155
#: build/C/man3/rewinddir.3:65 build/C/man3/scandir.3:241
#: build/C/man3/seekdir.3:78 build/C/man3/telldir.3:78
#, no-wrap
msgid "CONFORMING TO"
msgstr "準拠"

#. type: Plain text
#: build/C/man3/closedir.3:81 build/C/man3/readdir.3:226
#: build/C/man3/rewinddir.3:67
msgid "POSIX.1-2001, POSIX.1-2008, SVr4, 4.3BSD."
msgstr "POSIX.1-2001, POSIX.1-2008, SVr4, 4.3BSD."

#. type: SH
#: build/C/man3/closedir.3:81 build/C/man3/dirfd.3:101
#: build/C/man2/getdents.2:324 build/C/man3/getdirentries.3:87
#: build/C/man3/opendir.3:155 build/C/man2/readdir.2:129
#: build/C/man3/readdir.3:301 build/C/man3/readdir_r.3:157
#: build/C/man3/rewinddir.3:67 build/C/man3/scandir.3:321
#: build/C/man3/seekdir.3:92 build/C/man3/telldir.3:104
#, no-wrap
msgid "SEE ALSO"
msgstr "関連項目"

#. type: Plain text
#: build/C/man3/closedir.3:89
msgid ""
"B<close>(2), B<opendir>(3), B<readdir>(3), B<rewinddir>(3), B<scandir>(3), "
"B<seekdir>(3), B<telldir>(3)"
msgstr ""
"B<close>(2), B<opendir>(3), B<readdir>(3), B<rewinddir>(3), B<scandir>(3), "
"B<seekdir>(3), B<telldir>(3)"

#. type: SH
#: build/C/man3/closedir.3:89 build/C/man3/dirfd.3:111
#: build/C/man2/getdents.2:328 build/C/man3/getdirentries.3:90
#: build/C/man3/opendir.3:164 build/C/man2/readdir.2:132
#: build/C/man3/readdir.3:314 build/C/man3/readdir_r.3:159
#: build/C/man3/rewinddir.3:74 build/C/man3/scandir.3:332
#: build/C/man3/seekdir.3:100 build/C/man3/telldir.3:111
#, no-wrap
msgid "COLOPHON"
msgstr "この文書について"

#. type: Plain text
#: build/C/man3/closedir.3:97 build/C/man3/dirfd.3:119
#: build/C/man2/getdents.2:336 build/C/man3/getdirentries.3:98
#: build/C/man3/opendir.3:172 build/C/man2/readdir.2:140
#: build/C/man3/readdir.3:322 build/C/man3/readdir_r.3:167
#: build/C/man3/rewinddir.3:82 build/C/man3/scandir.3:340
#: build/C/man3/seekdir.3:108 build/C/man3/telldir.3:119
msgid ""
"This page is part of release 5.10 of the Linux I<man-pages> project.  A "
"description of the project, information about reporting bugs, and the latest "
"version of this page, can be found at \\%https://www.kernel.org/doc/man-"
"pages/."
msgstr "この man ページは Linux I<man-pages> プロジェクトのリリース 5.10 の一部である。プロジェクトの説明とバグ報告に関する情報は \\%https://www.kernel.org/doc/man-pages/ に書かれている。"

#. type: TH
#: build/C/man3/dirfd.3:25
#, no-wrap
msgid "DIRFD"
msgstr "DIRFD"

#. type: TH
#: build/C/man3/dirfd.3:25
#, no-wrap
msgid "2020-04-11"
msgstr "2020-04-11"

#. type: TH
#: build/C/man3/dirfd.3:25 build/C/man2/getdents.2:31 build/C/man2/readdir.2:30
#, no-wrap
msgid "Linux"
msgstr "Linux"

#. type: Plain text
#: build/C/man3/dirfd.3:28
msgid "dirfd - get directory stream file descriptor"
msgstr "dirfd - ディレクトリストリームのファイルディスクリプターを取得する"

#. type: Plain text
#: build/C/man3/dirfd.3:30
msgid "B<#include E<lt>sys/types.hE<gt>>"
msgstr "B<#include E<lt>sys/types.hE<gt>>"

#. type: Plain text
#: build/C/man3/dirfd.3:32 build/C/man3/getdirentries.3:32
msgid "B<#include E<lt>dirent.hE<gt>>"
msgstr "B<#include E<lt>dirent.hE<gt>>"

#. type: Plain text
#: build/C/man3/dirfd.3:34
msgid "B<int dirfd(DIR *>I<dirp>B<);>"
msgstr "B<int dirfd(DIR *>I<dirp>B<);>"

#. type: Plain text
#: build/C/man3/dirfd.3:38 build/C/man3/getdirentries.3:39
#: build/C/man3/opendir.3:47 build/C/man3/readdir_r.3:40
#: build/C/man3/scandir.3:94 build/C/man3/seekdir.3:45
#: build/C/man3/telldir.3:43
msgid ""
"Feature Test Macro Requirements for glibc (see B<feature_test_macros>(7)):"
msgstr "glibc 向けの機能検査マクロの要件 (B<feature_test_macros>(7)  参照):"

#. type: Plain text
#: build/C/man3/dirfd.3:41
msgid "B<dirfd>():"
msgstr "B<dirfd>():"

#. type: Plain text
#: build/C/man3/dirfd.3:47 build/C/man3/scandir.3:104
#, no-wrap
msgid ""
"/* Since glibc 2.10: */ _POSIX_C_SOURCE\\ E<gt>=\\ 200809L\n"
"    || /* Glibc versions E<lt>= 2.19: */ _BSD_SOURCE || _SVID_SOURCE\n"
msgstr ""
"/* glibc 2.10 以降: */ _POSIX_C_SOURCE\\ E<gt>=\\ 200809L\n"
"    || /* glibc 2.19 以前: */ _BSD_SOURCE || _SVID_SOURCE\n"

#. type: Plain text
#: build/C/man3/dirfd.3:55
msgid ""
"The function B<dirfd>()  returns the file descriptor associated with the "
"directory stream I<dirp>."
msgstr "関数 B<dirfd>()  はディレクトリストリーム I<dirp> に関連付けられたファイルディスクリプターを返す。"

#. type: Plain text
#: build/C/man3/dirfd.3:65
msgid ""
"This file descriptor is the one used internally by the directory stream.  As "
"a result, it is useful only for functions which do not depend on or alter "
"the file position, such as B<fstat>(2)  and B<fchdir>(2).  It will be "
"automatically closed when B<closedir>(3)  is called."
msgstr "このファイルディスクリプターはディレクトリストリームが内部で使用するものである。結果的に、この関数が役に立つのは、ファイルの位置に依存しない関数やその位置を変更しない関数 (B<fstat>(2) や B<fchdir>(2) など) においてだけである。このファイルディスクリプターは B<closedir>(3)  が呼ばれたときに自動的にクローズされる。"

#. type: Plain text
#: build/C/man3/dirfd.3:72
msgid ""
"On success, B<dirfd>()  returns a file descriptor (a nonnegative integer).  "
"On error, -1 is returned, and I<errno> is set to indicate the cause of the "
"error."
msgstr "成功すると、 B<dirfd>() はファイルディスクリプター (非負の整数) を返す。エラーの場合、 -1 が返され、 I<errno> にエラーの原因を示す値が設定される。"

#.  glibc 2.8
#. type: Plain text
#: build/C/man3/dirfd.3:77
msgid ""
"POSIX.1-2008 specifies two errors, neither of which is returned by the "
"current implementation."
msgstr ""
"POSIX.1-2008 では 2 つのエラーが規定されている。 現在の実装ではどちらのエラー"
"も返されない。"

#. type: TP
#: build/C/man3/dirfd.3:77 build/C/man2/getdents.2:198
#: build/C/man2/readdir.2:107
#, no-wrap
msgid "B<EINVAL>"
msgstr "B<EINVAL>"

#. type: Plain text
#: build/C/man3/dirfd.3:81
msgid "I<dirp> does not refer to a valid directory stream."
msgstr "I<dirp> が有効なディレクトリストリームを参照していない。"

#. type: TP
#: build/C/man3/dirfd.3:81
#, no-wrap
msgid "B<ENOTSUP>"
msgstr "B<ENOTSUP>"

#. type: Plain text
#: build/C/man3/dirfd.3:85
msgid ""
"The implementation does not support the association of a file descriptor "
"with a directory."
msgstr ""
"この実装では、ファイルディスクリプターのディレクトリとの関連付けが サポートさ"
"れていない。"

#. type: tbl table
#: build/C/man3/dirfd.3:95
#, no-wrap
msgid "B<dirfd>()"
msgstr "B<dirfd>()"

#.  It is present in libc5 (since 5.1.2) and in glibc2.
#. type: Plain text
#: build/C/man3/dirfd.3:101
msgid ""
"POSIX.1-2008.  This function was a BSD extension, present in 4.3BSD-Reno, "
"not in 4.2BSD."
msgstr ""
"POSIX.1-2008.  この関数は BSD 拡張であった。 4.3BSD-Reno には存在するが、"
"4.2BSD には存在しない。"

#. type: Plain text
#: build/C/man3/dirfd.3:111
msgid ""
"B<open>(2), B<openat>(2), B<closedir>(3), B<opendir>(3), B<readdir>(3), "
"B<rewinddir>(3), B<scandir>(3), B<seekdir>(3), B<telldir>(3)"
msgstr "B<open>(2), B<openat>(2), B<closedir>(3), B<opendir>(3), B<readdir>(3), B<rewinddir>(3), B<scandir>(3), B<seekdir>(3), B<telldir>(3)"

#. type: TH
#: build/C/man2/getdents.2:31
#, no-wrap
msgid "GETDENTS"
msgstr "GETDENTS"

#. type: TH
#: build/C/man2/getdents.2:31
#, no-wrap
msgid "2020-11-01"
msgstr "2020-11-01"

#. type: Plain text
#: build/C/man2/getdents.2:34
msgid "getdents, getdents64 - get directory entries"
msgstr "getdents, getdents64 - ディレクトリエントリーを取得する"

#. type: Plain text
#: build/C/man2/getdents.2:38
#, no-wrap
msgid ""
"B<long getdents(unsigned int >I<fd>B<, struct linux_dirent *>I<dirp>B<,>\n"
"B<             unsigned int >I<count>B<);>\n"
msgstr ""
"B<long getdents(unsigned int >I<fd>B<, struct linux_dirent *>I<dirp>B<,>\n"
"B<             unsigned int >I<count>B<);>\n"

#. type: Plain text
#: build/C/man2/getdents.2:41
#, no-wrap
msgid ""
"B<#define _GNU_SOURCE>        /* See feature_test_macros(7) */\n"
"B<#include E<lt>dirent.hE<gt>>\n"
msgstr ""
"B<#define _GNU_SOURCE>        /* feature_test_macros(7) 参照 */\n"
"B<#include E<lt>dirent.hE<gt>>\n"

#. type: Plain text
#: build/C/man2/getdents.2:43
#, no-wrap
msgid "B<ssize_t getdents64(int >I<fd>B<, void *>I<dirp>B<, size_t >I<count>B<);>\n"
msgstr "B<ssize_t getdents64(int >I<fd>B<, void *>I<dirp>B<, size_t >I<count>B<);>\n"

#. type: Plain text
#: build/C/man2/getdents.2:49
msgid "I<Note>: There is no glibc wrapper for B<getdents>(); see NOTES."
msgstr "I<注>: B<getdents>() の glibc のラッパー関数は存在しない。「注意」の節を参照。"

#. type: Plain text
#: build/C/man2/getdents.2:55
msgid ""
"These are not the interfaces you are interested in.  Look at B<readdir>(3)  "
"for the POSIX-conforming C library interface.  This page documents the bare "
"kernel system call interfaces."
msgstr "これらはあなたの関心を引くようなインターフェースではないだろう。 POSIX 準拠の C ライブラリインターフェースについては B<readdir>(3) を参照のこと。このページは、カーネルシステムコールの生のインターフェースについて記載したものである。"

#. type: SS
#: build/C/man2/getdents.2:55
#, no-wrap
msgid "getdents()"
msgstr "getdents()"

#. type: Plain text
#: build/C/man2/getdents.2:68
msgid ""
"The system call B<getdents>()  reads several I<linux_dirent> structures from "
"the directory referred to by the open file descriptor I<fd> into the buffer "
"pointed to by I<dirp>.  The argument I<count> specifies the size of that "
"buffer."
msgstr ""
"B<getdents>()  システムコールは、オープン済みのファイルディスクリプター "
"I<fd> で参照されるディレクトリから I<linux_dirent> 構造体をいくつか読み出"
"し、 I<dirp> が指しているバッファーに格納する。 I<count> 引数はそのバッ"
"ファーのサイズを示す。"

#. type: Plain text
#: build/C/man2/getdents.2:72
msgid "The I<linux_dirent> structure is declared as follows:"
msgstr "I<linux_dirent> 構造体は以下のように宣言されている。"

#. type: Plain text
#: build/C/man2/getdents.2:88
#, no-wrap
msgid ""
"struct linux_dirent {\n"
"    unsigned long  d_ino;     /* Inode number */\n"
"    unsigned long  d_off;     /* Offset to next I<linux_dirent> */\n"
"    unsigned short d_reclen;  /* Length of this I<linux_dirent> */\n"
"    char           d_name[];  /* Filename (null-terminated) */\n"
"                      /* length is actually (d_reclen - 2 -\n"
"                         offsetof(struct linux_dirent, d_name)) */\n"
"    /*\n"
"    char           pad;       // Zero padding byte\n"
"    char           d_type;    // File type (only since Linux\n"
"                              // 2.6.4); offset is (d_reclen - 1)\n"
"    */\n"
"}\n"
msgstr ""
"struct linux_dirent {\n"
"    unsigned long  d_ino;     /* inode 番号 */\n"
"    unsigned long  d_off;     /* 次の I<linux_dirent> へのオフセット */\n"
"    unsigned short d_reclen;  /* この I<linux_dirent> の長さ */\n"
"    char           d_name[];  /* (ヌル終端された) ファイル名 */\n"
"                      /* 実際の長さは (d_reclen - 2 -\n"
"                         offsetof(struct linux_dirent, d_name)) */\n"
"    /*\n"
"    char           pad;       // 値 0 のパディングバイト\n"
"    char           d_type;    // ファイル種別 (Linux 2.6.4 以降のみ);\n"
"                              // オフセットは (d_reclen - 1)\n"
"    */\n"
"}\n"

#. type: Plain text
#: build/C/man2/getdents.2:101
msgid ""
"I<d_ino> is an inode number.  I<d_off> is the distance from the start of the "
"directory to the start of the next I<linux_dirent>.  I<d_reclen> is the size "
"of this entire I<linux_dirent>.  I<d_name> is a null-terminated filename."
msgstr ""
"I<d_ino> は inode 番号である。 I<d_off> はディレクトリの先頭から次の "
"I<linux_dirent> の先頭までの距離である。 I<d_reclen> はこの I<linux_dirent> "
"全体のサイズである。 I<d_name> はヌル文字で終わるファイル名である。"

#. type: Plain text
#: build/C/man2/getdents.2:106
msgid ""
"I<d_type> is a byte at the end of the structure that indicates the file "
"type.  It contains one of the following values (defined in I<E<lt>dirent."
"hE<gt>>):"
msgstr "I<d_type> は、構造体の最後のバイトであり、ファイルタイプを示す。 I<d_type> は以下の値のいずれか一つを取る (I<E<lt>dirent.hE<gt>> で定義されている)。"

#. type: TP
#: build/C/man2/getdents.2:106 build/C/man3/readdir.3:120
#, no-wrap
msgid "B<DT_BLK>"
msgstr "B<DT_BLK>"

#. type: Plain text
#: build/C/man2/getdents.2:109 build/C/man3/readdir.3:123
msgid "This is a block device."
msgstr "ブロックデバイスである。"

#. type: TP
#: build/C/man2/getdents.2:109 build/C/man3/readdir.3:123
#, no-wrap
msgid "B<DT_CHR>"
msgstr "B<DT_CHR>"

#. type: Plain text
#: build/C/man2/getdents.2:112 build/C/man3/readdir.3:126
msgid "This is a character device."
msgstr "キャラクターデバイスである。"

#. type: TP
#: build/C/man2/getdents.2:112 build/C/man3/readdir.3:126
#, no-wrap
msgid "B<DT_DIR>"
msgstr "B<DT_DIR>"

#. type: Plain text
#: build/C/man2/getdents.2:115 build/C/man3/readdir.3:129
msgid "This is a directory."
msgstr "ディレクトリである。"

#. type: TP
#: build/C/man2/getdents.2:115 build/C/man3/readdir.3:129
#, no-wrap
msgid "B<DT_FIFO>"
msgstr "B<DT_FIFO>"

#. type: Plain text
#: build/C/man2/getdents.2:118 build/C/man3/readdir.3:132
msgid "This is a named pipe (FIFO)."
msgstr "名前付きパイプ (FIFO) である。"

#. type: TP
#: build/C/man2/getdents.2:118 build/C/man3/readdir.3:132
#, no-wrap
msgid "B<DT_LNK>"
msgstr "B<DT_LNK>"

#. type: Plain text
#: build/C/man2/getdents.2:121 build/C/man3/readdir.3:135
msgid "This is a symbolic link."
msgstr "シンボリックリンクである。"

#. type: TP
#: build/C/man2/getdents.2:121 build/C/man3/readdir.3:135
#, no-wrap
msgid "B<DT_REG>"
msgstr "B<DT_REG>"

#. type: Plain text
#: build/C/man2/getdents.2:124 build/C/man3/readdir.3:138
msgid "This is a regular file."
msgstr "通常のファイルである。"

#. type: TP
#: build/C/man2/getdents.2:124 build/C/man3/readdir.3:138
#, no-wrap
msgid "B<DT_SOCK>"
msgstr "B<DT_SOCK>"

#. type: Plain text
#: build/C/man2/getdents.2:127 build/C/man3/readdir.3:141
msgid "This is a UNIX domain socket."
msgstr "UNIX ドメインソケットである。"

#. type: TP
#: build/C/man2/getdents.2:127 build/C/man3/readdir.3:141
#, no-wrap
msgid "B<DT_UNKNOWN>"
msgstr "B<DT_UNKNOWN>"

#. type: Plain text
#: build/C/man2/getdents.2:130
msgid "The file type is unknown."
msgstr "ファイルタイプが不明。"

#. type: Plain text
#: build/C/man2/getdents.2:140
msgid ""
"The I<d_type> field is implemented since Linux 2.6.4.  It occupies a space "
"that was previously a zero-filled padding byte in the I<linux_dirent> "
"structure.  Thus, on kernels up to and including 2.6.3, attempting to access "
"this field always provides the value 0 (B<DT_UNKNOWN>)."
msgstr "I<d_type> フィールドは Linux 2.6.4 以降で実装されている。 このフィールドは、 I<linux_dirent> 構造体の中で以前はゼロで埋められていた空間に配置されている。 したがって、2.6.3 以前のカーネルでは、このフィールドにアクセスしようとすると 常に値 0 (B<DT_UNKNOWN>) が返される。"

#.  kernel 2.6.27
#.  The same sentence is in getdents.2
#. type: Plain text
#: build/C/man2/getdents.2:149 build/C/man3/readdir.3:154
msgid ""
"Currently, only some filesystems (among them: Btrfs, ext2, ext3, and ext4)  "
"have full support for returning the file type in I<d_type>.  All "
"applications must properly handle a return of B<DT_UNKNOWN>."
msgstr "現在のところ、 I<d_type> でファイルタイプを返す機能が完全にサポートされているのは、 いくつかのファイルシステムにおいてのみである (Btrfs, ext2, ext3, ext4 はサポートしている)。 どのアプリケーションも B<DT_UNKNOWN> が返された際に適切に処理できなければならない。"

#. type: SS
#: build/C/man2/getdents.2:149
#, no-wrap
msgid "getdents64()"
msgstr "getdents64()"

#. type: Plain text
#: build/C/man2/getdents.2:165
msgid ""
"The original Linux B<getdents>()  system call did not handle large "
"filesystems and large file offsets.  Consequently, Linux 2.4 added "
"B<getdents64>(), with wider types for the I<d_ino> and I<d_off> fields.  In "
"addition, B<getdents64>()  supports an explicit I<d_type> field."
msgstr "元々の Linux の B<getdents>() システムコールは、大きなファイルシステムと大きなファイルオフセットを扱うことができなかった。そのため、Linux 2.4 で B<getdents64>() が追加された。 B<getdents64>() では、 I<d_ino> と I<d_off> でビット幅の大きなデータ型が使われている。また、 B<getdents64>() では I<d_type> フィールドが明示的にサポートされている。"

#. type: Plain text
#: build/C/man2/getdents.2:172
msgid ""
"The B<getdents64>()  system call is like B<getdents>(), except that its "
"second argument is a pointer to a buffer containing structures of the "
"following type:"
msgstr "B<getdents64>() システムコールは B<getdents>() と似ているが、 2 番目の引数が以下の構造体が入ったバッファへのポインターである点が異なる。"

#. type: Plain text
#: build/C/man2/getdents.2:182
#, no-wrap
msgid ""
"struct linux_dirent64 {\n"
"    ino64_t        d_ino;    /* 64-bit inode number */\n"
"    off64_t        d_off;    /* 64-bit offset to next structure */\n"
"    unsigned short d_reclen; /* Size of this dirent */\n"
"    unsigned char  d_type;   /* File type */\n"
"    char           d_name[]; /* Filename (null-terminated) */\n"
"};\n"
msgstr ""
"struct linux_dirent64 {\n"
"    ino64_t        d_ino;    /* 64 ビットの inode 番号 */\n"
"    off64_t        d_off;    /* 次の構造体への 64 ビットのオフセット */\n"
"    unsigned short d_reclen; /* この dirent の大きさ */\n"
"    unsigned char  d_type;   /* ファイル種別 */\n"
"    char           d_name[]; /* (ヌル終端された) ファイル名 */\n"
"};\n"

#. type: Plain text
#: build/C/man2/getdents.2:190
msgid ""
"On success, the number of bytes read is returned.  On end of directory, 0 is "
"returned.  On error, -1 is returned, and I<errno> is set appropriately."
msgstr "成功した場合は、読み込んだバイト数が返される。 ディレクトリの終わりならば 0 が返される。 エラーの場合は -1 が返され、 I<errno> に適切な値が設定される。"

#. type: Plain text
#: build/C/man2/getdents.2:195 build/C/man2/readdir.2:104
msgid "Invalid file descriptor I<fd>."
msgstr "ファイルディスクリプター I<fd> が不正である。"

#. type: TP
#: build/C/man2/getdents.2:195 build/C/man2/readdir.2:104
#, no-wrap
msgid "B<EFAULT>"
msgstr "B<EFAULT>"

#. type: Plain text
#: build/C/man2/getdents.2:198 build/C/man2/readdir.2:107
msgid "Argument points outside the calling process's address space."
msgstr "引数が呼び出し元プロセスのアドレス空間外を指している。"

#. type: Plain text
#: build/C/man2/getdents.2:201 build/C/man2/readdir.2:110
msgid "Result buffer is too small."
msgstr "結果用のバッファーが小さすぎる。"

#. type: TP
#: build/C/man2/getdents.2:201 build/C/man3/opendir.3:105
#: build/C/man2/readdir.2:110 build/C/man3/scandir.3:195
#, no-wrap
msgid "B<ENOENT>"
msgstr "B<ENOENT>"

#. type: Plain text
#: build/C/man2/getdents.2:204 build/C/man2/readdir.2:113
msgid "No such directory."
msgstr "そのようなディレクトリは存在しない。"

#. type: TP
#: build/C/man2/getdents.2:204 build/C/man3/opendir.3:111
#: build/C/man2/readdir.2:113 build/C/man3/scandir.3:201
#: build/C/man3/scandir.3:211
#, no-wrap
msgid "B<ENOTDIR>"
msgstr "B<ENOTDIR>"

#. type: Plain text
#: build/C/man2/getdents.2:207 build/C/man2/readdir.2:116
msgid "File descriptor does not refer to a directory."
msgstr "ファイルディスクリプターがディレクトリを参照していない。"

#.  SVr4 documents additional ENOLINK, EIO error conditions.
#. type: Plain text
#: build/C/man2/getdents.2:210
msgid "SVr4."
msgstr "SVr4."

#. type: SH
#: build/C/man2/getdents.2:210 build/C/man3/opendir.3:135
#: build/C/man2/readdir.2:118 build/C/man3/readdir.3:226
#: build/C/man3/scandir.3:264 build/C/man3/seekdir.3:80
#: build/C/man3/telldir.3:80
#, no-wrap
msgid "NOTES"
msgstr "注意"

#. type: Plain text
#: build/C/man2/getdents.2:227
msgid ""
"Library support for B<getdents64>()  was added in glibc 2.30; there is no "
"glibc wrapper for B<getdents>().  Calling B<getdents>()  (or "
"B<getdents64>()  on earlier glibc versions) requires the use of "
"B<syscall>(2).  In that case you will need to define the I<linux_dirent> or "
"I<linux_dirent64> structure yourself."
msgstr "B<getdents64>() に対応するライブラリのサポートは glibc 2.30 で追加された。 B<getdents>() に対する glibc ラッパー関数は存在しない。 B<getdents>() (もしくは glibc の古いバージョンでの B<getdents64>()) を呼び出すには、 B<syscall>(2) を使う必要がある。その場合、構造体 I<linux_dirent> や I<linux_dirent64> を自分で定義する必要があるだろう。"

#. type: Plain text
#: build/C/man2/getdents.2:231
msgid "Probably, you want to use B<readdir>(3)  instead of these system calls."
msgstr "おそらく、あなたが使いたいのは、これらのシステムコールではなく B<readdir>(3) の方であろう。"

#. type: Plain text
#: build/C/man2/getdents.2:234
msgid "These calls supersede B<readdir>(2)."
msgstr "これらのシステムコールは B<readdir>(2)  を置き換えるものである。"

#. type: SH
#: build/C/man2/getdents.2:234 build/C/man3/scandir.3:288
#, no-wrap
msgid "EXAMPLES"
msgstr "例"

#.  FIXME The example program needs to be revised, since it uses the older
#.  getdents() system call and the structure with smaller field widths.
#. type: Plain text
#: build/C/man2/getdents.2:241
msgid ""
"The program below demonstrates the use of B<getdents>().  The following "
"output shows an example of what we see when running this program on an ext2 "
"directory:"
msgstr ""
"下記のプログラムは B<getdents>()  の使用例を示したものである。 以下は、このプ"
"ログラムを ext2 ディレクトリで実行した際に得られる 出力の例である。"

#. type: Plain text
#: build/C/man2/getdents.2:254
#, no-wrap
msgid ""
"$B< ./a.out /testfs/>\n"
"--------------- nread=120 ---------------\n"
"inode#    file type  d_reclen  d_off   d_name\n"
"       2  directory    16         12  .\n"
"       2  directory    16         24  ..\n"
"      11  directory    24         44  lost+found\n"
"      12  regular      16         56  a\n"
"  228929  directory    16         68  sub\n"
"   16353  directory    16         80  sub2\n"
"  130817  directory    16       4096  sub3\n"
msgstr ""
"$B< ./a.out /testfs/>\n"
"--------------- nread=120 ---------------\n"
"inode#    file type  d_reclen  d_off   d_name\n"
"       2  directory    16         12  .\n"
"       2  directory    16         24  ..\n"
"      11  directory    24         44  lost+found\n"
"      12  regular      16         56  a\n"
"  228929  directory    16         68  sub\n"
"   16353  directory    16         80  sub2\n"
"  130817  directory    16       4096  sub3\n"

#. type: SS
#: build/C/man2/getdents.2:256 build/C/man3/scandir.3:292
#, no-wrap
msgid "Program source"
msgstr "プログラムのソース"

#. type: Plain text
#: build/C/man2/getdents.2:268
#, no-wrap
msgid ""
"#define _GNU_SOURCE\n"
"#include E<lt>dirent.hE<gt>     /* Defines DT_* constants */\n"
"#include E<lt>fcntl.hE<gt>\n"
"#include E<lt>stdint.hE<gt>\n"
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>unistd.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>sys/stat.hE<gt>\n"
"#include E<lt>sys/syscall.hE<gt>\n"
msgstr ""
"#define _GNU_SOURCE\n"
"#include E<lt>dirent.hE<gt>     /* DT_* 定数の定義 */\n"
"#include E<lt>fcntl.hE<gt>\n"
"#include E<lt>stdint.hE<gt>\n"
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>unistd.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>sys/stat.hE<gt>\n"
"#include E<lt>sys/syscall.hE<gt>\n"

#. type: Plain text
#: build/C/man2/getdents.2:271
#, no-wrap
msgid ""
"#define handle_error(msg) \\e\n"
"        do { perror(msg); exit(EXIT_FAILURE); } while (0)\n"
msgstr ""
"#define handle_error(msg) \\e\n"
"        do { perror(msg); exit(EXIT_FAILURE); } while (0)\n"

#. type: Plain text
#: build/C/man2/getdents.2:278
#, no-wrap
msgid ""
"struct linux_dirent {\n"
"    unsigned long  d_ino;\n"
"    off_t          d_off;\n"
"    unsigned short d_reclen;\n"
"    char           d_name[];\n"
"};\n"
msgstr ""
"struct linux_dirent {\n"
"    unsigned long  d_ino;\n"
"    off_t          d_off;\n"
"    unsigned short d_reclen;\n"
"    char           d_name[];\n"
"};\n"

#. type: Plain text
#: build/C/man2/getdents.2:280
#, no-wrap
msgid "#define BUF_SIZE 1024\n"
msgstr "#define BUF_SIZE 1024\n"

#. type: Plain text
#: build/C/man2/getdents.2:289
#, no-wrap
msgid ""
"int\n"
"main(int argc, char *argv[])\n"
"{\n"
"    int fd;\n"
"    long nread;\n"
"    char buf[BUF_SIZE];\n"
"    struct linux_dirent *d;\n"
"    char d_type;\n"
msgstr ""
"int\n"
"main(int argc, char *argv[])\n"
"{\n"
"    int fd;\n"
"    long nread;\n"
"    char buf[BUF_SIZE];\n"
"    struct linux_dirent *d;\n"
"    char d_type;\n"

#. type: Plain text
#: build/C/man2/getdents.2:293
#, no-wrap
msgid ""
"    fd = open(argc E<gt> 1 ? argv[1] : \".\", O_RDONLY | O_DIRECTORY);\n"
"    if (fd == -1)\n"
"        handle_error(\"open\");\n"
msgstr ""
"    fd = open(argc E<gt> 1 ? argv[1] : \".\", O_RDONLY | O_DIRECTORY);\n"
"    if (fd == -1)\n"
"        handle_error(\"open\");\n"

#. type: Plain text
#: build/C/man2/getdents.2:298
#, no-wrap
msgid ""
"    for (;;) {\n"
"        nread = syscall(SYS_getdents, fd, buf, BUF_SIZE);\n"
"        if (nread == -1)\n"
"            handle_error(\"getdents\");\n"
msgstr ""
"    for (;;) {\n"
"        nread = syscall(SYS_getdents, fd, buf, BUF_SIZE);\n"
"        if (nread == -1)\n"
"            handle_error(\"getdents\");\n"

#. type: Plain text
#: build/C/man2/getdents.2:301
#, no-wrap
msgid ""
"        if (nread == 0)\n"
"            break;\n"
msgstr ""
"        if (nread == 0)\n"
"            break;\n"

#. type: Plain text
#: build/C/man2/getdents.2:320
#, no-wrap
msgid ""
"        printf(\"--------------- nread=%d ---------------\\en\", nread);\n"
"        printf(\"inode#    file type  d_reclen  d_off   d_name\\en\");\n"
"        for (long bpos = 0; bpos E<lt> nread;) {\n"
"            d = (struct linux_dirent *) (buf + bpos);\n"
"            printf(\"%8ld  \", d-E<gt>d_ino);\n"
"            d_type = *(buf + bpos + d-E<gt>d_reclen - 1);\n"
"            printf(\"%-10s \", (d_type == DT_REG) ?  \"regular\" :\n"
"                             (d_type == DT_DIR) ?  \"directory\" :\n"
"                             (d_type == DT_FIFO) ? \"FIFO\" :\n"
"                             (d_type == DT_SOCK) ? \"socket\" :\n"
"                             (d_type == DT_LNK) ?  \"symlink\" :\n"
"                             (d_type == DT_BLK) ?  \"block dev\" :\n"
"                             (d_type == DT_CHR) ?  \"char dev\" : \"???\");\n"
"            printf(\"%4d %10jd  %s\\en\", d-E<gt>d_reclen,\n"
"                    (intmax_t) d-E<gt>d_off, d-E<gt>d_name);\n"
"            bpos += d-E<gt>d_reclen;\n"
"        }\n"
"    }\n"
msgstr ""
"        printf(\"--------------- nread=%d ---------------\\en\", nread);\n"
"        printf(\"inode#    file type  d_reclen  d_off   d_name\\en\");\n"
"        for (long bpos = 0; bpos E<lt> nread;) {\n"
"            d = (struct linux_dirent *) (buf + bpos);\n"
"            printf(\"%8ld  \", d-E<gt>d_ino);\n"
"            d_type = *(buf + bpos + d-E<gt>d_reclen - 1);\n"
"            printf(\"%-10s \", (d_type == DT_REG) ?  \"regular\" :\n"
"                             (d_type == DT_DIR) ?  \"directory\" :\n"
"                             (d_type == DT_FIFO) ? \"FIFO\" :\n"
"                             (d_type == DT_SOCK) ? \"socket\" :\n"
"                             (d_type == DT_LNK) ?  \"symlink\" :\n"
"                             (d_type == DT_BLK) ?  \"block dev\" :\n"
"                             (d_type == DT_CHR) ?  \"char dev\" : \"???\");\n"
"            printf(\"%4d %10jd  %s\\en\", d-E<gt>d_reclen,\n"
"                    (intmax_t) d-E<gt>d_off, d-E<gt>d_name);\n"
"            bpos += d-E<gt>d_reclen;\n"
"        }\n"
"    }\n"

#. type: Plain text
#: build/C/man2/getdents.2:323 build/C/man3/scandir.3:320
#, no-wrap
msgid ""
"    exit(EXIT_SUCCESS);\n"
"}\n"
msgstr ""
"    exit(EXIT_SUCCESS);\n"
"}\n"

#. type: Plain text
#: build/C/man2/getdents.2:328
msgid "B<readdir>(2), B<readdir>(3), B<inode>(7)"
msgstr "B<readdir>(2), B<readdir>(3), B<inode>(7)"

#. type: TH
#: build/C/man3/getdirentries.3:27
#, no-wrap
msgid "GETDIRENTRIES"
msgstr "GETDIRENTRIES"

#. type: TH
#: build/C/man3/getdirentries.3:27 build/C/man3/seekdir.3:31
#, no-wrap
msgid "2016-03-15"
msgstr "2016-03-15"

#. type: TH
#: build/C/man3/getdirentries.3:27 build/C/man3/opendir.3:32
#: build/C/man3/scandir.3:62
#, no-wrap
msgid "GNU"
msgstr "GNU"

#. type: Plain text
#: build/C/man3/getdirentries.3:30
msgid ""
"getdirentries - get directory entries in a filesystem-independent format"
msgstr ""
"getdirentries - ディレクトリのエントリーをファイルシステムに依存しない形式で"
"取得する"

#. type: Plain text
#: build/C/man3/getdirentries.3:35
msgid ""
"B<ssize_t getdirentries(int >I<fd>B<, char *>I<buf>B<, size_t >I<nbytes> B<, "
"off_t *>I<basep>B<);>"
msgstr ""
"B<ssize_t getdirentries(int >I<fd>B<, char *>I<buf>B<, size_t >I<nbytes> B<, "
"off_t *>I<basep>B<);>"

#. type: Plain text
#: build/C/man3/getdirentries.3:46
#, no-wrap
msgid ""
"B<getdirentries>():\n"
"    Since glibc 2.19:\n"
"        _DEFAULT_SOURCE\n"
"    Glibc 2.19 and earlier:\n"
"        _BSD_SOURCE || _SVID_SOURCE\n"
msgstr ""
"B<getdirentries>():\n"
"    glibc 2.19 以降:\n"
"        _DEFAULT_SOURCE\n"
"    glibc 2.19 以前:\n"
"        _BSD_SOURCE || _SVID_SOURCE\n"

#. type: Plain text
#: build/C/man3/getdirentries.3:59
msgid ""
"Read directory entries from the directory specified by I<fd> into I<buf>.  "
"At most I<nbytes> are read.  Reading starts at offset I<*basep>, and "
"I<*basep> is updated with the new position after reading."
msgstr ""
"I<fd> で指定されたディレクトリからエントリーを読み、 I<buf> に格納する。最大"
"で I<nbytes> が読み込まれる。読み込みはオフセット I<*basep> から開始され、読"
"み込み終了時には I<*basep> は新しい位置に更新される。"

#. type: Plain text
#: build/C/man3/getdirentries.3:65
msgid ""
"B<getdirentries>()  returns the number of bytes read or zero when at the end "
"of the directory.  If an error occurs, -1 is returned, and I<errno> is set "
"appropriately."
msgstr ""
"B<getdirentries>()  は読み込んだバイト数を返すか、ディレクトリの最後にきた場"
"合は 0 を返す。 エラーが起こったら -1 を返し、 I<errno> をエラーに対応する値"
"にセットする。"

#. type: Plain text
#: build/C/man3/getdirentries.3:67
msgid "See the Linux library source code for details."
msgstr "詳細は Linux のライブラリソースコードを読んでほしい。"

#. type: tbl table
#: build/C/man3/getdirentries.3:77
#, no-wrap
msgid "B<getdirentries>()"
msgstr "B<getdirentries>()"

#. type: Plain text
#: build/C/man3/getdirentries.3:87
msgid ""
"Not in POSIX.1.  Present on the BSDs, and a few other systems.  Use "
"B<opendir>(3)  and B<readdir>(3)  instead."
msgstr "POSIX.1 にはない。 BSD に存在し、他にもいくつかのシステムにもある。 代わりに B<opendir>(3)  と B<readdir>(3)  を使用すること。"

#. type: Plain text
#: build/C/man3/getdirentries.3:90
msgid "B<lseek>(2), B<open>(2)"
msgstr "B<lseek>(2), B<open>(2)"

#. type: TH
#: build/C/man3/opendir.3:32
#, no-wrap
msgid "OPENDIR"
msgstr "OPENDIR"

#. type: TH
#: build/C/man3/opendir.3:32 build/C/man3/telldir.3:30
#, no-wrap
msgid "2017-09-15"
msgstr "2017-09-15"

#. type: Plain text
#: build/C/man3/opendir.3:35
msgid "opendir, fdopendir - open a directory"
msgstr "opendir, fdopendir - ディレクトリをオープンする"

#. type: Plain text
#: build/C/man3/opendir.3:39
#, no-wrap
msgid ""
"B<#include E<lt>sys/types.hE<gt>>\n"
"B<#include E<lt>dirent.hE<gt>>\n"
msgstr ""
"B<#include E<lt>sys/types.hE<gt>>\n"
"B<#include E<lt>dirent.hE<gt>>\n"

#. type: Plain text
#: build/C/man3/opendir.3:42
#, no-wrap
msgid ""
"B<DIR *opendir(const char *>I<name>B<);>\n"
"B<DIR *fdopendir(int >I<fd>B<);>\n"
msgstr ""
"B<DIR *opendir(const char *>I<name>B<);>\n"
"B<DIR *fdopendir(int >I<fd>B<);>\n"

#. type: Plain text
#: build/C/man3/opendir.3:50
msgid "B<fdopendir>():"
msgstr "B<fdopendir>():"

#. type: TP
#: build/C/man3/opendir.3:53
#, no-wrap
msgid "Since glibc 2.10:"
msgstr "glibc 2.10 以降:"

#. type: Plain text
#: build/C/man3/opendir.3:56
msgid "_POSIX_C_SOURCE\\ E<gt>=\\ 200809L"
msgstr "_POSIX_C_SOURCE\\ E<gt>=\\ 200809L"

#. type: TP
#: build/C/man3/opendir.3:56
#, no-wrap
msgid "Before glibc 2.10:"
msgstr "glibc 2.10 より前:"

#. type: Plain text
#: build/C/man3/opendir.3:59
msgid "_GNU_SOURCE"
msgstr "_GNU_SOURCE"

#. type: Plain text
#: build/C/man3/opendir.3:68
msgid ""
"The B<opendir>()  function opens a directory stream corresponding to the "
"directory I<name>, and returns a pointer to the directory stream.  The "
"stream is positioned at the first entry in the directory."
msgstr "B<opendir>() 関数は、ディレクトリ I<name> に対応するディレクトリストリームをオープンし、そのストリームへのポインターを返す。ストリームの位置はディレクトリの先頭のエントリーに設定される。"

#. type: Plain text
#: build/C/man3/opendir.3:82
msgid ""
"The B<fdopendir>()  function is like B<opendir>(), but returns a directory "
"stream for the directory referred to by the open file descriptor I<fd>.  "
"After a successful call to B<fdopendir>(), I<fd> is used internally by the "
"implementation, and should not otherwise be used by the application."
msgstr ""
"B<fdopendir>() 関数は B<opendir>() と同様だが、オープン済みのファイルディス"
"クリプター I<fd> により参照されるディレクトリに対するディレクトリストリーム"
"を返す。 B<fdopendir>() の呼び出しが成功した後は、 I<fd> は実装の内部で使用"
"される。アプリケーションは I<fd> を他の場面で使用すべきではない。"

#. type: Plain text
#: build/C/man3/opendir.3:91
msgid ""
"The B<opendir>()  and B<fdopendir>()  functions return a pointer to the "
"directory stream.  On error, NULL is returned, and I<errno> is set "
"appropriately."
msgstr "関数 B<opendir>() と B<fdopendir>() はディレクトリストリームへのポインターを返す。 エラーの場合は、NULL が返り、 I<errno> が適切に設定される。"

#. type: TP
#: build/C/man3/opendir.3:92
#, no-wrap
msgid "B<EACCES>"
msgstr "B<EACCES>"

#. type: Plain text
#: build/C/man3/opendir.3:95
msgid "Permission denied."
msgstr "アクセス権限がない。"

#. type: Plain text
#: build/C/man3/opendir.3:99
msgid "I<fd> is not a valid file descriptor opened for reading."
msgstr ""
"I<fd> が読み出し用にオープンされた、有効なファイルディスクリプターではない。"

#. type: TP
#: build/C/man3/opendir.3:99
#, no-wrap
msgid "B<EMFILE>"
msgstr "B<EMFILE>"

#. type: Plain text
#: build/C/man3/opendir.3:102
msgid ""
"The per-process limit on the number of open file descriptors has been "
"reached."
msgstr "オープンされたファイルディスクリプター数がプロセス単位の上限に達している。"

#. type: TP
#: build/C/man3/opendir.3:102
#, no-wrap
msgid "B<ENFILE>"
msgstr "B<ENFILE>"

#. type: Plain text
#: build/C/man3/opendir.3:105
msgid ""
"The system-wide limit on the total number of open files has been reached."
msgstr "オープンされたファイルの総数がシステム全体の上限に達している。"

#. type: Plain text
#: build/C/man3/opendir.3:108
msgid "Directory does not exist, or I<name> is an empty string."
msgstr "ディレクトリが存在しないか、または I<name> が空文字列である。"

#. type: TP
#: build/C/man3/opendir.3:108 build/C/man3/scandir.3:198
#, no-wrap
msgid "B<ENOMEM>"
msgstr "B<ENOMEM>"

#. type: Plain text
#: build/C/man3/opendir.3:111 build/C/man3/scandir.3:201
msgid "Insufficient memory to complete the operation."
msgstr "操作を完了するのに十分なメモリーがない。"

#. type: Plain text
#: build/C/man3/opendir.3:114
msgid "I<name> is not a directory."
msgstr "I<name> はディレクトリではない。"

#. type: SH
#: build/C/man3/opendir.3:114 build/C/man3/scandir.3:217
#, no-wrap
msgid "VERSIONS"
msgstr "バージョン"

#. type: Plain text
#: build/C/man3/opendir.3:117
msgid "B<fdopendir>()  is available in glibc since version 2.4."
msgstr "B<fdopendir>()  は glibc 2.4 以降で利用可能である。"

#. type: tbl table
#: build/C/man3/opendir.3:128
#, no-wrap
msgid ""
"B<opendir>(),\n"
"B<fdopendir>()"
msgstr ""
"B<opendir>(),\n"
"B<fdopendir>()"

#. type: Plain text
#: build/C/man3/opendir.3:135
msgid ""
"B<opendir>()  is present on SVr4, 4.3BSD, and specified in POSIX.1-2001.  "
"B<fdopendir>()  is specified in POSIX.1-2008."
msgstr ""
"B<opendir>()  は SVr4 と 4.3BSD に存在し、 POSIX.1-2001 で規定されている。 "
"B<fdopendir>()  は POSIX.1-2008 で規定されている。"

#. type: Plain text
#: build/C/man3/opendir.3:138
msgid ""
"Filename entries can be read from a directory stream using B<readdir>(3)."
msgstr "ファイル名エントリーをディレクトリストリームから読み込むには B<readdir>(3) を使用する。"

#. type: Plain text
#: build/C/man3/opendir.3:141
msgid ""
"The underlying file descriptor of the directory stream can be obtained using "
"B<dirfd>(3)."
msgstr "ディレクトリストリームに対応するファイルディスクリプターは B<dirfd>(3) を使用して取得できる。"

#. type: Plain text
#: build/C/man3/opendir.3:155
msgid ""
"The B<opendir>()  function sets the close-on-exec flag for the file "
"descriptor underlying the I<DIR *>.  The B<fdopendir>()  function leaves the "
"setting of the close-on-exec flag unchanged for the file descriptor, I<fd>.  "
"POSIX.1-200x leaves it unspecified whether a successful call to "
"B<fdopendir>()  will set the close-on-exec flag for the file descriptor, "
"I<fd>."
msgstr "B<opendir>() 関数は、 I<DIR *> に対応するファイルディスクリプターの close-on-exec フラグを設定する。 B<fdopendir>() 関数は、ファイルディスクリプターの close-on-exec フラグの設定を変更しない。 B<fdopendir>() の呼び出しが成功した際に、ファイルディスクリプター I<fd> の close-on-exec を設定するかどうかは、 POSIX.1-200x では規定されていない。"

#. type: Plain text
#: build/C/man3/opendir.3:164
msgid ""
"B<open>(2), B<closedir>(3), B<dirfd>(3), B<readdir>(3), B<rewinddir>(3), "
"B<scandir>(3), B<seekdir>(3), B<telldir>(3)"
msgstr ""
"B<open>(2), B<closedir>(3), B<dirfd>(3), B<readdir>(3), B<rewinddir>(3), "
"B<scandir>(3), B<seekdir>(3), B<telldir>(3)"

#. type: TH
#: build/C/man2/readdir.2:30 build/C/man3/readdir.3:36
#, no-wrap
msgid "READDIR"
msgstr "READDIR"

#. type: TH
#: build/C/man2/readdir.2:30 build/C/man3/readdir.3:36
#, no-wrap
msgid "2019-03-06"
msgstr "2019-03-06"

#. type: Plain text
#: build/C/man2/readdir.2:33
msgid "readdir - read directory entry"
msgstr "readdir - ディレクトリエントリーを読み込む"

#. type: Plain text
#: build/C/man2/readdir.2:38
#, no-wrap
msgid ""
"B<int readdir(unsigned int >I<fd>B<, struct old_linux_dirent *>I<dirp>B<,>\n"
"B<            unsigned int >I<count>B<);>\n"
msgstr ""
"B<int readdir(unsigned int >I<fd>B<, struct old_linux_dirent *>I<dirp>B<,>\n"
"B<            unsigned int >I<count>B<);>\n"

#. type: Plain text
#: build/C/man2/readdir.2:42
msgid "I<Note>: There is no glibc wrapper for this system call; see NOTES."
msgstr ""
"I<注>: このシステムコールには glibc のラッパー関数は存在しない。「注意」の節"
"を参照。"

#. type: Plain text
#: build/C/man2/readdir.2:50
msgid ""
"This is not the function you are interested in.  Look at B<readdir>(3)  for "
"the POSIX conforming C library interface.  This page documents the bare "
"kernel system call interface, which is superseded by B<getdents>(2)."
msgstr "これはあなたの関心を引くような関数ではないだろう。 POSIX 準拠の C ライブラリインターフェースについては B<readdir>(3) を参照のこと。このページでは、生のカーネルのシステムコールインターフェースについて記載しているが、このインターフェースは B<getdents>(2) によって置き換えられた。"

#. type: Plain text
#: build/C/man2/readdir.2:64
msgid ""
"B<readdir>()  reads one I<old_linux_dirent> structure from the directory "
"referred to by the file descriptor I<fd> into the buffer pointed to by "
"I<dirp>.  The argument I<count> is ignored; at most one I<old_linux_dirent> "
"structure is read."
msgstr "B<readdir>()  は、ファイルディスクリプター I<fd> が参照しているディレクトリから I<old_linux_dirent> 構造体をひとつ読み込み、 I<dirp> で指されたバッファーに格納する。 I<count> 引数は無視される。最大で 1 個の I<old_linux_dirent> 構造体が読み出される。"

#. type: Plain text
#: build/C/man2/readdir.2:70
msgid ""
"The I<old_linux_dirent> structure is declared (privately in Linux kernel "
"file B<fs/readdir.c>)  as follows:"
msgstr "I<old_linux_dirent> 構造体は (Linux カーネルのファイル B<fs/readdir.c> で内部用として) 以下のように宣言される:"

#. type: Plain text
#: build/C/man2/readdir.2:79
#, no-wrap
msgid ""
"struct old_linux_dirent {\n"
"    unsigned long d_ino;     /* inode number */\n"
"    unsigned long d_offset;  /* offset to this I<old_linux_dirent> */\n"
"    unsigned short d_namlen; /* length of this I<d_name> */\n"
"    char  d_name[1];         /* filename (null-terminated) */\n"
"}\n"
msgstr ""
"struct old_linux_dirent {\n"
"    unsigned long d_ino;     /* inode 番号 */\n"
"    unsigned long d_offset;  /* この I<old_linux_dirent> へのオフセット */\n"
"    unsigned short d_namlen; /* この I<d_name> の長さ */\n"
"    char  d_name[1];         /* (NULL 終端された) ファイル名 */\n"
"}\n"

#. type: Plain text
#: build/C/man2/readdir.2:93
msgid ""
"I<d_ino> is an inode number.  I<d_offset> is the distance from the start of "
"the directory to this I<old_linux_dirent>.  I<d_reclen> is the size of "
"I<d_name>, not counting the terminating null byte (\\(aq\\e0\\(aq).  "
"I<d_name> is a null-terminated filename."
msgstr "I<d_ino> は inode 番号である。 I<d_offset> はディレクトリの最初からこの I<old_linux_dirent> までの距離である。 I<d_reclen> は I<d_name> の大きさで、終端のヌルバイト (\\(aq\\e0\\(aq) を含まない。 I<d_name> はヌルで終端されたファイル名である。"

#. type: Plain text
#: build/C/man2/readdir.2:99
msgid ""
"On success, 1 is returned.  On end of directory, 0 is returned.  On error, "
"-1 is returned, and I<errno> is set appropriately."
msgstr ""
"成功した場合は、1 が返される。 ディレクトリの最後では 0 が返される。 エラーの"
"場合は -1 が返され、 I<errno> が適切に設定される。"

#. type: Plain text
#: build/C/man2/readdir.2:118
msgid "This system call is Linux-specific."
msgstr "このシステムコールは Linux 固有である。"

#. type: Plain text
#: build/C/man2/readdir.2:127
msgid ""
"Glibc does not provide a wrapper for this system call; call it using "
"B<syscall>(2).  You will need to define the I<old_linux_dirent> structure "
"yourself.  However, probably you should use B<readdir>(3)  instead."
msgstr ""
"glibc はこのシステムコールに対するラッパー関数を提供していない。 "
"B<syscall>(2)  を使って呼び出すこと。 I<old_linux_dirent> 構造体を自分自身で"
"定義する必要がある。しかし、たいていはこのシステムコールではなく "
"B<readdir>(3) を使うべき場面のことが多い。"

#. type: Plain text
#: build/C/man2/readdir.2:129
msgid "This system call does not exist on x86-64."
msgstr "このシステムコールは x86-64 では存在しない。"

#. type: Plain text
#: build/C/man2/readdir.2:132
msgid "B<getdents>(2), B<readdir>(3)"
msgstr "B<getdents>(2), B<readdir>(3)"

#. type: Plain text
#: build/C/man3/readdir.3:39
msgid "readdir - read a directory"
msgstr "readdir - ディレクトリを読み込む"

#. type: Plain text
#: build/C/man3/readdir.3:44
#, no-wrap
msgid "B<struct dirent *readdir(DIR *>I<dirp>B<);>\n"
msgstr "B<struct dirent *readdir(DIR *>I<dirp>B<);>\n"

#. type: Plain text
#: build/C/man3/readdir.3:53
msgid ""
"The B<readdir>()  function returns a pointer to a I<dirent> structure "
"representing the next directory entry in the directory stream pointed to by "
"I<dirp>.  It returns NULL on reaching the end of the directory stream or if "
"an error occurred."
msgstr ""
"B<readdir>()  関数は、I<dirp> が指すディレクトリストリームの中で、 次のディレ"
"クトリエントリーを表す I<dirent> 構造体へのポインターを返す。 ディレクトリス"
"トリームの末尾に達した場合や、 エラーが発生した場合は、 NULL を返す。"

#. type: Plain text
#: build/C/man3/readdir.3:57
msgid ""
"In the glibc implementation, the I<dirent> structure is defined as follows:"
msgstr "glibc の実装では I<dirent> 構造体は以下のように定義されている。"

#. type: Plain text
#: build/C/man3/readdir.3:68
#, no-wrap
msgid ""
"struct dirent {\n"
"    ino_t          d_ino;       /* Inode number */\n"
"    off_t          d_off;       /* Not an offset; see below */\n"
"    unsigned short d_reclen;    /* Length of this record */\n"
"    unsigned char  d_type;      /* Type of file; not supported\n"
"                                   by all filesystem types */\n"
"    char           d_name[256]; /* Null-terminated filename */\n"
"};\n"
msgstr ""
"struct dirent {\n"
"    ino_t          d_ino;       /* inode 番号 */\n"
"    off_t          d_off;       /* オフセットではない; 下記を参照 */\n"
"    unsigned short d_reclen;    /* このレコードの長さ */\n"
"    unsigned char  d_type;      /* ファイル種別。全ファイルシステム */\n"
"                                   でサポートされているわけではない */\n"
"    char           d_name[256]; /* ヌル終端されたファイル名 */\n"
"};\n"

#. type: Plain text
#: build/C/man3/readdir.3:79
msgid ""
"The only fields in the I<dirent> structure that are mandated by POSIX.1 are "
"I<d_name> and I<d_ino>.  The other fields are unstandardized, and not "
"present on all systems; see NOTES below for some further details."
msgstr "I<dirent> 構造体のフィールドのうち POSIX.1 で要求されているのは、 I<d_name> と I<d_ino> だけである。他のフィールドは非標準であり、すべてのシステムで存在するわけではない。 詳細については、下記の「注意」を参照のこと。"

#. type: Plain text
#: build/C/man3/readdir.3:83
msgid "The fields of the I<dirent> structure are as follows:"
msgstr "I<dirent> 構造体のフィールドは以下の通りである:"

#. type: TP
#: build/C/man3/readdir.3:83
#, no-wrap
msgid "I<d_ino>"
msgstr "I<d_ino>"

#. type: Plain text
#: build/C/man3/readdir.3:86
msgid "This is the inode number of the file."
msgstr "ファイルの inode 番号である。"

#. type: TP
#: build/C/man3/readdir.3:86
#, no-wrap
msgid "I<d_off>"
msgstr "I<d_off>"

#.  https://lwn.net/Articles/544298/
#. type: Plain text
#: build/C/man3/readdir.3:100
msgid ""
"The value returned in I<d_off> is the same as would be returned by calling "
"B<telldir>(3)  at the current position in the directory stream.  Be aware "
"that despite its type and name, the I<d_off> field is seldom any kind of "
"directory offset on modern filesystems.  Applications should treat this "
"field as an opaque value, making no assumptions about its contents; see also "
"B<telldir>(3)."
msgstr "I<d_off> で返される値は、ディレクトリストリームの現在の位置で B<telldir>(3) を呼び出した場合の返り値と同じである。フィールドの型や名前はこうなっているが、最近のファイルシステムでは I<d_off> フィールドが何らかのディレクトリオフセットであることはめったにない。アプリケーションプログラムでは、必ずこの値を内容を意識せず単なる値として扱うべきであり、その内容について前提を持つべきではない。 B<telldir>(3) も参照。"

#. type: TP
#: build/C/man3/readdir.3:100
#, no-wrap
msgid "I<d_reclen>"
msgstr "I<d_reclen>"

#. type: Plain text
#: build/C/man3/readdir.3:105
msgid ""
"This is the size (in bytes) of the returned record.  This may not match the "
"size of the structure definition shown above; see NOTES."
msgstr "返されたレコードの (バイト単位の) サイズである。この値は上記の構造体の定義のサイズとは一致しないかもしれない。「注意」を参照。"

#. type: TP
#: build/C/man3/readdir.3:105
#, no-wrap
msgid "I<d_type>"
msgstr "I<d_type>"

#. type: Plain text
#: build/C/man3/readdir.3:111
msgid ""
"This field contains a value indicating the file type, making it possible to "
"avoid the expense of calling B<lstat>(2)  if further actions depend on the "
"type of the file."
msgstr "ファイル種別を示す値が格納される。これにより、これ以降の処理がファイル種別に依存している場合に B<lstat>(2) を呼び出すコストを避けることができる。"

#. type: Plain text
#: build/C/man3/readdir.3:119
msgid ""
"When a suitable feature test macro is defined (B<_DEFAULT_SOURCE> on glibc "
"versions since 2.19, or B<_BSD_SOURCE> on glibc versions 2.19 and earlier), "
"glibc defines the following macro constants for the value returned in "
"I<d_type>:"
msgstr "適切な機能検査マクロ (glibc 2.19 以降では B<_DEFAULT_SOURCE>、 glibc 2.19 以前では B<_BSD_SOURCE>) が定義されている場合、 glibc は I<d_type> の値に対応する以下のマクロ定数を定義する。"

#. type: Plain text
#: build/C/man3/readdir.3:144
msgid "The file type could not be determined."
msgstr "ファイル種別が判別できなかった。"

#. type: TP
#: build/C/man3/readdir.3:154
#, no-wrap
msgid "I<d_name>"
msgstr "I<d_name>"

#. type: Plain text
#: build/C/man3/readdir.3:158
msgid "This field contains the null terminated filename.  I<See NOTES>."
msgstr "このフィールドはヌル終端されたファイル名である。「注意」を参照。"

#. type: Plain text
#: build/C/man3/readdir.3:164
msgid ""
"The data returned by B<readdir>()  may be overwritten by subsequent calls to "
"B<readdir>()  for the same directory stream."
msgstr ""
"B<readdir>()  によって返されるデータは、それ以降の同じストリームに対する "
"B<readdir>()  の呼び出しによって上書きされる可能性がある。"

#. type: Plain text
#: build/C/man3/readdir.3:173
msgid ""
"On success, B<readdir>()  returns a pointer to a I<dirent> structure.  (This "
"structure may be statically allocated; do not attempt to B<free>(3)  it.)"
msgstr "成功すると、 B<readdir>() は I<dirent> 構造体へのポインターを返す。 (この構造体は静的に割り当てられているかもしれない。 このポインターを B<free>(3) しようとしないこと。)"

#. type: Plain text
#: build/C/man3/readdir.3:187
msgid ""
"If the end of the directory stream is reached, NULL is returned and I<errno> "
"is not changed.  If an error occurs, NULL is returned and I<errno> is set "
"appropriately.  To distinguish end of stream from an error, set I<errno> to "
"zero before calling B<readdir>()  and then check the value of I<errno> if "
"NULL is returned."
msgstr "ディレクトリストリームの末尾に達した場合には、NULL が返され、 I<errno> は変化しない。 エラーが発生した場合、NULL が返され、 I<errno> が適切に設定される。エラーからストリームの末尾を区別するには、 B<readdir>() を呼び出す前に I<errno> を 0 に設定しておき、 NULL が返された場合に I<errno> の値を確認すればよい。"

#. type: tbl table
#: build/C/man3/readdir.3:201
#, no-wrap
msgid "B<readdir>()"
msgstr "B<readdir>()"

#. type: tbl table
#: build/C/man3/readdir.3:201
#, no-wrap
msgid "MT-Unsafe race:dirstream"
msgstr "MT-Unsafe race:dirstream"

#.  FIXME .
#.  http://www.austingroupbugs.net/view.php?id=696
#. type: Plain text
#: build/C/man3/readdir.3:224
msgid ""
"In the current POSIX.1 specification (POSIX.1-2008), B<readdir>()  is not "
"required to be thread-safe.  However, in modern implementations (including "
"the glibc implementation), concurrent calls to B<readdir>()  that specify "
"different directory streams are thread-safe.  In cases where multiple "
"threads must read from the same directory stream, using B<readdir>()  with "
"external synchronization is still preferable to the use of the deprecated "
"B<readdir_r>(3)  function.  It is expected that a future version of POSIX.1 "
"will require that B<readdir>()  be thread-safe when concurrently employed on "
"different directory streams."
msgstr "現在の POSIX.1 標準 (POSIX.1-2008) では、 B<readdir>() がスレッドセーフであることは求められていない。しかしながら、最近の実装 (glibc による実装も含む) では、異なるディレクトリストリームに対する B<readdir>() の同時並行の呼び出しはスレッドセーフである。複数のスレッドが同じディレクトリストリームから読み込みを行う必要がある場合も、非推奨の B<readdir_r>(3) 関数を使用するよりも、外部同期を用いた B<readdir>() を使う方が推奨される。 POSIX.1 の将来のバージョンでは、 B<readdir>() は異なるディレクトリストリームに対して同時に使用された際にスレッドセーフであることが必須となる予定である。"

#. type: Plain text
#: build/C/man3/readdir.3:229
msgid "A directory stream is opened using B<opendir>(3)."
msgstr "ディレクトリストリームは B<opendir>(3) を使ってオープンする。"

#. type: Plain text
#: build/C/man3/readdir.3:234
msgid ""
"The order in which filenames are read by successive calls to B<readdir>()  "
"depends on the filesystem implementation; it is unlikely that the names will "
"be sorted in any fashion."
msgstr "連続する B<readdir>() の呼び出しで読み込まれるファイル名の順序は、ファイルシステムの実装に依存する。名前が何らかの方法でソートされていることはありえない。"

#.  POSIX.1-2001, POSIX.1-2008
#. type: Plain text
#: build/C/man3/readdir.3:255
msgid ""
"Only the fields I<d_name> and (as an XSI extension)  I<d_ino> are specified "
"in POSIX.1.  Other than Linux, the I<d_type> field is available mainly only "
"on BSD systems.  The remaining fields are available on many, but not all "
"systems.  Under glibc, programs can check for the availability of the fields "
"not defined in POSIX.1 by testing whether the macros "
"B<_DIRENT_HAVE_D_NAMLEN>, B<_DIRENT_HAVE_D_RECLEN>, B<_DIRENT_HAVE_D_OFF>, "
"or B<_DIRENT_HAVE_D_TYPE> are defined."
msgstr "フィールド I<d_name> と (XSI 拡張の) I<d_ino> だけが POSIX.1 で規定されている。 I<d_type> フィールドは、 Linux 以外では、おもに BSD 系のシステムでのみ利用可能である。残りのフィールドは多くのシステムに存在するが、全てのシステムに存在するわけではない。 glibc では、プログラムが POSIX.1 で定義されていないフィールドが 利用できるかをチェックすることができる。 チェックするには、マクロ B<_DIRENT_HAVE_D_NAMLEN>, B<_DIRENT_HAVE_D_RECLEN>, B<_DIRENT_HAVE_D_OFF>, B<_DIRENT_HAVE_D_TYPE> が定義されているかをテストすればよい。"

#. type: SS
#: build/C/man3/readdir.3:255
#, no-wrap
msgid "The d_name field"
msgstr "d_name フィールド"

#. type: Plain text
#: build/C/man3/readdir.3:262
msgid ""
"The I<dirent> structure definition shown above is taken from the glibc "
"headers, and shows the I<d_name> field with a fixed size."
msgstr "上記の I<dirent> 構造体の定義は glibc のヘッダーからの引用であり、 I<d_name> フィールドは固定サイズとなっている。"

#. type: Plain text
#: build/C/man3/readdir.3:272
msgid ""
"I<Warning>: applications should avoid any dependence on the size of the "
"I<d_name> field.  POSIX defines it as I<char\\ d_name[]>, a character array "
"of unspecified size, with at most B<NAME_MAX> characters preceding the "
"terminating null byte (\\(aq\\e0\\(aq)."
msgstr "I<警告>: アプリケーションは、 I<d_name> フィールドのサイズに依存すべきではない。 POSIX ではこのフィールドは I<char\\ d_name[]> (サイズ不定の文字配列) として規定しており、最大で終端のヌルバイト (\\(aq\\e0\\(aq) の前に B<NAME_MAX> 文字が入る。"

#. type: Plain text
#: build/C/man3/readdir.3:286
msgid ""
"POSIX.1 explicitly notes that this field should not be used as an lvalue.  "
"The standard also notes that the use of I<sizeof(d_name)> is incorrect; use "
"I<strlen(d_name)> instead.  (On some systems, this field is defined as I<char"
"\\ d_name[1]>!)  By implication, the use I<sizeof(struct dirent)> to capture "
"the size of the record including the size of I<d_name> is also incorrect."
msgstr "POSIX.1 は、このフィールドを左辺値として使用すべきではないと明記している。また、 POSIX.1 では、 I<sizeof(d_name)> の使用は間違いであり、代わりに I<strlen(d_name)> を使用するように、との注記もある (いくつかのシステムでは、このフィールドは I<char\\ d_name[1]>! として定義されている)。このことは、 I<d_name> を含むレコードのサイズを取得するために I<sizeof(struct dirent)> を使用することも間違いであることを暗に示している。"

#. type: Plain text
#: build/C/man3/readdir.3:288
msgid "Note that while the call"
msgstr "多くのファイルシステムでは、"

#. type: Plain text
#: build/C/man3/readdir.3:290
#, no-wrap
msgid "    fpathconf(fd, _PC_NAME_MAX)\n"
msgstr "    fpathconf(fd, _PC_NAME_MAX)\n"

#. type: Plain text
#: build/C/man3/readdir.3:301
msgid ""
"returns the value 255 for most filesystems, on some filesystems (e.g., CIFS, "
"Windows SMB servers), the null-terminated filename that is (correctly) "
"returned in I<d_name> can actually exceed this size.  In such cases, the "
"I<d_reclen> field will contain a value that exceeds the size of the glibc "
"I<dirent> structure shown above."
msgstr "の呼び出しは値 255 を返すが、いくつかのファイルシステム (例えば CIFS や Windows SMB サーバーなど) では、(正しい動作なのだが) I<d_name> で返されるヌル終端されたファイル名は実際にはこのサイズを超える場合がある点に注意すること。このような場合、 I<d_reclen> フィールドは、上記の glibc I<dirent> 構造体のサイズよりも大きな値となる。"

#. type: Plain text
#: build/C/man3/readdir.3:314
msgid ""
"B<getdents>(2), B<read>(2), B<closedir>(3), B<dirfd>(3), B<ftw>(3), "
"B<offsetof>(3), B<opendir>(3), B<readdir_r>(3), B<rewinddir>(3), "
"B<scandir>(3), B<seekdir>(3), B<telldir>(3)"
msgstr "B<getdents>(2), B<read>(2), B<closedir>(3), B<dirfd>(3), B<ftw>(3), B<offsetof>(3), B<opendir>(3), B<readdir_r>(3), B<rewinddir>(3), B<scandir>(3), B<seekdir>(3), B<telldir>(3)"

#. type: TH
#: build/C/man3/readdir_r.3:26
#, no-wrap
msgid "READDIR_R"
msgstr "READDIR_R"

#. type: TH
#: build/C/man3/readdir_r.3:26
#, no-wrap
msgid "2016-03-01"
msgstr "2016-03-01"

#. type: Plain text
#: build/C/man3/readdir_r.3:29
msgid "readdir_r - read a directory"
msgstr "readdir_r - ディレクトリを読み込む"

#. type: Plain text
#: build/C/man3/readdir_r.3:35
#, no-wrap
msgid "B<int readdir_r(DIR *>I<dirp>B<, struct dirent *>I<entry>B<, struct dirent **>I<result>B<);>\n"
msgstr "B<int readdir_r(DIR *>I<dirp>B<, struct dirent *>I<entry>B<, struct dirent **>I<result>B<);>\n"

#. type: Plain text
#: build/C/man3/readdir_r.3:44
msgid "B<readdir_r>():"
msgstr "B<readdir_r>():"

#. type: Plain text
#: build/C/man3/readdir_r.3:47
#, no-wrap
msgid ""
"_POSIX_C_SOURCE\n"
"    || /* Glibc versions E<lt>= 2.19: */ _BSD_SOURCE || _SVID_SOURCE\n"
msgstr ""
"_POSIX_C_SOURCE\n"
"    || /* glibc 2.19 以前: */ _BSD_SOURCE || _SVID_SOURCE\n"

#. type: Plain text
#: build/C/man3/readdir_r.3:53
msgid "This function is deprecated; use B<readdir>(3)  instead."
msgstr "この関数は非推奨である。代わりに B<readdir>(3) を使用すること。"

#. type: Plain text
#: build/C/man3/readdir_r.3:66
msgid ""
"The B<readdir_r>()  function was invented as a reentrant version of "
"B<readdir>(3).  It reads the next directory entry from the directory stream "
"I<dirp>, and returns it in the caller-allocated buffer pointed to by "
"I<entry>.  For details of the I<dirent> structure, see B<readdir>(3)."
msgstr "B<readdir_r>() 関数は B<readdir>(3) のリエントラント版として導入された。この関数はディレクトリストリーム I<dirp> から次のディレクトリエントリーを読み込み、 I<entry> が指す呼び出し元が割り当てたバッファーにそのエントリーを格納して返す。 I<dirent> 構造体の詳細は B<readdir>(3) を参照。"

#. type: Plain text
#: build/C/man3/readdir_r.3:72
msgid ""
"A pointer to the returned buffer is placed in I<*result>; if the end of the "
"directory stream was encountered, then NULL is instead returned in "
"I<*result>."
msgstr "結果を返すバッファへのポインターが I<*result> に格納される。ディレクトリストリームの末尾に達した場合は、NULL が代わりに I<*result> で返される。"

#. type: Plain text
#: build/C/man3/readdir_r.3:80
msgid ""
"It is recommended that applications use B<readdir>(3)  instead of "
"B<readdir_r>().  Furthermore, since version 2.24, glibc deprecates "
"B<readdir_r>().  The reasons are as follows:"
msgstr "アプリケーションでは B<readdir_r>() の代わりに B<readdir>(3) を使用することを推奨する。さらに、glibc 2.24 以降では B<readdir_r>() は非推奨となっている。理由は以下の通りである。"

#. type: IP
#: build/C/man3/readdir_r.3:80 build/C/man3/readdir_r.3:87
#: build/C/man3/readdir_r.3:101 build/C/man3/readdir_r.3:118
#, no-wrap
msgid "*"
msgstr "*"

#. type: Plain text
#: build/C/man3/readdir_r.3:87
msgid ""
"On systems where B<NAME_MAX> is undefined, calling B<readdir_r>()  may be "
"unsafe because the interface does not allow the caller to specify the length "
"of the buffer used for the returned directory entry."
msgstr "B<NAME_MAX> が未定義のシステムでは、 B<readdir_r>() の呼び出しは安全ではない。このインターフェースでは、呼び出し元がディレクトリエントリーを返す際に使用されるバッファの長さを指定することができないからである。"

#. type: Plain text
#: build/C/man3/readdir_r.3:101
msgid ""
"On some systems, B<readdir_r>()  can't read directory entries with very long "
"names.  When the glibc implementation encounters such a name, "
"B<readdir_r>()  fails with the error B<ENAMETOOLONG> I<after the final "
"directory entry has been read>.  On some other systems, B<readdir_r>()  may "
"return a success status, but the returned I<d_name> field may not be null "
"terminated or may be truncated."
msgstr "いくつかのシステムでは、 B<readdir_r>() は非常に長い名前のディレクトリエントリーを読み込むことができない。 glibc の実装ではこのような名前に遭遇した場合、 B<readdir_r>() は I<最後のディレクトリエントリーを読み込んだ後> エラー B<ENAMETOOLONG> で失敗する。他のいくつかのシステムでは、 B<readdir_r>() が成功ステータスを返しても、返された I<d_name> フィールドがヌル終端されていなかったり、文字列が途中までで切り詰められていたりすることがある。"

#. type: Plain text
#: build/C/man3/readdir_r.3:118
msgid ""
"In the current POSIX.1 specification (POSIX.1-2008), B<readdir>(3)  is not "
"required to be thread-safe.  However, in modern implementations (including "
"the glibc implementation), concurrent calls to B<readdir>(3)  that specify "
"different directory streams are thread-safe.  Therefore, the use of "
"B<readdir_r>()  is generally unnecessary in multithreaded programs.  In "
"cases where multiple threads must read from the same directory stream, using "
"B<readdir>(3)  with external synchronization is still preferable to the use "
"of B<readdir_r>(), for the reasons given in the points above."
msgstr "現在の POSIX.1 標準 (POSIX.1-2008) では、 B<readdir>(3) がスレッドセーフであることは求められていない。しかしながら、最近の実装 (glibc による実装も含む) では、異なるディレクトリストリームに対する B<readdir>(3) の同時並行の呼び出しはスレッドセーフである。したがって、マルチスレッドプログラムにおいて B<readdir_r>() の使用は不要である。複数のスレッドが同じディレクトリストリームから読み込みを行う必要がある場合も、上記で挙げた理由から、非推奨の B<readdir_r>() 関数を使用するよりも、外部同期を用いた B<readdir>(3) を使う方が推奨される。"

#.  FIXME .
#.  http://www.austingroupbugs.net/view.php?id=696
#. type: Plain text
#: build/C/man3/readdir_r.3:127
msgid ""
"It is expected that a future version of POSIX.1 will make B<readdir_r>()  "
"obsolete, and require that B<readdir>(3)  be thread-safe when concurrently "
"employed on different directory streams."
msgstr "POSIX.1 の将来のバージョンでは、 B<readdir_r>() は廃止予定 (obsolete) となり、 B<readdir>(3) は異なるディレクトリストリームに対して同時に使用された際にスレッドセーフであることが必須となる予定である。"

#. type: Plain text
#: build/C/man3/readdir_r.3:136
msgid ""
"The B<readdir_r>()  function returns 0 on success.  On error, it returns a "
"positive error number (listed under ERRORS).  If the end of the directory "
"stream is reached, B<readdir_r>()  returns 0, and returns NULL in I<*result>."
msgstr ""
"成功すると、 B<readdir_r>()  関数は 0 を返す。 エラーの場合、(「エラー」の節"
"のリストに載っている) 正のエラー番号を返す。 ディレクトリストリームの末尾に達"
"した場合、 B<readdir_r>()  は返り値として 0 を返し、 I<*result> に NULL を格"
"納する。"

#. type: TP
#: build/C/man3/readdir_r.3:140
#, no-wrap
msgid "B<ENAMETOOLONG>"
msgstr "B<ENAMETOOLONG>"

#. type: Plain text
#: build/C/man3/readdir_r.3:143
msgid "A directory entry whose name was too long to be read was encountered."
msgstr "読み込むには名前が長過ぎるディレクトリエントリーに遭遇した。"

#. type: tbl table
#: build/C/man3/readdir_r.3:153
#, no-wrap
msgid "B<readdir_r>()"
msgstr "B<readdir_r>()"

#. type: Plain text
#: build/C/man3/readdir_r.3:157
msgid "POSIX.1-2001, POSIX.1-2008."
msgstr "POSIX.1-2001, POSIX.1-2008."

#. type: Plain text
#: build/C/man3/readdir_r.3:159
msgid "B<readdir>(3)"
msgstr "B<readdir>(3)"

#. type: TH
#: build/C/man3/rewinddir.3:31
#, no-wrap
msgid "REWINDDIR"
msgstr "REWINDDIR"

#. type: Plain text
#: build/C/man3/rewinddir.3:34
msgid "rewinddir - reset directory stream"
msgstr "rewinddir - ディレクトリストリームの初期化"

#. type: Plain text
#: build/C/man3/rewinddir.3:41
#, no-wrap
msgid "B<void rewinddir(DIR *>I<dirp>B<);>\n"
msgstr "B<void rewinddir(DIR *>I<dirp>B<);>\n"

#. type: Plain text
#: build/C/man3/rewinddir.3:49
msgid ""
"The B<rewinddir>()  function resets the position of the directory stream "
"I<dirp> to the beginning of the directory."
msgstr ""
"B<rewinddir>()  関数は、ディレクトリストリーム I<dirp> の位置を ディレクトリ"
"の先頭に初期化する。"

#. type: Plain text
#: build/C/man3/rewinddir.3:53
msgid "The B<rewinddir>()  function returns no value."
msgstr "B<rewinddir>()  関数は、値を返さない。"

#. type: tbl table
#: build/C/man3/rewinddir.3:63
#, no-wrap
msgid "B<rewinddir>()"
msgstr "B<rewinddir>()"

#. type: Plain text
#: build/C/man3/rewinddir.3:74
msgid ""
"B<closedir>(3), B<opendir>(3), B<readdir>(3), B<scandir>(3), B<seekdir>(3), "
"B<telldir>(3)"
msgstr ""
"B<closedir>(3), B<opendir>(3), B<readdir>(3), B<scandir>(3), B<seekdir>(3), "
"B<telldir>(3)"

#. type: TH
#: build/C/man3/scandir.3:62
#, no-wrap
msgid "SCANDIR"
msgstr "SCANDIR"

#. type: TH
#: build/C/man3/scandir.3:62
#, no-wrap
msgid "2020-06-09"
msgstr "2020-06-09"

#. type: Plain text
#: build/C/man3/scandir.3:66
msgid ""
"scandir, scandirat, alphasort, versionsort - scan a directory for matching "
"entries"
msgstr "scandir, scandirat, alphasort, versionsort - ディレクトリを走査する"

#. type: Plain text
#: build/C/man3/scandir.3:71
#, no-wrap
msgid "B<int scandir(const char *>I<dirp>B<, struct dirent ***>I<namelist>B<,>\n"
msgstr "B<int scandir(const char *>I<dirp>B<, struct dirent ***>I<namelist>B<,>\n"

#. type: Plain text
#: build/C/man3/scandir.3:74 build/C/man3/scandir.3:88
#, no-wrap
msgid ""
"B<int (*>I<filter>B<)(const struct dirent *),>\n"
"B<int (*>I<compar>B<)(const struct dirent **, const struct dirent **));>\n"
msgstr ""
"B<int (*>I<filter>B<)(const struct dirent *),>\n"
"B<int (*>I<compar>B<)(const struct dirent **, const struct dirent **));>\n"

#. type: Plain text
#: build/C/man3/scandir.3:77
#, no-wrap
msgid "B<int alphasort(const struct dirent **>I<a>B<, const struct dirent **>I<b>B<);>\n"
msgstr "B<int alphasort(const struct dirent **>I<a>B<, const struct dirent **>I<b>B<);>\n"

#. type: Plain text
#: build/C/man3/scandir.3:79
#, no-wrap
msgid "B<int versionsort(const struct dirent **>I<a>B<, const struct dirent **>I<b>B<);>\n"
msgstr "B<int versionsort(const struct dirent **>I<a>B<, const struct dirent **>I<b>B<);>\n"

#. type: Plain text
#: build/C/man3/scandir.3:82
#, no-wrap
msgid ""
"B<#include E<lt>fcntl.hE<gt>>          /* Definition of AT_* constants */\n"
"B<#include E<lt>dirent.hE<gt>>\n"
msgstr ""
"B<#include E<lt>fcntl.hE<gt>>          /* AT_* 定数の定義 */\n"
"B<#include E<lt>dirent.hE<gt>>\n"

#. type: Plain text
#: build/C/man3/scandir.3:85
#, no-wrap
msgid ""
"B<int scandirat(int >I<dirfd>B<, const char *>I<dirp>B<,>\n"
"B<struct dirent ***>I<namelist>B<,>\n"
msgstr ""
"B<int scandirat(int >I<dirfd>B<, const char *>I<dirp>B<,>\n"
"B<struct dirent ***>I<namelist>B<,>\n"

#. type: Plain text
#: build/C/man3/scandir.3:98
msgid "B<scandir>(), B<alphasort>():"
msgstr "B<scandir>(), B<alphasort>():"

#. type: Plain text
#: build/C/man3/scandir.3:109
msgid "B<versionsort>(): _GNU_SOURCE"
msgstr "B<versionsort>(): _GNU_SOURCE"

#. type: Plain text
#: build/C/man3/scandir.3:112
msgid "B<scandirat>(): _GNU_SOURCE"
msgstr "B<scandirat>(): _GNU_SOURCE"

#. type: Plain text
#: build/C/man3/scandir.3:127
msgid ""
"The B<scandir>()  function scans the directory I<dirp>, calling I<filter>() "
"on each directory entry.  Entries for which I<filter>() returns nonzero are "
"stored in strings allocated via B<malloc>(3), sorted using B<qsort>(3)  with "
"the comparison function I<compar>(), and collected in array I<namelist> "
"which is allocated via B<malloc>(3).  If I<filter> is NULL, all entries are "
"selected."
msgstr "関数 B<scandir>() はディレクトリ I<dirp> を走査し、 ディレクトリの各エントリーを引数として I<filter>() を呼び出す。 I<filter>() が 0 以外の値を返すエントリーは、 B<malloc>(3) により確保された文字列に格納され、比較関数 I<compar>() を用いた B<qsort>(3) によりソートされて、 B<malloc>(3) により確保された配列 I<namelist> にまとめられる。 I<filter> が NULL ならば、すべてのエントリーが選択される。"

#. type: Plain text
#: build/C/man3/scandir.3:139
msgid ""
"The B<alphasort>()  and B<versionsort>()  functions can be used as the "
"comparison function I<compar>().  The former sorts directory entries using "
"B<strcoll>(3), the latter using B<strverscmp>(3)  on the strings I<(*a)-"
"E<gt>d_name> and I<(*b)-E<gt>d_name>."
msgstr "比較関数 I<compar>() には B<alphasort>() 関数と B<versionsort>() 関数を使用できる。 B<alphasort>() は B<strcoll>(3) を用いてディレクトリエントリーをソートする。 B<versionsort>() は文字列 I<(*a)-E<gt>d_name> と I<(*b)-E<gt>d_name> に対して B<strverscmp>(3) を用いる。"

#. type: SS
#: build/C/man3/scandir.3:139
#, no-wrap
msgid "scandirat()"
msgstr "scandirat()"

#. type: Plain text
#: build/C/man3/scandir.3:145
msgid ""
"The B<scandirat>()  function operates in exactly the same way as "
"B<scandir>(), except for the differences described here."
msgstr "B<scandirat>() 関数は B<scandir>() と全く同様の動作をする。ここでは差分を説明する。"

#. type: Plain text
#: build/C/man3/scandir.3:155
msgid ""
"If the pathname given in I<dirp> is relative, then it is interpreted "
"relative to the directory referred to by the file descriptor I<dirfd> "
"(rather than relative to the current working directory of the calling "
"process, as is done by B<scandir>()  for a relative pathname)."
msgstr "I<dirp> で指定されたパス名が相対パスの場合、ファイルディスクリプター I<dirfd> が参照するディレクトリからの相対パスと解釈される。 (一方、B<scandir>() の場合は、相対パス名は、呼び出したプロセスのカレントワーキングディレクトリからの相対パスと解釈される。)"

#. type: Plain text
#: build/C/man3/scandir.3:167
msgid ""
"If I<dirp> is relative and I<dirfd> is the special value B<AT_FDCWD>, then "
"I<dirp> is interpreted relative to the current working directory of the "
"calling process (like B<scandir>())."
msgstr ""
"I<dirp> が相対パスで I<dirfd> が特別な値 B<AT_FDCWD> の場合、 I<dirp> は "
"(B<scandir>() と同様に) 呼び出したプロセスのカレントワーキングディレクトリか"
"らの相対パスと解釈される。"

#. type: Plain text
#: build/C/man3/scandir.3:173
msgid "If I<dirp> is absolute, then I<dirfd> is ignored."
msgstr "I<dirp> が絶対パスの場合、I<dirfd> は無視される。"

#. type: Plain text
#: build/C/man3/scandir.3:178
msgid "See B<openat>(2)  for an explanation of the need for B<scandirat>()."
msgstr "B<scandirat>() が必要な理由については B<openat>(2) を参照のこと。"

#. type: Plain text
#: build/C/man3/scandir.3:186
msgid ""
"The B<scandir>()  function returns the number of directory entries "
"selected.  On error, -1 is returned, with I<errno> set to indicate the cause "
"of the error."
msgstr ""
"B<scandir>() 関数は、選択されたディレクトリのエントリー数を返す。 エラーの場"
"合、 -1 を返し、 I<errno> にエラーの原因を示す値を設定する。"

#. type: Plain text
#: build/C/man3/scandir.3:194
msgid ""
"The B<alphasort>()  and B<versionsort>()  functions return an integer less "
"than, equal to, or greater than zero if the first argument is considered to "
"be respectively less than, equal to, or greater than the second."
msgstr "関数 B<alphasort>() と B<versionsort>() は、 1 番目の引数が 2 番目の引数に対して [小さい/等しい/大きい] かに応じて、 0 より [小さい/等しい/大きい] 整数値を返す。"

#. type: Plain text
#: build/C/man3/scandir.3:198
msgid "The path in I<dirp> does not exist."
msgstr "I<dirp> で指定されたパスが存在しない。"

#. type: Plain text
#: build/C/man3/scandir.3:204
msgid "The path in I<dirp> is not a directory."
msgstr "I<dirp> で指定されたパスがディレクトリではない。"

#. type: Plain text
#: build/C/man3/scandir.3:207
msgid "The following additional errors can occur for B<scandirat>():"
msgstr "B<scandirat>() では、上記に加えて以下のエラーも発生する。"

#. type: Plain text
#: build/C/man3/scandir.3:211
msgid "I<dirfd> is not a valid file descriptor."
msgstr "I<dirfd> が有効なファイルディスクリプターではない。"

#. type: Plain text
#: build/C/man3/scandir.3:217
msgid ""
"I<dirp> is a relative path and I<dirfd> is a file descriptor referring to a "
"file other than a directory."
msgstr "I<dirp> が相対パスで、I<dirfd> がディレクトリ以外のファイルを参照しているファイルディスクリプターである。"

#. type: Plain text
#: build/C/man3/scandir.3:220
msgid "B<versionsort>()  was added to glibc in version 2.1."
msgstr "B<versionsort>() は、glibc バージョン 2.1 で追加された。"

#. type: Plain text
#: build/C/man3/scandir.3:223
msgid "B<scandirat>()  was added to glibc in version 2.15."
msgstr "B<scandirat>() は glibc バージョン 2.15 で追加された。"

#. type: tbl table
#: build/C/man3/scandir.3:234
#, no-wrap
msgid ""
"B<scandir>(),\n"
"B<scandirat>()"
msgstr ""
"B<scandir>(),\n"
"B<scandirat>()"

#. type: tbl table
#: build/C/man3/scandir.3:238
#, no-wrap
msgid ""
"B<alphasort>(),\n"
"B<versionsort>()"
msgstr ""
"B<alphasort>(),\n"
"B<versionsort>()"

#. type: tbl table
#: build/C/man3/scandir.3:238
#, no-wrap
msgid "MT-Safe locale"
msgstr "MT-Safe locale"

#. type: Plain text
#: build/C/man3/scandir.3:245
msgid "B<alphasort>(), B<scandir>(): 4.3BSD, POSIX.1-2008."
msgstr "B<alphasort>(), B<scandir>(): 4.3BSD, POSIX.1-2008."

#.  .LP
#.  The functions
#.  .BR scandir ()
#.  and
#.  .BR alphasort ()
#.  are from 4.3BSD, and have been available under Linux since libc4.
#.  Libc4 and libc5 use the more precise prototype
#.  .sp
#.  .nf
#.     int alphasort(const struct dirent ** a,
#.                   const struct dirent **b);
#.  .fi
#.  .sp
#.  but glibc 2.0 returns to the imprecise BSD prototype.
#. type: Plain text
#: build/C/man3/scandir.3:264
msgid "B<versionsort>()  and B<scandirat>()  are GNU extensions."
msgstr "B<versionsort>() と B<scandirat>() は GNU 拡張である。"

#. type: Plain text
#: build/C/man3/scandir.3:271
msgid ""
"Since glibc 2.1, B<alphasort>()  calls B<strcoll>(3); earlier it used "
"B<strcmp>(3)."
msgstr ""
"glibc 2.1 以降では B<alphasort>()  は B<strcoll>(3)  を呼び出す。 "
"B<alphasort>()  は以前は B<strcmp>(3)  を使っていた。"

#. type: Plain text
#: build/C/man3/scandir.3:288
msgid ""
"Before glibc 2.10, the two arguments of B<alphasort>()  and "
"B<versionsort>()  were typed as I<const void\\ *>.  When B<alphasort>()  was "
"standardized in POSIX.1-2008, the argument type was specified as the type-"
"safe I<const struct dirent\\ **>, and glibc 2.10 changed the definition of "
"B<alphasort>()  (and the nonstandard B<versionsort>())  to match the "
"standard."
msgstr "glibc 2.10 より前では、 B<alphasort>() と B<versionsort>() の 2 つの引数の型は I<const void\\ *> であった。 B<alphasort>() が POSIX.1-2008 で標準化された際、引数の型は型安全な I<const struct dirent\\ **> として規定され、 glibc 2.10 は B<alphasort>() (と非標準の B<versionsort>()) の定義を標準に合致するように変更した。"

#. type: Plain text
#: build/C/man3/scandir.3:292
msgid ""
"The program below prints a list of the files in the current directory in "
"reverse order."
msgstr "以下のプログラムは、現在のディレクトリ内のファイル一覧を逆順で表示する。"

#. type: Plain text
#: build/C/man3/scandir.3:299
#, no-wrap
msgid ""
"#define _DEFAULT_SOURCE\n"
"#include E<lt>dirent.hE<gt>\n"
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
msgstr ""
"#define _DEFAULT_SOURCE\n"
"#include E<lt>dirent.hE<gt>\n"
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"

#. type: Plain text
#: build/C/man3/scandir.3:305
#, no-wrap
msgid ""
"int\n"
"main(void)\n"
"{\n"
"    struct dirent **namelist;\n"
"    int n;\n"
msgstr ""
"int\n"
"main(void)\n"
"{\n"
"    struct dirent **namelist;\n"
"    int n;\n"

#. type: Plain text
#: build/C/man3/scandir.3:311
#, no-wrap
msgid ""
"    n = scandir(\".\", &namelist, NULL, alphasort);\n"
"    if (n == -1) {\n"
"        perror(\"scandir\");\n"
"        exit(EXIT_FAILURE);\n"
"    }\n"
msgstr ""
"    n = scandir(\".\", &namelist, NULL, alphasort);\n"
"    if (n == -1) {\n"
"        perror(\"scandir\");\n"
"        exit(EXIT_FAILURE);\n"
"    }\n"

#. type: Plain text
#: build/C/man3/scandir.3:317
#, no-wrap
msgid ""
"    while (n--) {\n"
"        printf(\"%s\\en\", namelist[n]-E<gt>d_name);\n"
"        free(namelist[n]);\n"
"    }\n"
"    free(namelist);\n"
msgstr ""
"    while (n--) {\n"
"        printf(\"%s\\en\", namelist[n]-E<gt>d_name);\n"
"        free(namelist[n]);\n"
"    }\n"
"    free(namelist);\n"

#. type: Plain text
#: build/C/man3/scandir.3:332
msgid ""
"B<closedir>(3), B<fnmatch>(3), B<opendir>(3), B<readdir>(3), "
"B<rewinddir>(3), B<seekdir>(3), B<strcmp>(3), B<strcoll>(3), "
"B<strverscmp>(3), B<telldir>(3)"
msgstr ""
"B<closedir>(3), B<fnmatch>(3), B<opendir>(3), B<readdir>(3), "
"B<rewinddir>(3), B<seekdir>(3), B<strcmp>(3), B<strcoll>(3), "
"B<strverscmp>(3), B<telldir>(3)"

#. type: TH
#: build/C/man3/seekdir.3:31
#, no-wrap
msgid "SEEKDIR"
msgstr "SEEKDIR"

#. type: Plain text
#: build/C/man3/seekdir.3:35
msgid ""
"seekdir - set the position of the next readdir() call in the directory "
"stream."
msgstr "seekdir - 次の readdir() 呼び出し用にディレクトリストリーム中の位置を設定する"

#. type: Plain text
#: build/C/man3/seekdir.3:40
#, no-wrap
msgid "B<void seekdir(DIR *>I<dirp>B<, long >I<loc>B<);>\n"
msgstr "B<void seekdir(DIR *>I<dirp>B<, long >I<loc>B<);>\n"

#. type: Plain text
#: build/C/man3/seekdir.3:51
#, no-wrap
msgid ""
"B<seekdir>():\n"
" _XOPEN_SOURCE\n"
"    || /* Glibc since 2.19: */ _DEFAULT_SOURCE\n"
"    || /* Glibc versions E<lt>= 2.19: */ _BSD_SOURCE || _SVID_SOURCE\n"
msgstr ""
"B<seekdir>():\n"
" _XOPEN_SOURCE\n"
"    || /* glibc 2.19 以降: */ _DEFAULT_SOURCE\n"
"    || /* glibc 2.19 以前: */ _BSD_SOURCE || _SVID_SOURCE\n"

#. type: Plain text
#: build/C/man3/seekdir.3:62
msgid ""
"The B<seekdir>()  function sets the location in the directory stream from "
"which the next B<readdir>(2)  call will start.  The I<loc> argument should "
"be a value returned by a previous call to B<telldir>(3)."
msgstr "B<seekdir>() 関数は、 B<readdir>(3) の次の呼び出しでの開始位置となる、ディレクトリストリーム中での位置を設定する。 I<loc> 引数には、それ以前の B<telldir>(3) の呼び出しで返された値を渡すべきである。"

#. type: Plain text
#: build/C/man3/seekdir.3:66
msgid "The B<seekdir>()  function returns no value."
msgstr "B<seekdir>() 関数は、値を返さない。"

#. type: tbl table
#: build/C/man3/seekdir.3:76
#, no-wrap
msgid "B<seekdir>()"
msgstr "B<seekdir>()"

#. type: Plain text
#: build/C/man3/seekdir.3:80 build/C/man3/telldir.3:80
msgid "POSIX.1-2001, POSIX.1-2008, 4.3BSD."
msgstr "POSIX.1-2001, POSIX.1-2008, 4.3BSD."

#. type: Plain text
#: build/C/man3/seekdir.3:92
msgid ""
"In glibc up to version 2.1.1, the type of the I<loc> argument was I<off_t>.  "
"POSIX.1-2001 specifies I<long>, and this is the type used since glibc "
"2.1.2.  See B<telldir>(3)  for information on why you should be careful in "
"making any assumptions about the value in this argument."
msgstr "バージョン 2.1.1 以前の glibc では、 I<loc> 引数の型は I<off_t> であった。 POSIX.1-2001 では I<long> と規定されており、glibc 2.1.2 以降では I<long> になっている。この引数の値に前提を持つ場合には注意が必要であり、理由については B<telldir>(3) を参照のこと。"

#. type: Plain text
#: build/C/man3/seekdir.3:100
msgid ""
"B<lseek>(2), B<closedir>(3), B<opendir>(3), B<readdir>(3), B<rewinddir>(3), "
"B<scandir>(3), B<telldir>(3)"
msgstr ""
"B<lseek>(2), B<closedir>(3), B<opendir>(3), B<readdir>(3), B<rewinddir>(3), "
"B<scandir>(3), B<telldir>(3)"

#. type: TH
#: build/C/man3/telldir.3:30
#, no-wrap
msgid "TELLDIR"
msgstr "TELLDIR"

#. type: Plain text
#: build/C/man3/telldir.3:33
msgid "telldir - return current location in directory stream"
msgstr "telldir - ディレクトリストリーム中の現在位置を返す"

#. type: Plain text
#: build/C/man3/telldir.3:38
#, no-wrap
msgid "B<long telldir(DIR *>I<dirp>B<);>\n"
msgstr "B<long telldir(DIR *>I<dirp>B<);>\n"

#. type: Plain text
#: build/C/man3/telldir.3:49
#, no-wrap
msgid ""
"B<telldir>():\n"
" _XOPEN_SOURCE\n"
"    || /* Glibc since 2.19: */ _DEFAULT_SOURCE\n"
"    || /* Glibc versions E<lt>= 2.19: */ _BSD_SOURCE || _SVID_SOURCE\n"
msgstr ""
"B<telldir>():\n"
" _XOPEN_SOURCE\n"
"    || /* glibc 2.19 以降: */ _DEFAULT_SOURCE\n"
"    || /* glibc 2.19 以前: */ _BSD_SOURCE || _SVID_SOURCE\n"

#. type: Plain text
#: build/C/man3/telldir.3:54
msgid ""
"The B<telldir>()  function returns the current location associated with the "
"directory stream I<dirp>."
msgstr "B<telldir>() 関数は、ディレクトリストリーム I<dirp> の現在位置を返す。"

#. type: Plain text
#: build/C/man3/telldir.3:62
msgid ""
"On success, the B<telldir>()  function returns the current location in the "
"directory stream.  On error, -1 is returned, and I<errno> is set "
"appropriately."
msgstr "成功した場合、 B<telldir>()  関数はディレクトリストリーム中の現在位置を返す。 エラーの場合、-1 が返り、 I<errno> が適切に設定される。"

#. type: tbl table
#: build/C/man3/telldir.3:76
#, no-wrap
msgid "B<telldir>()"
msgstr "B<telldir>()"

#. type: Plain text
#: build/C/man3/telldir.3:88
msgid ""
"In glibc up to version 2.1.1, the return type of B<telldir>()  was "
"I<off_t>.  POSIX.1-2001 specifies I<long>, and this is the type used since "
"glibc 2.1.2."
msgstr "バージョン 2.1.1 以前の glibc では、 B<telldir>() の返り値の型は I<off_t> であった。 POSIX.1-2001 では I<long> と規定されており、glibc 2.1.2 以降では I<long> になっている。"

#.  https://lwn.net/Articles/544298/
#. type: Plain text
#: build/C/man3/telldir.3:104
msgid ""
"In early filesystems, the value returned by B<telldir>()  was a simple file "
"offset within a directory.  Modern filesystems use tree or hash structures, "
"rather than flat tables, to represent directories.  On such filesystems, the "
"value returned by B<telldir>()  (and used internally by B<readdir>(3))  is a "
"\"cookie\" that is used by the implementation to derive a position within a "
"directory.  Application programs should treat this strictly as an opaque "
"value, making I<no> assumptions about its contents."
msgstr "初期のファイルシステムでは、 B<telldir>() が返す値は単なるディレクトリ内のファイルオフセットであった。最近のファイルシステムでは、ディレクトリを表現するのに、フラットなテーブルではなく、ツリー構造やハッシュ構造が使用されている。このようなファイルシステムでは、 B<telldir>() が返す値 (および B<readdir>(3) が内部で使用する値) は、ファイルシステム実装がディレクトリ内での位置を得るのに使用する \"cookie\" となる。アプリケーションプログラムでは、必ずこの値を内容の意識せず単なる値として扱うべきであり、その内容について前提を持つべきでは「ない」。"

#. type: Plain text
#: build/C/man3/telldir.3:111
msgid ""
"B<closedir>(3), B<opendir>(3), B<readdir>(3), B<rewinddir>(3), "
"B<scandir>(3), B<seekdir>(3)"
msgstr ""
"B<closedir>(3), B<opendir>(3), B<readdir>(3), B<rewinddir>(3), "
"B<scandir>(3), B<seekdir>(3)"
