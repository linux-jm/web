# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-03-12 14:01+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#: build/C/man2/create_module.2:10
#, no-wrap
msgid "CREATE_MODULE"
msgstr ""

#. type: TH
#: build/C/man2/create_module.2:10 build/C/man2/delete_module.2:25 build/C/man2/get_kernel_syms.2:10 build/C/man2/init_module.2:27 build/C/man2/query_module.2:10
#, no-wrap
msgid "2017-09-15"
msgstr ""

#. type: TH
#: build/C/man2/create_module.2:10 build/C/man2/delete_module.2:25 build/C/man2/get_kernel_syms.2:10 build/C/man2/init_module.2:27 build/C/man2/query_module.2:10
#, no-wrap
msgid "Linux"
msgstr ""

#. type: TH
#: build/C/man2/create_module.2:10 build/C/man2/delete_module.2:25 build/C/man2/get_kernel_syms.2:10 build/C/man2/init_module.2:27 build/C/man2/query_module.2:10
#, no-wrap
msgid "Linux Programmer's Manual"
msgstr ""

#. type: SH
#: build/C/man2/create_module.2:11 build/C/man2/delete_module.2:26 build/C/man2/get_kernel_syms.2:11 build/C/man2/init_module.2:28 build/C/man2/query_module.2:11
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: build/C/man2/create_module.2:13
msgid "create_module - create a loadable module entry"
msgstr ""

#. type: SH
#: build/C/man2/create_module.2:13 build/C/man2/delete_module.2:28 build/C/man2/get_kernel_syms.2:13 build/C/man2/init_module.2:30 build/C/man2/query_module.2:13
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: build/C/man2/create_module.2:16 build/C/man2/get_kernel_syms.2:16 build/C/man2/query_module.2:16
#, no-wrap
msgid "B<#include E<lt>linux/module.hE<gt>>\n"
msgstr ""

#. type: Plain text
#: build/C/man2/create_module.2:18
#, no-wrap
msgid "B<caddr_t create_module(const char *>I<name>B<, size_t >I<size>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man2/create_module.2:22 build/C/man2/delete_module.2:35 build/C/man2/get_kernel_syms.2:22 build/C/man2/query_module.2:23
msgid ""
"I<Note>: No declaration of this system call is provided in glibc headers; "
"see NOTES."
msgstr ""

#. type: SH
#: build/C/man2/create_module.2:22 build/C/man2/delete_module.2:35 build/C/man2/get_kernel_syms.2:22 build/C/man2/init_module.2:45 build/C/man2/query_module.2:23
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: build/C/man2/create_module.2:25 build/C/man2/query_module.2:26
msgid "I<Note>: This system call is present only in kernels before Linux 2.6."
msgstr ""

#. type: Plain text
#: build/C/man2/create_module.2:30
msgid ""
"B<create_module>()  attempts to create a loadable module entry and reserve "
"the kernel memory that will be needed to hold the module.  This system call "
"requires privilege."
msgstr ""

#. type: SH
#: build/C/man2/create_module.2:30 build/C/man2/delete_module.2:124 build/C/man2/get_kernel_syms.2:51 build/C/man2/init_module.2:154 build/C/man2/query_module.2:129
#, no-wrap
msgid "RETURN VALUE"
msgstr ""

#. type: Plain text
#: build/C/man2/create_module.2:35
msgid ""
"On success, returns the kernel address at which the module will reside.  On "
"error, -1 is returned and I<errno> is set appropriately."
msgstr ""

#. type: SH
#: build/C/man2/create_module.2:35 build/C/man2/delete_module.2:129 build/C/man2/get_kernel_syms.2:57 build/C/man2/init_module.2:159 build/C/man2/query_module.2:134
#, no-wrap
msgid "ERRORS"
msgstr ""

#. type: TP
#: build/C/man2/create_module.2:36 build/C/man2/init_module.2:198
#, no-wrap
msgid "B<EEXIST>"
msgstr ""

#. type: Plain text
#: build/C/man2/create_module.2:39
msgid "A module by that name already exists."
msgstr ""

#. type: TP
#: build/C/man2/create_module.2:39 build/C/man2/delete_module.2:143 build/C/man2/init_module.2:166 build/C/man2/query_module.2:135
#, no-wrap
msgid "B<EFAULT>"
msgstr ""

#. type: Plain text
#: build/C/man2/create_module.2:43
msgid "I<name> is outside the program's accessible address space."
msgstr ""

#. type: TP
#: build/C/man2/create_module.2:43 build/C/man2/init_module.2:201 build/C/man2/init_module.2:236 build/C/man2/query_module.2:143
#, no-wrap
msgid "B<EINVAL>"
msgstr ""

#. type: Plain text
#: build/C/man2/create_module.2:46
msgid "The requested size is too small even for the module header information."
msgstr ""

#. type: TP
#: build/C/man2/create_module.2:46 build/C/man2/init_module.2:181
#, no-wrap
msgid "B<ENOMEM>"
msgstr ""

#. type: Plain text
#: build/C/man2/create_module.2:50
msgid ""
"The kernel could not allocate a contiguous block of memory large enough for "
"the module."
msgstr ""

#. type: TP
#: build/C/man2/create_module.2:50 build/C/man2/get_kernel_syms.2:59 build/C/man2/query_module.2:163
#, no-wrap
msgid "B<ENOSYS>"
msgstr ""

#. type: Plain text
#: build/C/man2/create_module.2:55
msgid ""
"B<create_module>()  is not supported in this version of the kernel (e.g., "
"the kernel is version 2.6 or later)."
msgstr ""

#. type: TP
#: build/C/man2/create_module.2:55 build/C/man2/delete_module.2:150 build/C/man2/init_module.2:184
#, no-wrap
msgid "B<EPERM>"
msgstr ""

#. type: Plain text
#: build/C/man2/create_module.2:61
msgid ""
"The caller was not privileged (did not have the B<CAP_SYS_MODULE> "
"capability)."
msgstr ""

#. type: SH
#: build/C/man2/create_module.2:61 build/C/man2/get_kernel_syms.2:63 build/C/man2/init_module.2:256 build/C/man2/query_module.2:168
#, no-wrap
msgid "VERSIONS"
msgstr ""

#.  Removed in Linux 2.5.48
#. type: Plain text
#: build/C/man2/create_module.2:65 build/C/man2/get_kernel_syms.2:67 build/C/man2/query_module.2:172
msgid ""
"This system call is present on Linux only up until kernel 2.4; it was "
"removed in Linux 2.6."
msgstr ""

#. type: SH
#: build/C/man2/create_module.2:65 build/C/man2/delete_module.2:172 build/C/man2/get_kernel_syms.2:67 build/C/man2/init_module.2:259 build/C/man2/query_module.2:172
#, no-wrap
msgid "CONFORMING TO"
msgstr ""

#. type: Plain text
#: build/C/man2/create_module.2:68
msgid "B<create_module>()  is Linux-specific."
msgstr ""

#. type: SH
#: build/C/man2/create_module.2:68 build/C/man2/delete_module.2:175 build/C/man2/get_kernel_syms.2:70 build/C/man2/init_module.2:264 build/C/man2/query_module.2:175
#, no-wrap
msgid "NOTES"
msgstr ""

#. type: Plain text
#: build/C/man2/create_module.2:76 build/C/man2/get_kernel_syms.2:78
msgid ""
"This obsolete system call is not supported by glibc.  No declaration is "
"provided in glibc headers, but, through a quirk of history, glibc versions "
"before 2.23 did export an ABI for this system call.  Therefore, in order to "
"employ this system call, it was sufficient to manually declare the interface "
"in your code; alternatively, you could invoke the system call using "
"B<syscall>(2)."
msgstr ""

#. type: SH
#: build/C/man2/create_module.2:76 build/C/man2/delete_module.2:210 build/C/man2/get_kernel_syms.2:91 build/C/man2/init_module.2:353 build/C/man2/query_module.2:193
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: build/C/man2/create_module.2:80
msgid "B<delete_module>(2), B<init_module>(2), B<query_module>(2)"
msgstr ""

#. type: SH
#: build/C/man2/create_module.2:80 build/C/man2/delete_module.2:217 build/C/man2/get_kernel_syms.2:96 build/C/man2/init_module.2:359 build/C/man2/query_module.2:200
#, no-wrap
msgid "COLOPHON"
msgstr ""

#. type: Plain text
#: build/C/man2/create_module.2:88 build/C/man2/delete_module.2:225 build/C/man2/get_kernel_syms.2:104 build/C/man2/init_module.2:367 build/C/man2/query_module.2:208
msgid ""
"This page is part of release 5.10 of the Linux I<man-pages> project.  A "
"description of the project, information about reporting bugs, and the latest "
"version of this page, can be found at "
"\\%https://www.kernel.org/doc/man-pages/."
msgstr ""

#. type: TH
#: build/C/man2/delete_module.2:25
#, no-wrap
msgid "DELETE_MODULE"
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:28
msgid "delete_module - unload a kernel module"
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:31
#, no-wrap
msgid "B<int delete_module(const char *>I<name>B<, int >I<flags>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:49
msgid ""
"The B<delete_module>()  system call attempts to remove the unused loadable "
"module entry identified by I<name>.  If the module has an I<exit> function, "
"then that function is executed before unloading the module.  The I<flags> "
"argument is used to modify the behavior of the system call, as described "
"below.  This system call requires privilege."
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:51
msgid "Module removal is attempted according to the following rules:"
msgstr ""

#. type: IP
#: build/C/man2/delete_module.2:51
#, no-wrap
msgid "1."
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:55
msgid ""
"If there are other loaded modules that depend on (i.e., refer to symbols "
"defined in) this module, then the call fails."
msgstr ""

#. type: IP
#: build/C/man2/delete_module.2:55
#, no-wrap
msgid "2."
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:59
msgid ""
"Otherwise, if the reference count for the module (i.e., the number of "
"processes currently using the module)  is zero, then the module is "
"immediately unloaded."
msgstr ""

#. type: IP
#: build/C/man2/delete_module.2:59
#, no-wrap
msgid "3."
msgstr ""

#.   	O_TRUNC == KMOD_REMOVE_FORCE in kmod library
#.   	O_NONBLOCK == KMOD_REMOVE_NOWAIT in kmod library
#. type: Plain text
#: build/C/man2/delete_module.2:70
msgid ""
"If a module has a nonzero reference count, then the behavior depends on the "
"bits set in I<flags>.  In normal usage (see NOTES), the B<O_NONBLOCK> flag "
"is always specified, and the B<O_TRUNC> flag may additionally be specified."
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:74
msgid "The various combinations for I<flags> have the following effect:"
msgstr ""

#. type: TP
#: build/C/man2/delete_module.2:75
#, no-wrap
msgid "B<flags == O_NONBLOCK>"
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:78
msgid "The call returns immediately, with an error."
msgstr ""

#. type: TP
#: build/C/man2/delete_module.2:78
#, no-wrap
msgid "B<flags == (O_NONBLOCK | O_TRUNC)>"
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:82
msgid ""
"The module is unloaded immediately, regardless of whether it has a nonzero "
"reference count."
msgstr ""

#. type: TP
#: build/C/man2/delete_module.2:82
#, no-wrap
msgid "B<(flags & O_NONBLOCK) == 0>"
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:89
msgid "If I<flags> does not specify B<O_NONBLOCK>, the following steps occur:"
msgstr ""

#. type: IP
#: build/C/man2/delete_module.2:90 build/C/man2/delete_module.2:92 build/C/man2/delete_module.2:97
#, no-wrap
msgid "*"
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:92
msgid "The module is marked so that no new references are permitted."
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:97
msgid ""
"If the module's reference count is nonzero, the caller is placed in an "
"uninterruptible sleep state (B<TASK_UNINTERRUPTIBLE>)  until the reference "
"count is zero, at which point the call unblocks."
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:99
msgid "The module is unloaded in the usual way."
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:113
msgid ""
"The B<O_TRUNC> flag has one further effect on the rules described above.  By "
"default, if a module has an I<init> function but no I<exit> function, then "
"an attempt to remove the module fails.  However, if B<O_TRUNC> was "
"specified, this requirement is bypassed."
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:124
msgid ""
"Using the B<O_TRUNC> flag is dangerous! If the kernel was not built with "
"B<CONFIG_MODULE_FORCE_UNLOAD>, this flag is silently ignored.  (Normally, "
"B<CONFIG_MODULE_FORCE_UNLOAD> is enabled.)  Using this flag taints the "
"kernel (TAINT_FORCED_RMMOD)."
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:129 build/C/man2/query_module.2:134
msgid ""
"On success, zero is returned.  On error, -1 is returned and I<errno> is set "
"appropriately."
msgstr ""

#. type: TP
#: build/C/man2/delete_module.2:130 build/C/man2/init_module.2:163
#, no-wrap
msgid "B<EBUSY>"
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:143
msgid ""
"The module is not \"live\" (i.e., it is still being initialized or is "
"already marked for removal); or, the module has an I<init> function but has "
"no I<exit> function, and B<O_TRUNC> was not specified in I<flags>."
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:147
msgid "I<name> refers to a location outside the process's accessible address space."
msgstr ""

#. type: TP
#: build/C/man2/delete_module.2:147 build/C/man2/query_module.2:153
#, no-wrap
msgid "B<ENOENT>"
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:150
msgid "No module by that name exists."
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:161
msgid ""
"The caller was not privileged (did not have the B<CAP_SYS_MODULE> "
"capability), or module unloading is disabled (see "
"I</proc/sys/kernel/modules_disabled> in B<proc>(5))."
msgstr ""

#. type: TP
#: build/C/man2/delete_module.2:161
#, no-wrap
msgid "B<EWOULDBLOCK>"
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:172
msgid ""
"Other modules depend on this module; or, B<O_NONBLOCK> was specified in "
"I<flags>, but the reference count of this module is nonzero and B<O_TRUNC> "
"was not specified in I<flags>."
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:175
msgid "B<delete_module>()  is Linux-specific."
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:186
msgid ""
"The B<delete_module>()  system call is not supported by glibc.  No "
"declaration is provided in glibc headers, but, through a quirk of history, "
"glibc versions before 2.23 did export an ABI for this system call.  "
"Therefore, in order to employ this system call, it is (before glibc 2.23) "
"sufficient to manually declare the interface in your code; alternatively, "
"you can invoke the system call using B<syscall>(2)."
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:196
msgid ""
"The uninterruptible sleep that may occur if B<O_NONBLOCK> is omitted from "
"I<flags> is considered undesirable, because the sleeping process is left in "
"an unkillable state.  As at Linux 3.7, specifying B<O_NONBLOCK> is optional, "
"but in future kernels it is likely to become mandatory."
msgstr ""

#. type: SS
#: build/C/man2/delete_module.2:196 build/C/man2/init_module.2:289
#, no-wrap
msgid "Linux 2.4 and earlier"
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:198
msgid "In Linux 2.4 and earlier, the system call took only one argument:"
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:200
msgid "B< int delete_module(const char *>I<name>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:204
msgid "If I<name> is NULL, all unused modules marked auto-clean are removed."
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:210
msgid ""
"Some further details of differences in the behavior of B<delete_module>()  "
"in Linux 2.4 and earlier are I<not> currently explained in this manual page."
msgstr ""

#. type: Plain text
#: build/C/man2/delete_module.2:217
msgid ""
"B<create_module>(2), B<init_module>(2), B<query_module>(2), B<lsmod>(8), "
"B<modprobe>(8), B<rmmod>(8)"
msgstr ""

#. type: TH
#: build/C/man2/get_kernel_syms.2:10
#, no-wrap
msgid "GET_KERNEL_SYMS"
msgstr ""

#. type: Plain text
#: build/C/man2/get_kernel_syms.2:13
msgid "get_kernel_syms - retrieve exported kernel and module symbols"
msgstr ""

#. type: Plain text
#: build/C/man2/get_kernel_syms.2:18
#, no-wrap
msgid "B<int get_kernel_syms(struct kernel_sym *>I<table>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man2/get_kernel_syms.2:25
msgid "B<Note>: This system call is present only in kernels before Linux 2.6."
msgstr ""

#. type: Plain text
#: build/C/man2/get_kernel_syms.2:32
msgid ""
"If I<table> is NULL, B<get_kernel_syms>()  returns the number of symbols "
"available for query.  Otherwise, it fills in a table of structures:"
msgstr ""

#. type: Plain text
#: build/C/man2/get_kernel_syms.2:39
#, no-wrap
msgid ""
"struct kernel_sym {\n"
"    unsigned long value;\n"
"    char          name[60];\n"
"};\n"
msgstr ""

#. type: Plain text
#: build/C/man2/get_kernel_syms.2:47
msgid ""
"The symbols are interspersed with magic symbols of the form "
"B<#>I<module-name> with the kernel having an empty name.  The value "
"associated with a symbol of this form is the address at which the module is "
"loaded."
msgstr ""

#. type: Plain text
#: build/C/man2/get_kernel_syms.2:51
msgid ""
"The symbols exported from each module follow their magic module tag and the "
"modules are returned in the reverse of the order in which they were loaded."
msgstr ""

#. type: Plain text
#: build/C/man2/get_kernel_syms.2:57
msgid ""
"On success, returns the number of symbols copied to I<table>.  On error, -1 "
"is returned and I<errno> is set appropriately."
msgstr ""

#. type: Plain text
#: build/C/man2/get_kernel_syms.2:59
msgid "There is only one possible error return:"
msgstr ""

#. type: Plain text
#: build/C/man2/get_kernel_syms.2:63
msgid "B<get_kernel_syms>()  is not supported in this version of the kernel."
msgstr ""

#. type: Plain text
#: build/C/man2/get_kernel_syms.2:70
msgid "B<get_kernel_syms>()  is Linux-specific."
msgstr ""

#. type: SH
#: build/C/man2/get_kernel_syms.2:78
#, no-wrap
msgid "BUGS"
msgstr ""

#. type: Plain text
#: build/C/man2/get_kernel_syms.2:83
msgid ""
"There is no way to indicate the size of the buffer allocated for I<table>.  "
"If symbols have been added to the kernel since the program queried for the "
"symbol table size, memory will be corrupted."
msgstr ""

#. type: Plain text
#: build/C/man2/get_kernel_syms.2:85
msgid "The length of exported symbol names is limited to 59 characters."
msgstr ""

#. type: Plain text
#: build/C/man2/get_kernel_syms.2:91
msgid ""
"Because of these limitations, this system call is deprecated in favor of "
"B<query_module>(2)  (which is itself nowadays deprecated in favor of other "
"interfaces described on its manual page)."
msgstr ""

#. type: Plain text
#: build/C/man2/get_kernel_syms.2:96
msgid ""
"B<create_module>(2), B<delete_module>(2), B<init_module>(2), "
"B<query_module>(2)"
msgstr ""

#. type: TH
#: build/C/man2/init_module.2:27
#, no-wrap
msgid "INIT_MODULE"
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:30
msgid "init_module, finit_module - load a kernel module"
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:34
#, no-wrap
msgid ""
"B<int init_module(void *>I<module_image>B<, unsigned long >I<len>B<,>\n"
"B<                const char *>I<param_values>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:37
#, no-wrap
msgid ""
"B<int finit_module(int >I<fd>B<, const char *>I<param_values>B<,>\n"
"B<                 int >I<flags>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:45
msgid ""
"I<Note>: glibc provides no header file declaration of B<init_module>()  and "
"no wrapper function for B<finit_module>(); see NOTES."
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:54
msgid ""
"B<init_module>()  loads an ELF image into kernel space, performs any "
"necessary symbol relocations, initializes module parameters to values "
"provided by the caller, and then runs the module's I<init> function.  This "
"system call requires privilege."
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:62
msgid ""
"The I<module_image> argument points to a buffer containing the binary image "
"to be loaded; I<len> specifies the size of that buffer.  The module image "
"should be a valid ELF image, built for the running kernel."
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:73
msgid ""
"The I<param_values> argument is a string containing space-delimited "
"specifications of the values for module parameters (defined inside the "
"module using B<module_param>()  and B<module_param_array>()).  The kernel "
"parses this string and initializes the specified parameters.  Each of the "
"parameter specifications has the form:"
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:78
msgid "I<name>[B<=>I<value>[B<,>I<value>...]]"
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:93
msgid ""
"The parameter I<name> is one of those defined within the module using "
"I<module_param>()  (see the Linux kernel source file "
"I<include/linux/moduleparam.h>).  The parameter I<value> is optional in the "
"case of I<bool> and I<invbool> parameters.  Values for array parameters are "
"specified as a comma-separated list."
msgstr ""

#. type: SS
#: build/C/man2/init_module.2:93
#, no-wrap
msgid "finit_module()"
msgstr ""

#.  commit 34e1169d996ab148490c01b65b4ee371cf8ffba2
#.  https://lwn.net/Articles/519010/
#. type: Plain text
#: build/C/man2/init_module.2:111
msgid ""
"The B<finit_module>()  system call is like B<init_module>(), but reads the "
"module to be loaded from the file descriptor I<fd>.  It is useful when the "
"authenticity of a kernel module can be determined from its location in the "
"filesystem; in cases where that is possible, the overhead of using "
"cryptographically signed modules to determine the authenticity of a module "
"can be avoided.  The I<param_values> argument is as for B<init_module>()."
msgstr ""

#.  commit 2f3238aebedb243804f58d62d57244edec4149b2
#. type: Plain text
#: build/C/man2/init_module.2:119
msgid ""
"The I<flags> argument modifies the operation of B<finit_module>().  It is a "
"bit mask value created by ORing together zero or more of the following "
"flags:"
msgstr ""

#. type: TP
#: build/C/man2/init_module.2:119
#, no-wrap
msgid "B<MODULE_INIT_IGNORE_MODVERSIONS>"
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:122
msgid "Ignore symbol version hashes."
msgstr ""

#. type: TP
#: build/C/man2/init_module.2:122
#, no-wrap
msgid "B<MODULE_INIT_IGNORE_VERMAGIC>"
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:125
msgid "Ignore kernel version magic."
msgstr ""

#.  http://www.tldp.org/HOWTO/Module-HOWTO/basekerncompat.html
#.  is dated, but informative
#. type: Plain text
#: build/C/man2/init_module.2:143
msgid ""
"There are some safety checks built into a module to ensure that it matches "
"the kernel against which it is loaded.  These checks are recorded when the "
"module is built and verified when the module is loaded.  First, the module "
"records a \"vermagic\" string containing the kernel version number and "
"prominent features (such as the CPU type).  Second, if the module was built "
"with the B<CONFIG_MODVERSIONS> configuration option enabled, a version hash "
"is recorded for each symbol the module uses.  This hash is based on the "
"types of the arguments and return value for the function named by the "
"symbol.  In this case, the kernel version number within the \"vermagic\" "
"string is ignored, as the symbol version hashes are assumed to be "
"sufficiently reliable."
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:154
msgid ""
"Using the B<MODULE_INIT_IGNORE_VERMAGIC> flag indicates that the "
"\"vermagic\" string is to be ignored, and the "
"B<MODULE_INIT_IGNORE_MODVERSIONS> flag indicates that the symbol version "
"hashes are to be ignored.  If the kernel is built to permit forced loading "
"(i.e., configured with B<CONFIG_MODULE_FORCE_LOAD>), then loading continues, "
"otherwise it fails with the error B<ENOEXEC> as expected for malformed "
"modules."
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:159
msgid ""
"On success, these system calls return 0.  On error, -1 is returned and "
"I<errno> is set appropriately."
msgstr ""

#. type: TP
#: build/C/man2/init_module.2:160
#, no-wrap
msgid "B<EBADMSG> (since Linux 3.7)"
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:163
msgid "Module signature is misformatted."
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:166
msgid "Timeout while trying to resolve a symbol reference by this module."
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:170
msgid ""
"An address argument referred to a location that is outside the process's "
"accessible address space."
msgstr ""

#. type: TP
#: build/C/man2/init_module.2:170
#, no-wrap
msgid "B<ENOKEY> (since Linux 3.7)"
msgstr ""

#.  commit 48ba2462ace6072741fd8d0058207d630ce93bf1
#.  commit 1d0059f3a468825b5fc5405c636a2f6e02707ffa
#.  commit 106a4ee258d14818467829bf0e12aeae14c16cd7
#. type: Plain text
#: build/C/man2/init_module.2:181
msgid ""
"Module signature is invalid or the kernel does not have a key for this "
"module.  This error is returned only if the kernel was configured with "
"B<CONFIG_MODULE_SIG_FORCE>; if the kernel was not configured with this "
"option, then an invalid or unsigned module simply taints the kernel."
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:184
msgid "Out of memory."
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:195
msgid ""
"The caller was not privileged (did not have the B<CAP_SYS_MODULE> "
"capability), or module loading is disabled (see "
"I</proc/sys/kernel/modules_disabled> in B<proc>(5))."
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:198
msgid "The following errors may additionally occur for B<init_module>():"
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:201
msgid "A module with this name is already loaded."
msgstr ""

#.  .TP
#.  .BR EINVAL " (Linux 2.4 and earlier)"
#.  Some
#.  .I image
#.  slot is filled in incorrectly,
#.  .I image\->name
#.  does not correspond to the original module name, some
#.  .I image\->deps
#.  entry does not correspond to a loaded module,
#.  or some other similar inconsistency.
#. type: Plain text
#: build/C/man2/init_module.2:217
msgid ""
"I<param_values> is invalid, or some part of the ELF image in I<module_image> "
"contains inconsistencies."
msgstr ""

#. type: TP
#: build/C/man2/init_module.2:217 build/C/man2/init_module.2:240
#, no-wrap
msgid "B<ENOEXEC>"
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:223
msgid ""
"The binary image supplied in I<module_image> is not an ELF image, or is an "
"ELF image that is invalid or for a different architecture."
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:226
msgid "The following errors may additionally occur for B<finit_module>():"
msgstr ""

#. type: TP
#: build/C/man2/init_module.2:226
#, no-wrap
msgid "B<EBADF>"
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:231
msgid "The file referred to by I<fd> is not opened for reading."
msgstr ""

#. type: TP
#: build/C/man2/init_module.2:231
#, no-wrap
msgid "B<EFBIG>"
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:236
msgid "The file referred to by I<fd> is too large."
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:240
msgid "I<flags> is invalid."
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:244
msgid "I<fd> does not refer to an open file."
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:256
msgid ""
"In addition to the above errors, if the module's I<init> function is "
"executed and returns an error, then B<init_module>()  or B<finit_module>()  "
"fails and I<errno> is set to the value returned by the I<init> function."
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:259
msgid "B<finit_module>()  is available since Linux 3.8."
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:264
msgid "B<init_module>()  and B<finit_module>()  are Linux-specific."
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:275
msgid ""
"The B<init_module>()  system call is not supported by glibc.  No declaration "
"is provided in glibc headers, but, through a quirk of history, glibc "
"versions before 2.23 did export an ABI for this system call.  Therefore, in "
"order to employ this system call, it is (before glibc 2.23) sufficient to "
"manually declare the interface in your code; alternatively, you can invoke "
"the system call using B<syscall>(2)."
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:280
msgid ""
"Glibc does not provide a wrapper for B<finit_module>(); call it using "
"B<syscall>(2)."
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:285
msgid ""
"Information about currently loaded modules can be found in I</proc/modules> "
"and in the file trees under the per-module subdirectories under "
"I</sys/module>."
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:289
msgid ""
"See the Linux kernel source file I<include/linux/module.h> for some useful "
"background information."
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:293
msgid ""
"In Linux 2.4 and earlier, the B<init_module>()  system call was rather "
"different:"
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:295
msgid "B<#include E<lt>linux/module.hE<gt>>"
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:297
msgid "B< int init_module(const char *>I<name>B<, struct module *>I<image>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:305
msgid ""
"(User-space applications can detect which version of B<init_module>()  is "
"available by calling B<query_module>(); the latter call fails with the error "
"B<ENOSYS> on Linux 2.6 and later.)"
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:316
msgid ""
"The older version of the system call loads the relocated module image "
"pointed to by I<image> into kernel space and runs the module's I<init> "
"function.  The caller is responsible for providing the relocated image "
"(since Linux 2.6, the B<init_module>()  system call does the relocation)."
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:320
msgid ""
"The module image begins with a module structure and is followed by code and "
"data as appropriate.  Since Linux 2.2, the module structure is defined as "
"follows:"
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:343
#, no-wrap
msgid ""
"struct module {\n"
"    unsigned long         size_of_struct;\n"
"    struct module        *next;\n"
"    const char           *name;\n"
"    unsigned long         size;\n"
"    long                  usecount;\n"
"    unsigned long         flags;\n"
"    unsigned int          nsyms;\n"
"    unsigned int          ndeps;\n"
"    struct module_symbol *syms;\n"
"    struct module_ref    *deps;\n"
"    struct module_ref    *refs;\n"
"    int                 (*init)(void);\n"
"    void                (*cleanup)(void);\n"
"    const struct exception_table_entry *ex_table_start;\n"
"    const struct exception_table_entry *ex_table_end;\n"
"#ifdef __alpha__\n"
"    unsigned long gp;\n"
"#endif\n"
"};\n"
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:353
msgid ""
"All of the pointer fields, with the exception of I<next> and I<refs>, are "
"expected to point within the module body and be initialized as appropriate "
"for kernel space, that is, relocated with the rest of the module."
msgstr ""

#. type: Plain text
#: build/C/man2/init_module.2:359
msgid ""
"B<create_module>(2), B<delete_module>(2), B<query_module>(2), B<lsmod>(8), "
"B<modprobe>(8)"
msgstr ""

#. type: TH
#: build/C/man2/query_module.2:10
#, no-wrap
msgid "QUERY_MODULE"
msgstr ""

#. type: Plain text
#: build/C/man2/query_module.2:13
msgid "query_module - query the kernel for various bits pertaining to modules"
msgstr ""

#. type: Plain text
#: build/C/man2/query_module.2:19
#, no-wrap
msgid ""
"B<int query_module(const char *>I<name>B<, int >I<which>B<, void "
"*>I<buf>B<,>\n"
"B<                 size_t >I<bufsize>B<, size_t *>I<ret>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man2/query_module.2:43
msgid ""
"B<query_module>()  requests information from the kernel about loadable "
"modules.  The returned information is placed in the buffer pointed to by "
"I<buf>.  The caller must specify the size of I<buf> in I<bufsize>.  The "
"precise nature and format of the returned information depend on the "
"operation specified by I<which>.  Some operations require I<name> to "
"identify a currently loaded module, some allow I<name> to be NULL, "
"indicating the kernel proper."
msgstr ""

#. type: Plain text
#: build/C/man2/query_module.2:46
msgid "The following values can be specified for I<which>:"
msgstr ""

#. type: TP
#: build/C/man2/query_module.2:46
#, no-wrap
msgid "B<0>"
msgstr ""

#. type: Plain text
#: build/C/man2/query_module.2:51
msgid ""
"Returns success, if the kernel supports B<query_module>().  Used to probe "
"for availability of the system call."
msgstr ""

#. type: TP
#: build/C/man2/query_module.2:51
#, no-wrap
msgid "B<QM_MODULES>"
msgstr ""

#.  ret is set on ENOSPC
#. type: Plain text
#: build/C/man2/query_module.2:59
msgid ""
"Returns the names of all loaded modules.  The returned buffer consists of a "
"sequence of null-terminated strings; I<ret> is set to the number of modules."
msgstr ""

#. type: TP
#: build/C/man2/query_module.2:59
#, no-wrap
msgid "B<QM_DEPS>"
msgstr ""

#.  ret is set on ENOSPC
#. type: Plain text
#: build/C/man2/query_module.2:66
msgid ""
"Returns the names of all modules used by the indicated module.  The returned "
"buffer consists of a sequence of null-terminated strings; I<ret> is set to "
"the number of modules."
msgstr ""

#. type: TP
#: build/C/man2/query_module.2:66
#, no-wrap
msgid "B<QM_REFS>"
msgstr ""

#.  ret is set on ENOSPC
#. type: Plain text
#: build/C/man2/query_module.2:75
msgid ""
"Returns the names of all modules using the indicated module.  This is the "
"inverse of B<QM_DEPS>.  The returned buffer consists of a sequence of "
"null-terminated strings; I<ret> is set to the number of modules."
msgstr ""

#. type: TP
#: build/C/man2/query_module.2:75
#, no-wrap
msgid "B<QM_SYMBOLS>"
msgstr ""

#.  ret is set on ENOSPC
#. type: Plain text
#: build/C/man2/query_module.2:81
msgid ""
"Returns the symbols and values exported by the kernel or the indicated "
"module.  The returned buffer is an array of structures of the following form"
msgstr ""

#. type: Plain text
#: build/C/man2/query_module.2:88
#, no-wrap
msgid ""
"struct module_symbol {\n"
"    unsigned long value;\n"
"    unsigned long name;\n"
"};\n"
msgstr ""

#. type: Plain text
#: build/C/man2/query_module.2:98
msgid ""
"followed by null-terminated strings.  The value of I<name> is the character "
"offset of the string relative to the start of I<buf>; I<ret> is set to the "
"number of symbols."
msgstr ""

#. type: TP
#: build/C/man2/query_module.2:98
#, no-wrap
msgid "B<QM_INFO>"
msgstr ""

#. type: Plain text
#: build/C/man2/query_module.2:102
msgid ""
"Returns miscellaneous information about the indicated module.  The output "
"buffer format is:"
msgstr ""

#. type: Plain text
#: build/C/man2/query_module.2:110
#, no-wrap
msgid ""
"struct module_info {\n"
"    unsigned long address;\n"
"    unsigned long size;\n"
"    unsigned long flags;\n"
"};\n"
msgstr ""

#. type: Plain text
#: build/C/man2/query_module.2:129
msgid ""
"where I<address> is the kernel address at which the module resides, I<size> "
"is the size of the module in bytes, and I<flags> is a mask of "
"B<MOD_RUNNING>, B<MOD_AUTOCLEAN>, and so on, that indicates the current "
"status of the module (see the Linux kernel source file "
"I<include/linux/module.h>).  I<ret> is set to the size of the I<module_info> "
"structure."
msgstr ""

#. type: Plain text
#: build/C/man2/query_module.2:143
msgid ""
"At least one of I<name>, I<buf>, or I<ret> was outside the program's "
"accessible address space."
msgstr ""

#.  Not permitted with QM_DEPS, QM_REFS, or QM_INFO.
#. type: Plain text
#: build/C/man2/query_module.2:153
msgid ""
"Invalid I<which>; or I<name> is NULL (indicating \"the kernel\"), but this "
"is not permitted with the specified value of I<which>."
msgstr ""

#. type: Plain text
#: build/C/man2/query_module.2:158
msgid "No module by that I<name> exists."
msgstr ""

#. type: TP
#: build/C/man2/query_module.2:158
#, no-wrap
msgid "B<ENOSPC>"
msgstr ""

#. type: Plain text
#: build/C/man2/query_module.2:163
msgid ""
"The buffer size provided was too small.  I<ret> is set to the minimum size "
"needed."
msgstr ""

#. type: Plain text
#: build/C/man2/query_module.2:168
msgid ""
"B<query_module>()  is not supported in this version of the kernel (e.g., the "
"kernel is version 2.6 or later)."
msgstr ""

#. type: Plain text
#: build/C/man2/query_module.2:175
msgid "B<query_module>()  is Linux-specific."
msgstr ""

#. type: Plain text
#: build/C/man2/query_module.2:183
msgid ""
"Some of the information that was formerly available via B<query_module>()  "
"can be obtained from I</proc/modules>, I</proc/kallsyms>, and the files "
"under the directory I</sys/module>."
msgstr ""

#. type: Plain text
#: build/C/man2/query_module.2:193
msgid ""
"The B<query_module>()  system call is not supported by glibc.  No "
"declaration is provided in glibc headers, but, through a quirk of history, "
"glibc does export an ABI for this system call.  Therefore, in order to "
"employ this system call, it is sufficient to manually declare the interface "
"in your code; alternatively, you can invoke the system call using "
"B<syscall>(2)."
msgstr ""

#. type: Plain text
#: build/C/man2/query_module.2:200
msgid ""
"B<create_module>(2), B<delete_module>(2), B<get_kernel_syms>(2), "
"B<init_module>(2), B<lsmod>(8), B<modinfo>(8)"
msgstr ""
