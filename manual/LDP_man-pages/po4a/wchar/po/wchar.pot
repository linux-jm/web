# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-03-12 14:00+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#: build/C/man3/btowc.3:16
#, no-wrap
msgid "BTOWC"
msgstr ""

#. type: TH
#: build/C/man3/btowc.3:16 build/C/man3/mbrlen.3:16 build/C/man3/putwchar.3:17 build/C/man3/ungetwc.3:16 build/C/man3/wcschr.3:16 build/C/man3/wcscmp.3:16 build/C/man3/wcscspn.3:16 build/C/man3/wcspbrk.3:16 build/C/man3/wcsrchr.3:16 build/C/man3/wcsspn.3:16 build/C/man3/wcstoimax.3:24 build/C/man3/wcswidth.3:15 build/C/man3/wmemchr.3:16 build/C/man3/wmemcmp.3:15 build/C/man3/wmemcpy.3:16 build/C/man3/wmemmove.3:16 build/C/man3/wmemset.3:16
#, no-wrap
msgid "2015-08-08"
msgstr ""

#. type: TH
#: build/C/man3/btowc.3:16 build/C/man3/fgetws.3:18 build/C/man3/fputws.3:16 build/C/man3/fwide.3:16 build/C/man3/getwchar.3:17 build/C/man3/mbrlen.3:16 build/C/man3/mbrtowc.3:17 build/C/man3/mbsinit.3:16 build/C/man3/mbsnrtowcs.3:15 build/C/man3/mbsrtowcs.3:16 build/C/man3/putwchar.3:17 build/C/man3/ungetwc.3:16 build/C/man3/wcpcpy.3:15 build/C/man3/wcpncpy.3:15 build/C/man3/wcrtomb.3:16 build/C/man3/wcscasecmp.3:15 build/C/man3/wcscat.3:16 build/C/man3/wcschr.3:16 build/C/man3/wcscmp.3:16 build/C/man3/wcscpy.3:16 build/C/man3/wcscspn.3:16 build/C/man3/wcsdup.3:15 build/C/man3/wcslen.3:16 build/C/man3/wcsncasecmp.3:15 build/C/man3/wcsncat.3:16 build/C/man3/wcsncmp.3:16 build/C/man3/wcsncpy.3:16 build/C/man3/wcsnlen.3:15 build/C/man3/wcsnrtombs.3:15 build/C/man3/wcspbrk.3:16 build/C/man3/wcsrchr.3:16 build/C/man3/wcsrtombs.3:16 build/C/man3/wcsspn.3:16 build/C/man3/wcsstr.3:16 build/C/man3/wcstok.3:16 build/C/man3/wcswidth.3:15 build/C/man3/wctob.3:16 build/C/man3/wcwidth.3:15 build/C/man3/wmemchr.3:16 build/C/man3/wmemcmp.3:15 build/C/man3/wmemcpy.3:16 build/C/man3/wmemmove.3:16 build/C/man3/wmemset.3:16
#, no-wrap
msgid "GNU"
msgstr ""

#. type: TH
#: build/C/man3/btowc.3:16 build/C/man3/fgetws.3:18 build/C/man3/fputws.3:16 build/C/man3/fwide.3:16 build/C/man3/getwchar.3:17 build/C/man3/mbrlen.3:16 build/C/man3/mbrtowc.3:17 build/C/man3/mbsinit.3:16 build/C/man3/mbsnrtowcs.3:15 build/C/man3/mbsrtowcs.3:16 build/C/man3/putwchar.3:17 build/C/man3/ungetwc.3:16 build/C/man3/wcpcpy.3:15 build/C/man3/wcpncpy.3:15 build/C/man3/wcrtomb.3:16 build/C/man3/wcscasecmp.3:15 build/C/man3/wcscat.3:16 build/C/man3/wcschr.3:16 build/C/man3/wcscmp.3:16 build/C/man3/wcscpy.3:16 build/C/man3/wcscspn.3:16 build/C/man3/wcsdup.3:15 build/C/man3/wcslen.3:16 build/C/man3/wcsncasecmp.3:15 build/C/man3/wcsncat.3:16 build/C/man3/wcsncmp.3:16 build/C/man3/wcsncpy.3:16 build/C/man3/wcsnlen.3:15 build/C/man3/wcsnrtombs.3:15 build/C/man3/wcspbrk.3:16 build/C/man3/wcsrchr.3:16 build/C/man3/wcsrtombs.3:16 build/C/man3/wcsspn.3:16 build/C/man3/wcsstr.3:16 build/C/man3/wcstoimax.3:24 build/C/man3/wcstok.3:16 build/C/man3/wcswidth.3:15 build/C/man3/wctob.3:16 build/C/man3/wcwidth.3:15 build/C/man3/wmemchr.3:16 build/C/man3/wmemcmp.3:15 build/C/man3/wmemcpy.3:16 build/C/man3/wmemmove.3:16 build/C/man3/wmemset.3:16
#, no-wrap
msgid "Linux Programmer's Manual"
msgstr ""

#. type: SH
#: build/C/man3/btowc.3:17 build/C/man3/fgetws.3:19 build/C/man3/fputws.3:17 build/C/man3/fwide.3:17 build/C/man3/getwchar.3:18 build/C/man3/mbrlen.3:17 build/C/man3/mbrtowc.3:18 build/C/man3/mbsinit.3:17 build/C/man3/mbsnrtowcs.3:16 build/C/man3/mbsrtowcs.3:17 build/C/man3/putwchar.3:18 build/C/man3/ungetwc.3:17 build/C/man3/wcpcpy.3:16 build/C/man3/wcpncpy.3:16 build/C/man3/wcrtomb.3:17 build/C/man3/wcscasecmp.3:16 build/C/man3/wcscat.3:17 build/C/man3/wcschr.3:17 build/C/man3/wcscmp.3:17 build/C/man3/wcscpy.3:17 build/C/man3/wcscspn.3:17 build/C/man3/wcsdup.3:16 build/C/man3/wcslen.3:17 build/C/man3/wcsncasecmp.3:16 build/C/man3/wcsncat.3:17 build/C/man3/wcsncmp.3:17 build/C/man3/wcsncpy.3:17 build/C/man3/wcsnlen.3:16 build/C/man3/wcsnrtombs.3:16 build/C/man3/wcspbrk.3:17 build/C/man3/wcsrchr.3:17 build/C/man3/wcsrtombs.3:17 build/C/man3/wcsspn.3:17 build/C/man3/wcsstr.3:17 build/C/man3/wcstoimax.3:25 build/C/man3/wcstok.3:17 build/C/man3/wcswidth.3:16 build/C/man3/wctob.3:17 build/C/man3/wcwidth.3:16 build/C/man3/wmemchr.3:17 build/C/man3/wmemcmp.3:16 build/C/man3/wmemcpy.3:17 build/C/man3/wmemmove.3:17 build/C/man3/wmemset.3:17
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: build/C/man3/btowc.3:19
msgid "btowc - convert single byte to wide character"
msgstr ""

#. type: SH
#: build/C/man3/btowc.3:19 build/C/man3/fgetws.3:21 build/C/man3/fputws.3:19 build/C/man3/fwide.3:19 build/C/man3/getwchar.3:20 build/C/man3/mbrlen.3:19 build/C/man3/mbrtowc.3:20 build/C/man3/mbsinit.3:19 build/C/man3/mbsnrtowcs.3:18 build/C/man3/mbsrtowcs.3:19 build/C/man3/putwchar.3:20 build/C/man3/ungetwc.3:19 build/C/man3/wcpcpy.3:18 build/C/man3/wcpncpy.3:19 build/C/man3/wcrtomb.3:19 build/C/man3/wcscasecmp.3:18 build/C/man3/wcscat.3:19 build/C/man3/wcschr.3:19 build/C/man3/wcscmp.3:19 build/C/man3/wcscpy.3:19 build/C/man3/wcscspn.3:19 build/C/man3/wcsdup.3:18 build/C/man3/wcslen.3:19 build/C/man3/wcsncasecmp.3:18 build/C/man3/wcsncat.3:19 build/C/man3/wcsncmp.3:19 build/C/man3/wcsncpy.3:19 build/C/man3/wcsnlen.3:18 build/C/man3/wcsnrtombs.3:18 build/C/man3/wcspbrk.3:19 build/C/man3/wcsrchr.3:19 build/C/man3/wcsrtombs.3:19 build/C/man3/wcsspn.3:20 build/C/man3/wcsstr.3:19 build/C/man3/wcstoimax.3:27 build/C/man3/wcstok.3:19 build/C/man3/wcswidth.3:18 build/C/man3/wctob.3:19 build/C/man3/wcwidth.3:18 build/C/man3/wmemchr.3:19 build/C/man3/wmemcmp.3:18 build/C/man3/wmemcpy.3:19 build/C/man3/wmemmove.3:19 build/C/man3/wmemset.3:19
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: build/C/man3/btowc.3:22 build/C/man3/fgetws.3:24 build/C/man3/fputws.3:22 build/C/man3/fwide.3:22 build/C/man3/getwchar.3:23 build/C/man3/mbrlen.3:22 build/C/man3/mbrtowc.3:23 build/C/man3/mbsinit.3:22 build/C/man3/mbsnrtowcs.3:21 build/C/man3/mbsrtowcs.3:22 build/C/man3/putwchar.3:23 build/C/man3/ungetwc.3:22 build/C/man3/wcpcpy.3:21 build/C/man3/wcpncpy.3:22 build/C/man3/wcrtomb.3:22 build/C/man3/wcscasecmp.3:21 build/C/man3/wcscat.3:22 build/C/man3/wcschr.3:22 build/C/man3/wcscmp.3:22 build/C/man3/wcscpy.3:22 build/C/man3/wcscspn.3:22 build/C/man3/wcsdup.3:21 build/C/man3/wcslen.3:22 build/C/man3/wcsncasecmp.3:21 build/C/man3/wcsncat.3:22 build/C/man3/wcsncmp.3:22 build/C/man3/wcsncpy.3:22 build/C/man3/wcsnlen.3:21 build/C/man3/wcsnrtombs.3:21 build/C/man3/wcspbrk.3:22 build/C/man3/wcsrchr.3:22 build/C/man3/wcsrtombs.3:22 build/C/man3/wcsspn.3:23 build/C/man3/wcsstr.3:22 build/C/man3/wcstok.3:22 build/C/man3/wctob.3:22 build/C/man3/wmemchr.3:22 build/C/man3/wmemcmp.3:21 build/C/man3/wmemcpy.3:22 build/C/man3/wmemmove.3:22 build/C/man3/wmemset.3:22
#, no-wrap
msgid "B<#include E<lt>wchar.hE<gt>>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/btowc.3:24
#, no-wrap
msgid "B<wint_t btowc(int >I<c>B<);>\n"
msgstr ""

#. type: SH
#: build/C/man3/btowc.3:25 build/C/man3/fgetws.3:27 build/C/man3/fputws.3:25 build/C/man3/fwide.3:39 build/C/man3/getwchar.3:26 build/C/man3/mbrlen.3:25 build/C/man3/mbrtowc.3:27 build/C/man3/mbsinit.3:25 build/C/man3/mbsnrtowcs.3:44 build/C/man3/mbsrtowcs.3:26 build/C/man3/putwchar.3:26 build/C/man3/ungetwc.3:25 build/C/man3/wcpcpy.3:43 build/C/man3/wcpncpy.3:44 build/C/man3/wcrtomb.3:25 build/C/man3/wcscasecmp.3:43 build/C/man3/wcscat.3:25 build/C/man3/wcschr.3:25 build/C/man3/wcscmp.3:25 build/C/man3/wcscpy.3:25 build/C/man3/wcscspn.3:25 build/C/man3/wcsdup.3:43 build/C/man3/wcslen.3:25 build/C/man3/wcsncasecmp.3:43 build/C/man3/wcsncat.3:25 build/C/man3/wcsncmp.3:25 build/C/man3/wcsncpy.3:25 build/C/man3/wcsnlen.3:43 build/C/man3/wcsnrtombs.3:44 build/C/man3/wcspbrk.3:25 build/C/man3/wcsrchr.3:25 build/C/man3/wcsrtombs.3:26 build/C/man3/wcsspn.3:26 build/C/man3/wcsstr.3:25 build/C/man3/wcstoimax.3:37 build/C/man3/wcstok.3:26 build/C/man3/wcswidth.3:25 build/C/man3/wctob.3:25 build/C/man3/wcwidth.3:25 build/C/man3/wmemchr.3:25 build/C/man3/wmemcmp.3:24 build/C/man3/wmemcpy.3:25 build/C/man3/wmemmove.3:25 build/C/man3/wmemset.3:25
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: build/C/man3/btowc.3:39
msgid ""
"The B<btowc>()  function converts I<c>, interpreted as a multibyte sequence "
"of length 1, starting in the initial shift state, to a wide character and "
"returns it.  If I<c> is B<EOF> or not a valid multibyte sequence of length "
"1, the B<btowc>()  function returns B<WEOF>."
msgstr ""

#. type: SH
#: build/C/man3/btowc.3:39 build/C/man3/fgetws.3:46 build/C/man3/fputws.3:37 build/C/man3/fwide.3:66 build/C/man3/getwchar.3:49 build/C/man3/mbrlen.3:81 build/C/man3/mbrtowc.3:152 build/C/man3/mbsinit.3:80 build/C/man3/mbsnrtowcs.3:157 build/C/man3/mbsrtowcs.3:113 build/C/man3/putwchar.3:52 build/C/man3/ungetwc.3:68 build/C/man3/wcpcpy.3:62 build/C/man3/wcpncpy.3:89 build/C/man3/wcrtomb.3:93 build/C/man3/wcscasecmp.3:58 build/C/man3/wcscat.3:44 build/C/man3/wcschr.3:37 build/C/man3/wcscmp.3:37 build/C/man3/wcscpy.3:45 build/C/man3/wcscspn.3:42 build/C/man3/wcsdup.3:59 build/C/man3/wcslen.3:36 build/C/man3/wcsncasecmp.3:60 build/C/man3/wcsncat.3:47 build/C/man3/wcsncmp.3:42 build/C/man3/wcsncpy.3:65 build/C/man3/wcsnlen.3:64 build/C/man3/wcsnrtombs.3:146 build/C/man3/wcspbrk.3:39 build/C/man3/wcsrchr.3:37 build/C/man3/wcsrtombs.3:112 build/C/man3/wcsspn.3:41 build/C/man3/wcsstr.3:36 build/C/man3/wcstok.3:74 build/C/man3/wcswidth.3:38 build/C/man3/wctob.3:42 build/C/man3/wcwidth.3:39 build/C/man3/wmemchr.3:38 build/C/man3/wmemcmp.3:38 build/C/man3/wmemcpy.3:48 build/C/man3/wmemmove.3:46 build/C/man3/wmemset.3:39
#, no-wrap
msgid "RETURN VALUE"
msgstr ""

#. type: Plain text
#: build/C/man3/btowc.3:49
msgid ""
"The B<btowc>()  function returns the wide character converted from the "
"single byte I<c>.  If I<c> is B<EOF> or not a valid multibyte sequence of "
"length 1, it returns B<WEOF>."
msgstr ""

#. type: SH
#: build/C/man3/btowc.3:49 build/C/man3/fgetws.3:52 build/C/man3/fputws.3:43 build/C/man3/getwchar.3:55 build/C/man3/mbrlen.3:104 build/C/man3/mbrtowc.3:175 build/C/man3/mbsinit.3:88 build/C/man3/mbsnrtowcs.3:170 build/C/man3/mbsrtowcs.3:126 build/C/man3/putwchar.3:60 build/C/man3/ungetwc.3:77 build/C/man3/wcpcpy.3:67 build/C/man3/wcpncpy.3:93 build/C/man3/wcrtomb.3:109 build/C/man3/wcscasecmp.3:83 build/C/man3/wcscat.3:48 build/C/man3/wcschr.3:47 build/C/man3/wcscmp.3:59 build/C/man3/wcscpy.3:49 build/C/man3/wcscspn.3:61 build/C/man3/wcsdup.3:70 build/C/man3/wcslen.3:42 build/C/man3/wcsncasecmp.3:88 build/C/man3/wcsncat.3:51 build/C/man3/wcsncmp.3:73 build/C/man3/wcsncpy.3:69 build/C/man3/wcsnlen.3:82 build/C/man3/wcsnrtombs.3:160 build/C/man3/wcspbrk.3:49 build/C/man3/wcsrchr.3:47 build/C/man3/wcsrtombs.3:126 build/C/man3/wcsspn.3:60 build/C/man3/wcsstr.3:56 build/C/man3/wcstoimax.3:47 build/C/man3/wcstok.3:79 build/C/man3/wcswidth.3:47 build/C/man3/wctob.3:50 build/C/man3/wcwidth.3:45 build/C/man3/wmemchr.3:51 build/C/man3/wmemcmp.3:70 build/C/man3/wmemcpy.3:52 build/C/man3/wmemmove.3:50 build/C/man3/wmemset.3:43
#, no-wrap
msgid "ATTRIBUTES"
msgstr ""

#. type: Plain text
#: build/C/man3/btowc.3:52 build/C/man3/fgetws.3:55 build/C/man3/fputws.3:46 build/C/man3/getwchar.3:58 build/C/man3/mbrlen.3:107 build/C/man3/mbrtowc.3:178 build/C/man3/mbsinit.3:91 build/C/man3/mbsnrtowcs.3:173 build/C/man3/mbsrtowcs.3:129 build/C/man3/putwchar.3:63 build/C/man3/ungetwc.3:80 build/C/man3/wcpcpy.3:70 build/C/man3/wcpncpy.3:96 build/C/man3/wcrtomb.3:112 build/C/man3/wcscasecmp.3:86 build/C/man3/wcscat.3:51 build/C/man3/wcschr.3:50 build/C/man3/wcscmp.3:62 build/C/man3/wcscpy.3:52 build/C/man3/wcscspn.3:64 build/C/man3/wcsdup.3:73 build/C/man3/wcslen.3:45 build/C/man3/wcsncasecmp.3:91 build/C/man3/wcsncat.3:54 build/C/man3/wcsncmp.3:76 build/C/man3/wcsncpy.3:72 build/C/man3/wcsnlen.3:85 build/C/man3/wcsnrtombs.3:163 build/C/man3/wcspbrk.3:52 build/C/man3/wcsrchr.3:50 build/C/man3/wcsrtombs.3:129 build/C/man3/wcsspn.3:63 build/C/man3/wcsstr.3:59 build/C/man3/wcstoimax.3:50 build/C/man3/wcstok.3:82 build/C/man3/wcswidth.3:50 build/C/man3/wctob.3:53 build/C/man3/wcwidth.3:48 build/C/man3/wmemchr.3:54 build/C/man3/wmemcmp.3:73 build/C/man3/wmemcpy.3:55 build/C/man3/wmemmove.3:53 build/C/man3/wmemset.3:46
msgid "For an explanation of the terms used in this section, see B<attributes>(7)."
msgstr ""

#. type: tbl table
#: build/C/man3/btowc.3:56 build/C/man3/fgetws.3:59 build/C/man3/fputws.3:50 build/C/man3/getwchar.3:62 build/C/man3/mbrlen.3:111 build/C/man3/mbrtowc.3:182 build/C/man3/mbsinit.3:95 build/C/man3/mbsnrtowcs.3:177 build/C/man3/mbsrtowcs.3:133 build/C/man3/putwchar.3:67 build/C/man3/ungetwc.3:84 build/C/man3/wcpcpy.3:74 build/C/man3/wcpncpy.3:100 build/C/man3/wcrtomb.3:116 build/C/man3/wcscasecmp.3:90 build/C/man3/wcscat.3:55 build/C/man3/wcschr.3:54 build/C/man3/wcscmp.3:66 build/C/man3/wcscpy.3:56 build/C/man3/wcscspn.3:68 build/C/man3/wcsdup.3:77 build/C/man3/wcslen.3:49 build/C/man3/wcsncasecmp.3:95 build/C/man3/wcsncat.3:58 build/C/man3/wcsncmp.3:80 build/C/man3/wcsncpy.3:76 build/C/man3/wcsnlen.3:89 build/C/man3/wcsnrtombs.3:167 build/C/man3/wcspbrk.3:56 build/C/man3/wcsrchr.3:54 build/C/man3/wcsrtombs.3:133 build/C/man3/wcsspn.3:67 build/C/man3/wcsstr.3:63 build/C/man3/wcstoimax.3:54 build/C/man3/wcstok.3:86 build/C/man3/wcswidth.3:54 build/C/man3/wctob.3:57 build/C/man3/wcwidth.3:52 build/C/man3/wmemchr.3:58 build/C/man3/wmemcmp.3:77 build/C/man3/wmemcpy.3:59 build/C/man3/wmemmove.3:57 build/C/man3/wmemset.3:50
#, no-wrap
msgid "Interface"
msgstr ""

#. type: tbl table
#: build/C/man3/btowc.3:56 build/C/man3/fgetws.3:59 build/C/man3/fputws.3:50 build/C/man3/getwchar.3:62 build/C/man3/mbrlen.3:111 build/C/man3/mbrtowc.3:182 build/C/man3/mbsinit.3:95 build/C/man3/mbsnrtowcs.3:177 build/C/man3/mbsrtowcs.3:133 build/C/man3/putwchar.3:67 build/C/man3/ungetwc.3:84 build/C/man3/wcpcpy.3:74 build/C/man3/wcpncpy.3:100 build/C/man3/wcrtomb.3:116 build/C/man3/wcscasecmp.3:90 build/C/man3/wcscat.3:55 build/C/man3/wcschr.3:54 build/C/man3/wcscmp.3:66 build/C/man3/wcscpy.3:56 build/C/man3/wcscspn.3:68 build/C/man3/wcsdup.3:77 build/C/man3/wcslen.3:49 build/C/man3/wcsncasecmp.3:95 build/C/man3/wcsncat.3:58 build/C/man3/wcsncmp.3:80 build/C/man3/wcsncpy.3:76 build/C/man3/wcsnlen.3:89 build/C/man3/wcsnrtombs.3:167 build/C/man3/wcspbrk.3:56 build/C/man3/wcsrchr.3:54 build/C/man3/wcsrtombs.3:133 build/C/man3/wcsspn.3:67 build/C/man3/wcsstr.3:63 build/C/man3/wcstoimax.3:54 build/C/man3/wcstok.3:86 build/C/man3/wcswidth.3:54 build/C/man3/wctob.3:57 build/C/man3/wcwidth.3:52 build/C/man3/wmemchr.3:58 build/C/man3/wmemcmp.3:77 build/C/man3/wmemcpy.3:59 build/C/man3/wmemmove.3:57 build/C/man3/wmemset.3:50
#, no-wrap
msgid "Attribute"
msgstr ""

#. type: tbl table
#: build/C/man3/btowc.3:56 build/C/man3/fgetws.3:59 build/C/man3/fputws.3:50 build/C/man3/getwchar.3:62 build/C/man3/mbrlen.3:111 build/C/man3/mbrtowc.3:182 build/C/man3/mbsinit.3:95 build/C/man3/mbsnrtowcs.3:177 build/C/man3/mbsrtowcs.3:133 build/C/man3/putwchar.3:67 build/C/man3/ungetwc.3:84 build/C/man3/wcpcpy.3:74 build/C/man3/wcpncpy.3:100 build/C/man3/wcrtomb.3:116 build/C/man3/wcscasecmp.3:90 build/C/man3/wcscat.3:55 build/C/man3/wcschr.3:54 build/C/man3/wcscmp.3:66 build/C/man3/wcscpy.3:56 build/C/man3/wcscspn.3:68 build/C/man3/wcsdup.3:77 build/C/man3/wcslen.3:49 build/C/man3/wcsncasecmp.3:95 build/C/man3/wcsncat.3:58 build/C/man3/wcsncmp.3:80 build/C/man3/wcsncpy.3:76 build/C/man3/wcsnlen.3:89 build/C/man3/wcsnrtombs.3:167 build/C/man3/wcspbrk.3:56 build/C/man3/wcsrchr.3:54 build/C/man3/wcsrtombs.3:133 build/C/man3/wcsspn.3:67 build/C/man3/wcsstr.3:63 build/C/man3/wcstoimax.3:54 build/C/man3/wcstok.3:86 build/C/man3/wcswidth.3:54 build/C/man3/wctob.3:57 build/C/man3/wcwidth.3:52 build/C/man3/wmemchr.3:58 build/C/man3/wmemcmp.3:77 build/C/man3/wmemcpy.3:59 build/C/man3/wmemmove.3:57 build/C/man3/wmemset.3:50
#, no-wrap
msgid "Value"
msgstr ""

#. type: tbl table
#: build/C/man3/btowc.3:59
#, no-wrap
msgid "B<btowc>()"
msgstr ""

#. type: tbl table
#: build/C/man3/btowc.3:59 build/C/man3/fgetws.3:62 build/C/man3/fputws.3:53 build/C/man3/getwchar.3:65 build/C/man3/mbrlen.3:114 build/C/man3/mbrtowc.3:185 build/C/man3/mbsinit.3:98 build/C/man3/mbsnrtowcs.3:180 build/C/man3/mbsrtowcs.3:136 build/C/man3/putwchar.3:70 build/C/man3/ungetwc.3:87 build/C/man3/wcpcpy.3:77 build/C/man3/wcpncpy.3:103 build/C/man3/wcrtomb.3:119 build/C/man3/wcscasecmp.3:93 build/C/man3/wcscat.3:58 build/C/man3/wcschr.3:57 build/C/man3/wcscmp.3:69 build/C/man3/wcscpy.3:59 build/C/man3/wcscspn.3:71 build/C/man3/wcsdup.3:80 build/C/man3/wcslen.3:52 build/C/man3/wcsncasecmp.3:98 build/C/man3/wcsncat.3:61 build/C/man3/wcsncmp.3:83 build/C/man3/wcsncpy.3:79 build/C/man3/wcsnlen.3:92 build/C/man3/wcsnrtombs.3:170 build/C/man3/wcspbrk.3:59 build/C/man3/wcsrchr.3:57 build/C/man3/wcsrtombs.3:136 build/C/man3/wcsspn.3:70 build/C/man3/wcsstr.3:66 build/C/man3/wcstoimax.3:58 build/C/man3/wcstok.3:89 build/C/man3/wcswidth.3:57 build/C/man3/wctob.3:60 build/C/man3/wcwidth.3:55 build/C/man3/wmemchr.3:61 build/C/man3/wmemcmp.3:80 build/C/man3/wmemcpy.3:62 build/C/man3/wmemmove.3:60 build/C/man3/wmemset.3:53
#, no-wrap
msgid "Thread safety"
msgstr ""

#. type: tbl table
#: build/C/man3/btowc.3:59 build/C/man3/fgetws.3:62 build/C/man3/fputws.3:53 build/C/man3/getwchar.3:65 build/C/man3/mbsinit.3:98 build/C/man3/putwchar.3:70 build/C/man3/ungetwc.3:87 build/C/man3/wcpcpy.3:77 build/C/man3/wcpncpy.3:103 build/C/man3/wcscat.3:58 build/C/man3/wcschr.3:57 build/C/man3/wcscmp.3:69 build/C/man3/wcscpy.3:59 build/C/man3/wcscspn.3:71 build/C/man3/wcsdup.3:80 build/C/man3/wcslen.3:52 build/C/man3/wcsncat.3:61 build/C/man3/wcsncmp.3:83 build/C/man3/wcsncpy.3:79 build/C/man3/wcsnlen.3:92 build/C/man3/wcspbrk.3:59 build/C/man3/wcsrchr.3:57 build/C/man3/wcsspn.3:70 build/C/man3/wcsstr.3:66 build/C/man3/wcstok.3:89 build/C/man3/wctob.3:60 build/C/man3/wmemchr.3:61 build/C/man3/wmemcmp.3:80 build/C/man3/wmemcpy.3:62 build/C/man3/wmemmove.3:60 build/C/man3/wmemset.3:53
#, no-wrap
msgid "MT-Safe"
msgstr ""

#. type: SH
#: build/C/man3/btowc.3:61 build/C/man3/fgetws.3:64 build/C/man3/fputws.3:56 build/C/man3/fwide.3:74 build/C/man3/getwchar.3:68 build/C/man3/mbrlen.3:116 build/C/man3/mbrtowc.3:187 build/C/man3/mbsinit.3:100 build/C/man3/mbsnrtowcs.3:183 build/C/man3/mbsrtowcs.3:139 build/C/man3/putwchar.3:72 build/C/man3/ungetwc.3:89 build/C/man3/wcpcpy.3:79 build/C/man3/wcpncpy.3:105 build/C/man3/wcrtomb.3:122 build/C/man3/wcscasecmp.3:95 build/C/man3/wcscat.3:60 build/C/man3/wcschr.3:59 build/C/man3/wcscmp.3:71 build/C/man3/wcscpy.3:61 build/C/man3/wcscspn.3:73 build/C/man3/wcsdup.3:83 build/C/man3/wcslen.3:54 build/C/man3/wcsncasecmp.3:100 build/C/man3/wcsncat.3:63 build/C/man3/wcsncmp.3:85 build/C/man3/wcsncpy.3:81 build/C/man3/wcsnlen.3:94 build/C/man3/wcsnrtombs.3:173 build/C/man3/wcspbrk.3:61 build/C/man3/wcsrchr.3:59 build/C/man3/wcsrtombs.3:139 build/C/man3/wcsspn.3:72 build/C/man3/wcsstr.3:68 build/C/man3/wcstoimax.3:60 build/C/man3/wcstok.3:91 build/C/man3/wcswidth.3:59 build/C/man3/wctob.3:63 build/C/man3/wcwidth.3:57 build/C/man3/wmemchr.3:63 build/C/man3/wmemcmp.3:82 build/C/man3/wmemcpy.3:64 build/C/man3/wmemmove.3:62 build/C/man3/wmemset.3:55
#, no-wrap
msgid "CONFORMING TO"
msgstr ""

#. type: Plain text
#: build/C/man3/btowc.3:63 build/C/man3/fgetws.3:66 build/C/man3/fputws.3:58 build/C/man3/fwide.3:76 build/C/man3/getwchar.3:70 build/C/man3/mbrlen.3:118 build/C/man3/mbrtowc.3:189 build/C/man3/mbsinit.3:102 build/C/man3/mbsrtowcs.3:141 build/C/man3/putwchar.3:74 build/C/man3/ungetwc.3:91 build/C/man3/wcrtomb.3:124 build/C/man3/wcscat.3:62 build/C/man3/wcschr.3:61 build/C/man3/wcscmp.3:73 build/C/man3/wcscpy.3:63 build/C/man3/wcscspn.3:75 build/C/man3/wcslen.3:56 build/C/man3/wcsncat.3:65 build/C/man3/wcsncmp.3:87 build/C/man3/wcsncpy.3:83 build/C/man3/wcspbrk.3:63 build/C/man3/wcsrchr.3:61 build/C/man3/wcsrtombs.3:141 build/C/man3/wcsspn.3:74 build/C/man3/wcsstr.3:70 build/C/man3/wcstoimax.3:62 build/C/man3/wcstok.3:93 build/C/man3/wctob.3:65 build/C/man3/wmemchr.3:65 build/C/man3/wmemcmp.3:84 build/C/man3/wmemcpy.3:66 build/C/man3/wmemmove.3:64 build/C/man3/wmemset.3:57
msgid "POSIX.1-2001, POSIX.1-2008, C99."
msgstr ""

#. type: SH
#: build/C/man3/btowc.3:63 build/C/man3/fgetws.3:66 build/C/man3/fputws.3:58 build/C/man3/fwide.3:76 build/C/man3/getwchar.3:70 build/C/man3/mbrlen.3:118 build/C/man3/mbrtowc.3:189 build/C/man3/mbsinit.3:102 build/C/man3/mbsnrtowcs.3:185 build/C/man3/mbsrtowcs.3:141 build/C/man3/putwchar.3:74 build/C/man3/ungetwc.3:91 build/C/man3/wcrtomb.3:124 build/C/man3/wcscasecmp.3:99 build/C/man3/wcsncasecmp.3:104 build/C/man3/wcsnrtombs.3:175 build/C/man3/wcsrtombs.3:141 build/C/man3/wcstok.3:93 build/C/man3/wcswidth.3:61 build/C/man3/wctob.3:65 build/C/man3/wcwidth.3:65
#, no-wrap
msgid "NOTES"
msgstr ""

#. type: Plain text
#: build/C/man3/btowc.3:70
msgid ""
"The behavior of B<btowc>()  depends on the B<LC_CTYPE> category of the "
"current locale."
msgstr ""

#. type: Plain text
#: build/C/man3/btowc.3:80
msgid ""
"This function should never be used.  It does not work for encodings which "
"have state, and unnecessarily treats single bytes differently from multibyte "
"sequences.  Use either B<mbtowc>(3)  or the thread-safe B<mbrtowc>(3)  "
"instead."
msgstr ""

#. type: SH
#: build/C/man3/btowc.3:80 build/C/man3/fgetws.3:85 build/C/man3/fputws.3:73 build/C/man3/fwide.3:93 build/C/man3/getwchar.3:83 build/C/man3/mbrlen.3:125 build/C/man3/mbrtowc.3:196 build/C/man3/mbsinit.3:109 build/C/man3/mbsnrtowcs.3:196 build/C/man3/mbsrtowcs.3:152 build/C/man3/putwchar.3:87 build/C/man3/ungetwc.3:98 build/C/man3/wcpcpy.3:81 build/C/man3/wcpncpy.3:107 build/C/man3/wcrtomb.3:135 build/C/man3/wcscasecmp.3:106 build/C/man3/wcscat.3:62 build/C/man3/wcschr.3:61 build/C/man3/wcscmp.3:73 build/C/man3/wcscpy.3:63 build/C/man3/wcscspn.3:75 build/C/man3/wcsdup.3:88 build/C/man3/wcslen.3:56 build/C/man3/wcsncasecmp.3:111 build/C/man3/wcsncat.3:65 build/C/man3/wcsncmp.3:87 build/C/man3/wcsncpy.3:83 build/C/man3/wcsnlen.3:96 build/C/man3/wcsnrtombs.3:186 build/C/man3/wcspbrk.3:63 build/C/man3/wcsrchr.3:61 build/C/man3/wcsrtombs.3:152 build/C/man3/wcsspn.3:74 build/C/man3/wcsstr.3:70 build/C/man3/wcstoimax.3:62 build/C/man3/wcstok.3:111 build/C/man3/wcswidth.3:68 build/C/man3/wctob.3:81 build/C/man3/wcwidth.3:72 build/C/man3/wmemchr.3:65 build/C/man3/wmemcmp.3:84 build/C/man3/wmemcpy.3:66 build/C/man3/wmemmove.3:64 build/C/man3/wmemset.3:57
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: build/C/man3/btowc.3:84
msgid "B<mbrtowc>(3), B<mbtowc>(3), B<wctob>(3)"
msgstr ""

#. type: SH
#: build/C/man3/btowc.3:84 build/C/man3/fgetws.3:88 build/C/man3/fputws.3:76 build/C/man3/fwide.3:96 build/C/man3/getwchar.3:86 build/C/man3/mbrlen.3:127 build/C/man3/mbrtowc.3:199 build/C/man3/mbsinit.3:115 build/C/man3/mbsnrtowcs.3:201 build/C/man3/mbsrtowcs.3:158 build/C/man3/putwchar.3:90 build/C/man3/ungetwc.3:100 build/C/man3/wcpcpy.3:84 build/C/man3/wcpncpy.3:110 build/C/man3/wcrtomb.3:138 build/C/man3/wcscasecmp.3:109 build/C/man3/wcscat.3:67 build/C/man3/wcschr.3:67 build/C/man3/wcscmp.3:77 build/C/man3/wcscpy.3:69 build/C/man3/wcscspn.3:79 build/C/man3/wcsdup.3:91 build/C/man3/wcslen.3:58 build/C/man3/wcsncasecmp.3:114 build/C/man3/wcsncat.3:68 build/C/man3/wcsncmp.3:90 build/C/man3/wcsncpy.3:85 build/C/man3/wcsnlen.3:99 build/C/man3/wcsnrtombs.3:190 build/C/man3/wcspbrk.3:67 build/C/man3/wcsrchr.3:64 build/C/man3/wcsrtombs.3:158 build/C/man3/wcsspn.3:77 build/C/man3/wcsstr.3:73 build/C/man3/wcstoimax.3:70 build/C/man3/wcstok.3:114 build/C/man3/wcswidth.3:71 build/C/man3/wctob.3:85 build/C/man3/wcwidth.3:75 build/C/man3/wmemchr.3:68 build/C/man3/wmemcmp.3:87 build/C/man3/wmemcpy.3:71 build/C/man3/wmemmove.3:67 build/C/man3/wmemset.3:59
#, no-wrap
msgid "COLOPHON"
msgstr ""

#. type: Plain text
#: build/C/man3/btowc.3:92 build/C/man3/fgetws.3:96 build/C/man3/fputws.3:84 build/C/man3/fwide.3:104 build/C/man3/getwchar.3:94 build/C/man3/mbrlen.3:135 build/C/man3/mbrtowc.3:207 build/C/man3/mbsinit.3:123 build/C/man3/mbsnrtowcs.3:209 build/C/man3/mbsrtowcs.3:166 build/C/man3/putwchar.3:98 build/C/man3/ungetwc.3:108 build/C/man3/wcpcpy.3:92 build/C/man3/wcpncpy.3:118 build/C/man3/wcrtomb.3:146 build/C/man3/wcscasecmp.3:117 build/C/man3/wcscat.3:75 build/C/man3/wcschr.3:75 build/C/man3/wcscmp.3:85 build/C/man3/wcscpy.3:77 build/C/man3/wcscspn.3:87 build/C/man3/wcsdup.3:99 build/C/man3/wcslen.3:66 build/C/man3/wcsncasecmp.3:122 build/C/man3/wcsncat.3:76 build/C/man3/wcsncmp.3:98 build/C/man3/wcsncpy.3:93 build/C/man3/wcsnlen.3:107 build/C/man3/wcsnrtombs.3:198 build/C/man3/wcspbrk.3:75 build/C/man3/wcsrchr.3:72 build/C/man3/wcsrtombs.3:166 build/C/man3/wcsspn.3:85 build/C/man3/wcsstr.3:81 build/C/man3/wcstoimax.3:78 build/C/man3/wcstok.3:122 build/C/man3/wcswidth.3:79 build/C/man3/wctob.3:93 build/C/man3/wcwidth.3:83 build/C/man3/wmemchr.3:76 build/C/man3/wmemcmp.3:95 build/C/man3/wmemcpy.3:79 build/C/man3/wmemmove.3:75 build/C/man3/wmemset.3:67
msgid ""
"This page is part of release 5.10 of the Linux I<man-pages> project.  A "
"description of the project, information about reporting bugs, and the latest "
"version of this page, can be found at "
"\\%https://www.kernel.org/doc/man-pages/."
msgstr ""

#. type: TH
#: build/C/man3/fgetws.3:18
#, no-wrap
msgid "FGETWS"
msgstr ""

#. type: TH
#: build/C/man3/fgetws.3:18 build/C/man3/fputws.3:16 build/C/man3/mbrtowc.3:17 build/C/man3/mbsrtowcs.3:16 build/C/man3/wcpcpy.3:15 build/C/man3/wcpncpy.3:15 build/C/man3/wcrtomb.3:16 build/C/man3/wcscat.3:16 build/C/man3/wcscpy.3:16 build/C/man3/wcslen.3:16 build/C/man3/wcsncat.3:16 build/C/man3/wcsncmp.3:16 build/C/man3/wcsncpy.3:16 build/C/man3/wcsnlen.3:15 build/C/man3/wcsnrtombs.3:15 build/C/man3/wcsrtombs.3:16 build/C/man3/wcsstr.3:16 build/C/man3/wcwidth.3:15
#, no-wrap
msgid "2019-03-06"
msgstr ""

#. type: Plain text
#: build/C/man3/fgetws.3:21
msgid "fgetws - read a wide-character string from a FILE stream"
msgstr ""

#. type: Plain text
#: build/C/man3/fgetws.3:26
#, no-wrap
msgid "B<wchar_t *fgetws(wchar_t *>I<ws>B<, int >I<n>B<, FILE *>I<stream>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/fgetws.3:40
msgid ""
"The B<fgetws>()  function is the wide-character equivalent of the "
"B<fgets>(3)  function.  It reads a string of at most I<n-1> wide characters "
"into the wide-character array pointed to by I<ws>, and adds a terminating "
"null wide character (L\\(aq\\e0\\(aq).  It stops reading wide characters "
"after it has encountered and stored a newline wide character.  It also stops "
"when end of stream is reached."
msgstr ""

#. type: Plain text
#: build/C/man3/fgetws.3:43
msgid ""
"The programmer must ensure that there is room for at least I<n> wide "
"characters at I<ws>."
msgstr ""

#. type: Plain text
#: build/C/man3/fgetws.3:46 build/C/man3/fputws.3:37 build/C/man3/getwchar.3:49 build/C/man3/putwchar.3:52
msgid "For a nonlocking counterpart, see B<unlocked_stdio>(3)."
msgstr ""

#. type: Plain text
#: build/C/man3/fgetws.3:52
msgid ""
"The B<fgetws>()  function, if successful, returns I<ws>.  If end of stream "
"was already reached or if an error occurred, it returns NULL."
msgstr ""

#. type: tbl table
#: build/C/man3/fgetws.3:62
#, no-wrap
msgid "B<fgetws>()"
msgstr ""

#. type: Plain text
#: build/C/man3/fgetws.3:73
msgid ""
"The behavior of B<fgetws>()  depends on the B<LC_CTYPE> category of the "
"current locale."
msgstr ""

#. type: Plain text
#: build/C/man3/fgetws.3:81
msgid ""
"In the absence of additional information passed to the B<fopen>(3)  call, it "
"is reasonable to expect that B<fgetws>()  will actually read a multibyte "
"string from the stream and then convert it to a wide-character string."
msgstr ""

#. type: Plain text
#: build/C/man3/fgetws.3:85
msgid ""
"This function is unreliable, because it does not permit to deal properly "
"with null wide characters that may be present in the input."
msgstr ""

#. type: Plain text
#: build/C/man3/fgetws.3:88 build/C/man3/getwchar.3:86
msgid "B<fgetwc>(3), B<unlocked_stdio>(3)"
msgstr ""

#. type: TH
#: build/C/man3/fputws.3:16
#, no-wrap
msgid "FPUTWS"
msgstr ""

#. type: Plain text
#: build/C/man3/fputws.3:19
msgid "fputws - write a wide-character string to a FILE stream"
msgstr ""

#. type: Plain text
#: build/C/man3/fputws.3:24
#, no-wrap
msgid "B<int fputws(const wchar_t *>I<ws>B<, FILE *>I<stream>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/fputws.3:34
msgid ""
"The B<fputws>()  function is the wide-character equivalent of the "
"B<fputs>(3)  function.  It writes the wide-character string starting at "
"I<ws>, up to but not including the terminating null wide character "
"(L\\(aq\\e0\\(aq), to I<stream>."
msgstr ""

#. type: Plain text
#: build/C/man3/fputws.3:43
msgid ""
"The B<fputws>()  function returns a nonnegative integer if the operation was "
"successful, or -1 to indicate an error."
msgstr ""

#. type: tbl table
#: build/C/man3/fputws.3:53
#, no-wrap
msgid "B<fputws>()"
msgstr ""

#. type: Plain text
#: build/C/man3/fputws.3:65
msgid ""
"The behavior of B<fputws>()  depends on the B<LC_CTYPE> category of the "
"current locale."
msgstr ""

#. type: Plain text
#: build/C/man3/fputws.3:73
msgid ""
"In the absence of additional information passed to the B<fopen>(3)  call, it "
"is reasonable to expect that B<fputws>()  will actually write the multibyte "
"string corresponding to the wide-character string I<ws>."
msgstr ""

#. type: Plain text
#: build/C/man3/fputws.3:76 build/C/man3/putwchar.3:90
msgid "B<fputwc>(3), B<unlocked_stdio>(3)"
msgstr ""

#. type: TH
#: build/C/man3/fwide.3:16
#, no-wrap
msgid "FWIDE"
msgstr ""

#. type: TH
#: build/C/man3/fwide.3:16 build/C/man3/wcscasecmp.3:15 build/C/man3/wcsncasecmp.3:15
#, no-wrap
msgid "2016-03-15"
msgstr ""

#. type: Plain text
#: build/C/man3/fwide.3:19
msgid "fwide - set and determine the orientation of a FILE stream"
msgstr ""

#. type: Plain text
#: build/C/man3/fwide.3:24
#, no-wrap
msgid "B<int fwide(FILE *>I<stream>B<, int >I<mode>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/fwide.3:29 build/C/man3/mbsnrtowcs.3:29 build/C/man3/wcpcpy.3:28 build/C/man3/wcpncpy.3:29 build/C/man3/wcscasecmp.3:28 build/C/man3/wcsdup.3:28 build/C/man3/wcsncasecmp.3:28 build/C/man3/wcsnlen.3:28 build/C/man3/wcsnrtombs.3:29
msgid "Feature Test Macro Requirements for glibc (see B<feature_test_macros>(7)):"
msgstr ""

#. type: Plain text
#: build/C/man3/fwide.3:33
msgid "B<fwide>():"
msgstr ""

#. type: Plain text
#: build/C/man3/fwide.3:35
msgid "_XOPEN_SOURCE\\ E<gt>=\\ 500 || _ISOC99_SOURCE ||"
msgstr ""

#. type: Plain text
#: build/C/man3/fwide.3:37
msgid "_POSIX_C_SOURCE\\ E<gt>=\\ 200112L"
msgstr ""

#. type: Plain text
#: build/C/man3/fwide.3:54
msgid ""
"When I<mode> is zero, the B<fwide>()  function determines the current "
"orientation of I<stream>.  It returns a positive value if I<stream> is "
"wide-character oriented, that is, if wide-character I/O is permitted but "
"char I/O is disallowed.  It returns a negative value if I<stream> is byte "
"oriented\\(emthat is, if char I/O is permitted but wide-character I/O is "
"disallowed.  It returns zero if I<stream> has no orientation yet; in this "
"case the next I/O operation might change the orientation (to byte oriented "
"if it is a char I/O operation, or to wide-character oriented if it is a "
"wide-character I/O operation)."
msgstr ""

#. type: Plain text
#: build/C/man3/fwide.3:57
msgid ""
"Once a stream has an orientation, it cannot be changed and persists until "
"the stream is closed."
msgstr ""

#. type: Plain text
#: build/C/man3/fwide.3:66
msgid ""
"When I<mode> is nonzero, the B<fwide>()  function first attempts to set "
"I<stream>'s orientation (to wide-character oriented if I<mode> is greater "
"than 0, or to byte oriented if I<mode> is less than 0).  It then returns a "
"value denoting the current orientation, as above."
msgstr ""

#. type: Plain text
#: build/C/man3/fwide.3:74
msgid ""
"The B<fwide>()  function returns the stream's orientation, after possibly "
"changing it.  A positive return value means wide-character oriented.  A "
"negative return value means byte oriented.  A return value of zero means "
"undecided."
msgstr ""

#. type: Plain text
#: build/C/man3/fwide.3:84
msgid ""
"Wide-character output to a byte oriented stream can be performed through the "
"B<fprintf>(3)  function with the B<%lc> and B<%ls> directives."
msgstr ""

#. type: Plain text
#: build/C/man3/fwide.3:93
msgid ""
"Char oriented output to a wide-character oriented stream can be performed "
"through the B<fwprintf>(3)  function with the B<%c> and B<%s> directives."
msgstr ""

#. type: Plain text
#: build/C/man3/fwide.3:96
msgid "B<fprintf>(3), B<fwprintf>(3)"
msgstr ""

#. type: TH
#: build/C/man3/getwchar.3:17
#, no-wrap
msgid "GETWCHAR"
msgstr ""

#. type: TH
#: build/C/man3/getwchar.3:17 build/C/man3/wcsdup.3:15 build/C/man3/wctob.3:16
#, no-wrap
msgid "2017-09-15"
msgstr ""

#. type: Plain text
#: build/C/man3/getwchar.3:20
msgid "getwchar - read a wide character from standard input"
msgstr ""

#. type: Plain text
#: build/C/man3/getwchar.3:25
#, no-wrap
msgid "B<wint_t getwchar(void);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/getwchar.3:46
msgid ""
"The B<getwchar>()  function is the wide-character equivalent of the "
"B<getchar>(3)  function.  It reads a wide character from I<stdin> and "
"returns it.  If the end of stream is reached, or if I<ferror(stdin)> becomes "
"true, it returns B<WEOF>.  If a wide-character conversion error occurs, it "
"sets I<errno> to B<EILSEQ> and returns B<WEOF>."
msgstr ""

#. type: Plain text
#: build/C/man3/getwchar.3:55
msgid ""
"The B<getwchar>()  function returns the next wide-character from standard "
"input, or B<WEOF>."
msgstr ""

#. type: tbl table
#: build/C/man3/getwchar.3:65
#, no-wrap
msgid "B<getwchar>()"
msgstr ""

#. type: Plain text
#: build/C/man3/getwchar.3:77
msgid ""
"The behavior of B<getwchar>()  depends on the B<LC_CTYPE> category of the "
"current locale."
msgstr ""

#. type: Plain text
#: build/C/man3/getwchar.3:83
msgid ""
"It is reasonable to expect that B<getwchar>()  will actually read a "
"multibyte sequence from standard input and then convert it to a wide "
"character."
msgstr ""

#. type: TH
#: build/C/man3/mbrlen.3:16
#, no-wrap
msgid "MBRLEN"
msgstr ""

#. type: Plain text
#: build/C/man3/mbrlen.3:19
msgid "mbrlen - determine number of bytes in next multibyte character"
msgstr ""

#. type: Plain text
#: build/C/man3/mbrlen.3:24
#, no-wrap
msgid ""
"B<size_t mbrlen(const char *>I<s>B<, size_t >I<n>B<, mbstate_t "
"*>I<ps>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/mbrlen.3:43
msgid ""
"The B<mbrlen>()  function inspects at most I<n> bytes of the multibyte "
"string starting at I<s> and extracts the next complete multibyte character.  "
"It updates the shift state I<*ps>.  If the multibyte character is not the "
"null wide character, it returns the number of bytes that were consumed from "
"I<s>.  If the multibyte character is the null wide character, it resets the "
"shift state I<*ps> to the initial state and returns 0."
msgstr ""

#. type: Plain text
#: build/C/man3/mbrlen.3:59
msgid ""
"If the I<n> bytes starting at I<s> do not contain a complete multibyte "
"character, B<mbrlen>()  returns I<(size_t)\\ -2>.  This can happen even if "
"I<n> E<gt>= I<MB_CUR_MAX>, if the multibyte string contains redundant shift "
"sequences."
msgstr ""

#. type: Plain text
#: build/C/man3/mbrlen.3:75
msgid ""
"If the multibyte string starting at I<s> contains an invalid multibyte "
"sequence before the next complete character, B<mbrlen>()  returns "
"I<(size_t)\\ -1> and sets I<errno> to B<EILSEQ>.  In this case, the effects "
"on I<*ps> are undefined."
msgstr ""

#. type: Plain text
#: build/C/man3/mbrlen.3:81
msgid ""
"If I<ps> is NULL, a static anonymous state known only to the B<mbrlen>()  "
"function is used instead."
msgstr ""

#. type: Plain text
#: build/C/man3/mbrlen.3:104
msgid ""
"The B<mbrlen>()  function returns the number of bytes parsed from the "
"multibyte sequence starting at I<s>, if a non-null wide character was "
"recognized.  It returns 0, if a null wide character was recognized.  It "
"returns I<(size_t)\\ -1> and sets I<errno> to B<EILSEQ>, if an invalid "
"multibyte sequence was encountered.  It returns I<(size_t)\\ -2> if it "
"couldn't parse a complete multibyte character, meaning that I<n> should be "
"increased."
msgstr ""

#. type: tbl table
#: build/C/man3/mbrlen.3:114
#, no-wrap
msgid "B<mbrlen>()"
msgstr ""

#. type: tbl table
#: build/C/man3/mbrlen.3:114
#, no-wrap
msgid "MT-Unsafe race:mbrlen/!ps"
msgstr ""

#. type: Plain text
#: build/C/man3/mbrlen.3:125
msgid ""
"The behavior of B<mbrlen>()  depends on the B<LC_CTYPE> category of the "
"current locale."
msgstr ""

#. type: Plain text
#: build/C/man3/mbrlen.3:127
msgid "B<mbrtowc>(3)"
msgstr ""

#. type: TH
#: build/C/man3/mbrtowc.3:17
#, no-wrap
msgid "MBRTOWC"
msgstr ""

#. type: Plain text
#: build/C/man3/mbrtowc.3:20
msgid "mbrtowc - convert a multibyte sequence to a wide character"
msgstr ""

#. type: Plain text
#: build/C/man3/mbrtowc.3:26
#, no-wrap
msgid ""
"B<size_t mbrtowc(wchar_t *>I<pwc>B<, const char *>I<s>B<, size_t >I<n>B<, "
"mbstate_t *>I<ps>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/mbrtowc.3:54
msgid ""
"The main case for this function is when I<s> is not NULL and I<pwc> is not "
"NULL.  In this case, the B<mbrtowc>()  function inspects at most I<n> bytes "
"of the multibyte string starting at I<s>, extracts the next complete "
"multibyte character, converts it to a wide character and stores it at "
"I<*pwc>.  It updates the shift state I<*ps>.  If the converted wide "
"character is not L\\(aq\\e0\\(aq (the null wide character), it returns the "
"number of bytes that were consumed from I<s>.  If the converted wide "
"character is L\\(aq\\e0\\(aq, it resets the shift state I<*ps> to the "
"initial state and returns 0."
msgstr ""

#. type: Plain text
#: build/C/man3/mbrtowc.3:70
msgid ""
"If the I<n> bytes starting at I<s> do not contain a complete multibyte "
"character, B<mbrtowc>()  returns I<(size_t)\\ -2>.  This can happen even if "
"I<n> E<gt>= I<MB_CUR_MAX>, if the multibyte string contains redundant shift "
"sequences."
msgstr ""

#. type: Plain text
#: build/C/man3/mbrtowc.3:86
msgid ""
"If the multibyte string starting at I<s> contains an invalid multibyte "
"sequence before the next complete character, B<mbrtowc>()  returns "
"I<(size_t)\\ -1> and sets I<errno> to B<EILSEQ>.  In this case, the effects "
"on I<*ps> are undefined."
msgstr ""

#. type: Plain text
#: build/C/man3/mbrtowc.3:96
msgid ""
"A different case is when I<s> is not NULL but I<pwc> is NULL.  In this case, "
"the B<mbrtowc>()  function behaves as above, except that it does not store "
"the converted wide character in memory."
msgstr ""

#. type: Plain text
#: build/C/man3/mbrtowc.3:128
msgid ""
"A third case is when I<s> is NULL.  In this case, I<pwc> and I<n> are "
"ignored.  If the conversion state represented by I<*ps> denotes an "
"incomplete multibyte character conversion, the B<mbrtowc>()  function "
"returns I<(size_t)\\ -1>, sets I<errno> to B<EILSEQ>, and leaves I<*ps> in "
"an undefined state.  Otherwise, the B<mbrtowc>()  function puts I<*ps> in "
"the initial state and returns 0."
msgstr ""

#. type: Plain text
#: build/C/man3/mbrtowc.3:146
msgid ""
"In all of the above cases, if I<ps> is NULL, a static anonymous state known "
"only to the B<mbrtowc>()  function is used instead.  Otherwise, I<*ps> must "
"be a valid I<mbstate_t> object.  An I<mbstate_t> object I<a> can be "
"initialized to the initial state by zeroing it, for example using"
msgstr ""

#. type: Plain text
#: build/C/man3/mbrtowc.3:150
#, no-wrap
msgid "memset(&a, 0, sizeof(a));\n"
msgstr ""

#. type: Plain text
#: build/C/man3/mbrtowc.3:175
msgid ""
"The B<mbrtowc>()  function returns the number of bytes parsed from the "
"multibyte sequence starting at I<s>, if a non-L\\(aq\\e0\\(aq wide character "
"was recognized.  It returns 0, if a L\\(aq\\e0\\(aq wide character was "
"recognized.  It returns I<(size_t)\\ -1> and sets I<errno> to B<EILSEQ>, if "
"an invalid multibyte sequence was encountered.  It returns I<(size_t)\\ -2> "
"if it couldn't parse a complete multibyte character, meaning that I<n> "
"should be increased."
msgstr ""

#. type: tbl table
#: build/C/man3/mbrtowc.3:185
#, no-wrap
msgid "B<mbrtowc>()"
msgstr ""

#. type: tbl table
#: build/C/man3/mbrtowc.3:185
#, no-wrap
msgid "MT-Unsafe race:mbrtowc/!ps"
msgstr ""

#. type: Plain text
#: build/C/man3/mbrtowc.3:196
msgid ""
"The behavior of B<mbrtowc>()  depends on the B<LC_CTYPE> category of the "
"current locale."
msgstr ""

#. type: Plain text
#: build/C/man3/mbrtowc.3:199
msgid "B<mbsinit>(3), B<mbsrtowcs>(3)"
msgstr ""

#. type: TH
#: build/C/man3/mbsinit.3:16
#, no-wrap
msgid "MBSINIT"
msgstr ""

#. type: TH
#: build/C/man3/mbsinit.3:16
#, no-wrap
msgid "2020-11-01"
msgstr ""

#. type: Plain text
#: build/C/man3/mbsinit.3:19
msgid "mbsinit - test for initial shift state"
msgstr ""

#. type: Plain text
#: build/C/man3/mbsinit.3:24
#, no-wrap
msgid "B<int mbsinit(const mbstate_t *>I<ps>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/mbsinit.3:34
msgid ""
"Character conversion between the multibyte representation and the wide "
"character representation uses conversion state, of type I<mbstate_t>.  "
"Conversion of a string uses a finite-state machine; when it is interrupted "
"after the complete conversion of a number of characters, it may need to save "
"a state for processing the remaining characters.  Such a conversion state is "
"needed for the sake of encodings such as ISO-2022 and UTF-7."
msgstr ""

#. type: Plain text
#: build/C/man3/mbsinit.3:46
msgid ""
"The initial state is the state at the beginning of conversion of a string.  "
"There are two kinds of state: the one used by multibyte to wide character "
"conversion functions, such as B<mbsrtowcs>(3), and the one used by wide "
"character to multibyte conversion functions, such as B<wcsrtombs>(3), but "
"they both fit in a I<mbstate_t>, and they both have the same representation "
"for an initial state."
msgstr ""

#. type: Plain text
#: build/C/man3/mbsinit.3:54
msgid ""
"For 8-bit encodings, all states are equivalent to the initial state.  For "
"multibyte encodings like UTF-8, EUC-*, BIG5 or SJIS, the wide character to "
"multibyte conversion functions never produce non-initial states, but the "
"multibyte to wide-character conversion functions like B<mbrtowc>(3)  do "
"produce non-initial states when interrupted in the middle of a character."
msgstr ""

#. type: Plain text
#: build/C/man3/mbsinit.3:58
msgid ""
"One possible way to create an I<mbstate_t> in initial state is to set it to "
"zero:"
msgstr ""

#. type: Plain text
#: build/C/man3/mbsinit.3:63
#, no-wrap
msgid ""
"mbstate_t state;\n"
"memset(&state, 0, sizeof(state));\n"
msgstr ""

#. type: Plain text
#: build/C/man3/mbsinit.3:67
msgid "On Linux, the following works as well, but might generate compiler warnings:"
msgstr ""

#. type: Plain text
#: build/C/man3/mbsinit.3:71
#, no-wrap
msgid "mbstate_t state = { 0 };\n"
msgstr ""

#. type: Plain text
#: build/C/man3/mbsinit.3:80
msgid ""
"The function B<mbsinit>()  tests whether I<*ps> corresponds to an initial "
"state."
msgstr ""

#. type: Plain text
#: build/C/man3/mbsinit.3:88
msgid ""
"B<mbsinit>()  returns nonzero if I<*ps> is an initial state, or if I<ps> is "
"NULL.  Otherwise, it returns 0."
msgstr ""

#. type: tbl table
#: build/C/man3/mbsinit.3:98
#, no-wrap
msgid "B<mbsinit>()"
msgstr ""

#. type: Plain text
#: build/C/man3/mbsinit.3:109
msgid ""
"The behavior of B<mbsinit>()  depends on the B<LC_CTYPE> category of the "
"current locale."
msgstr ""

#. type: Plain text
#: build/C/man3/mbsinit.3:115
msgid "B<mbrlen>(3), B<mbrtowc>(3), B<mbsrtowcs>(3), B<wcrtomb>(3), B<wcsrtombs>(3)"
msgstr ""

#. type: TH
#: build/C/man3/mbsnrtowcs.3:15
#, no-wrap
msgid "MBSNRTOWCS"
msgstr ""

#. type: TH
#: build/C/man3/mbsnrtowcs.3:15 build/C/man3/wcstok.3:16
#, no-wrap
msgid "2020-06-09"
msgstr ""

#. type: Plain text
#: build/C/man3/mbsnrtowcs.3:18
msgid "mbsnrtowcs - convert a multibyte string to a wide-character string"
msgstr ""

#. type: Plain text
#: build/C/man3/mbsnrtowcs.3:24
#, no-wrap
msgid ""
"B<size_t mbsnrtowcs(wchar_t *>I<dest>B<, const char **>I<src>B<,>\n"
"B<                  size_t >I<nms>B<, size_t >I<len>B<, mbstate_t "
"*>I<ps>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/mbsnrtowcs.3:32
msgid "B<mbsnrtowcs>():"
msgstr ""

#. type: TP
#: build/C/man3/mbsnrtowcs.3:35 build/C/man3/wcpcpy.3:34 build/C/man3/wcpncpy.3:35 build/C/man3/wcscasecmp.3:34 build/C/man3/wcsdup.3:34 build/C/man3/wcsncasecmp.3:34 build/C/man3/wcsnlen.3:34 build/C/man3/wcsnrtombs.3:35
#, no-wrap
msgid "Since glibc 2.10:"
msgstr ""

#. type: Plain text
#: build/C/man3/mbsnrtowcs.3:38 build/C/man3/wcpcpy.3:37 build/C/man3/wcpncpy.3:38 build/C/man3/wcscasecmp.3:37 build/C/man3/wcsdup.3:37 build/C/man3/wcsncasecmp.3:37 build/C/man3/wcsnlen.3:37 build/C/man3/wcsnrtombs.3:38
msgid "_POSIX_C_SOURCE\\ E<gt>=\\ 200809L"
msgstr ""

#. type: TP
#: build/C/man3/mbsnrtowcs.3:38 build/C/man3/wcpcpy.3:37 build/C/man3/wcpncpy.3:38 build/C/man3/wcscasecmp.3:37 build/C/man3/wcsdup.3:37 build/C/man3/wcsncasecmp.3:37 build/C/man3/wcsnlen.3:37 build/C/man3/wcsnrtombs.3:38
#, no-wrap
msgid "Before glibc 2.10:"
msgstr ""

#. type: Plain text
#: build/C/man3/mbsnrtowcs.3:41 build/C/man3/wcpcpy.3:40 build/C/man3/wcpncpy.3:41 build/C/man3/wcscasecmp.3:40 build/C/man3/wcsdup.3:40 build/C/man3/wcsncasecmp.3:40 build/C/man3/wcsnlen.3:40 build/C/man3/wcsnrtombs.3:41
msgid "_GNU_SOURCE"
msgstr ""

#. type: Plain text
#: build/C/man3/mbsnrtowcs.3:55
msgid ""
"The B<mbsnrtowcs>()  function is like the B<mbsrtowcs>(3)  function, except "
"that the number of bytes to be converted, starting at I<*src>, is limited to "
"at most I<nms> bytes."
msgstr ""

#. type: Plain text
#: build/C/man3/mbsnrtowcs.3:88
msgid ""
"If I<dest> is not NULL, the B<mbsnrtowcs>()  function converts at most "
"I<nms> bytes from the multibyte string I<*src> to a wide-character string "
"starting at I<dest>.  At most I<len> wide characters are written to "
"I<dest>.  The shift state I<*ps> is updated.  The conversion is effectively "
"performed by repeatedly calling I<mbrtowc(dest, *src, n, ps)> where I<n> is "
"some positive number, as long as this call succeeds, and then incrementing "
"I<dest> by one and I<*src> by the number of bytes consumed.  The conversion "
"can stop for three reasons:"
msgstr ""

#. type: IP
#: build/C/man3/mbsnrtowcs.3:88 build/C/man3/mbsrtowcs.3:55 build/C/man3/wcsnrtombs.3:87 build/C/man3/wcsrtombs.3:55
#, no-wrap
msgid "1."
msgstr ""

#. type: Plain text
#: build/C/man3/mbsnrtowcs.3:99 build/C/man3/mbsrtowcs.3:66
msgid ""
"An invalid multibyte sequence has been encountered.  In this case, I<*src> "
"is left pointing to the invalid multibyte sequence, I<(size_t)\\ -1> is "
"returned, and I<errno> is set to B<EILSEQ>."
msgstr ""

#. type: IP
#: build/C/man3/mbsnrtowcs.3:99 build/C/man3/mbsrtowcs.3:66 build/C/man3/wcsnrtombs.3:99 build/C/man3/wcsrtombs.3:67
#, no-wrap
msgid "2."
msgstr ""

#. type: Plain text
#: build/C/man3/mbsnrtowcs.3:115
msgid ""
"The I<nms> limit forces a stop, or I<len> non-L\\(aq\\e0\\(aq wide "
"characters have been stored at I<dest>.  In this case, I<*src> is left "
"pointing to the next multibyte sequence to be converted, and the number of "
"wide characters written to I<dest> is returned."
msgstr ""

#. type: IP
#: build/C/man3/mbsnrtowcs.3:115 build/C/man3/mbsrtowcs.3:77 build/C/man3/wcsnrtombs.3:111 build/C/man3/wcsrtombs.3:76
#, no-wrap
msgid "3."
msgstr ""

#. type: Plain text
#: build/C/man3/mbsnrtowcs.3:129
msgid ""
"The multibyte string has been completely converted, including the "
"terminating null wide character (\\(aq\\e0\\(aq)  (which has the side effect "
"of bringing back I<*ps> to the initial state).  In this case, I<*src> is set "
"to NULL, and the number of wide characters written to I<dest>, excluding the "
"terminating null wide character, is returned."
msgstr ""

#. type: Plain text
#: build/C/man3/mbsnrtowcs.3:135
msgid ""
"According to POSIX.1, if the input buffer ends with an incomplete character, "
"it is unspecified whether conversion stops at the end of the previous "
"character (if any), or at the end of the input buffer.  The glibc "
"implementation adopts the former behavior."
msgstr ""

#. type: Plain text
#: build/C/man3/mbsnrtowcs.3:144
msgid ""
"If I<dest> is NULL, I<len> is ignored, and the conversion proceeds as above, "
"except that the converted wide characters are not written out to memory, and "
"that no destination length limit exists."
msgstr ""

#. type: Plain text
#: build/C/man3/mbsnrtowcs.3:151
msgid ""
"In both of the above cases, if I<ps> is NULL, a static anonymous state known "
"only to the B<mbsnrtowcs>()  function is used instead."
msgstr ""

#. type: Plain text
#: build/C/man3/mbsnrtowcs.3:157 build/C/man3/mbsrtowcs.3:113
msgid ""
"The programmer must ensure that there is room for at least I<len> wide "
"characters at I<dest>."
msgstr ""

#. type: Plain text
#: build/C/man3/mbsnrtowcs.3:170
msgid ""
"The B<mbsnrtowcs>()  function returns the number of wide characters that "
"make up the converted part of the wide-character string, not including the "
"terminating null wide character.  If an invalid multibyte sequence was "
"encountered, I<(size_t)\\ -1> is returned, and I<errno> set to B<EILSEQ>."
msgstr ""

#. type: tbl table
#: build/C/man3/mbsnrtowcs.3:180
#, no-wrap
msgid "B<mbsnrtowcs>()"
msgstr ""

#. type: tbl table
#: build/C/man3/mbsnrtowcs.3:180
#, no-wrap
msgid "MT-Unsafe race:mbsnrtowcs/!ps"
msgstr ""

#. type: Plain text
#: build/C/man3/mbsnrtowcs.3:185 build/C/man3/wcpcpy.3:81 build/C/man3/wcpncpy.3:107 build/C/man3/wcsnlen.3:96 build/C/man3/wcsnrtombs.3:175
msgid "POSIX.1-2008."
msgstr ""

#. type: Plain text
#: build/C/man3/mbsnrtowcs.3:192
msgid ""
"The behavior of B<mbsnrtowcs>()  depends on the B<LC_CTYPE> category of the "
"current locale."
msgstr ""

#. type: Plain text
#: build/C/man3/mbsnrtowcs.3:196 build/C/man3/mbsrtowcs.3:152 build/C/man3/wcrtomb.3:135 build/C/man3/wcsnrtombs.3:186 build/C/man3/wcsrtombs.3:152
msgid "Passing NULL as I<ps> is not multithread safe."
msgstr ""

#. type: Plain text
#: build/C/man3/mbsnrtowcs.3:201
msgid "B<iconv>(3), B<mbrtowc>(3), B<mbsinit>(3), B<mbsrtowcs>(3)"
msgstr ""

#. type: TH
#: build/C/man3/mbsrtowcs.3:16
#, no-wrap
msgid "MBSRTOWCS"
msgstr ""

#. type: Plain text
#: build/C/man3/mbsrtowcs.3:19
msgid "mbsrtowcs - convert a multibyte string to a wide-character string"
msgstr ""

#. type: Plain text
#: build/C/man3/mbsrtowcs.3:25
#, no-wrap
msgid ""
"B<size_t mbsrtowcs(wchar_t *>I<dest>B<, const char **>I<src>B<,>\n"
"B<                  size_t >I<len>B<, mbstate_t *>I<ps>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/mbsrtowcs.3:55
msgid ""
"If I<dest> is not NULL, the B<mbsrtowcs>()  function converts the multibyte "
"string I<*src> to a wide-character string starting at I<dest>.  At most "
"I<len> wide characters are written to I<dest>.  The shift state I<*ps> is "
"updated.  The conversion is effectively performed by repeatedly calling "
"I<mbrtowc(dest, *src, n, ps)> where I<n> is some positive number, as long as "
"this call succeeds, and then incrementing I<dest> by one and I<*src> by the "
"number of bytes consumed.  The conversion can stop for three reasons:"
msgstr ""

#. type: Plain text
#: build/C/man3/mbsrtowcs.3:77
msgid ""
"I<len> non-L\\(aq\\e0\\(aq wide characters have been stored at I<dest>.  In "
"this case, I<*src> is left pointing to the next multibyte sequence to be "
"converted, and the number of wide characters written to I<dest> is returned."
msgstr ""

#. type: Plain text
#: build/C/man3/mbsrtowcs.3:90
msgid ""
"The multibyte string has been completely converted, including the "
"terminating null wide character (\\(aq\\e0\\(aq), which has the side effect "
"of bringing back I<*ps> to the initial state.  In this case, I<*src> is set "
"to NULL, and the number of wide characters written to I<dest>, excluding the "
"terminating null wide character, is returned."
msgstr ""

#. type: Plain text
#: build/C/man3/mbsrtowcs.3:99
msgid ""
"If I<dest> is NULL, I<len> is ignored, and the conversion proceeds as above, "
"except that the converted wide characters are not written out to memory, and "
"that no length limit exists."
msgstr ""

#. type: Plain text
#: build/C/man3/mbsrtowcs.3:107
msgid ""
"In both of the above cases, if I<ps> is NULL, a static anonymous state known "
"only to the B<mbsrtowcs>()  function is used instead."
msgstr ""

#. type: Plain text
#: build/C/man3/mbsrtowcs.3:126
msgid ""
"The B<mbsrtowcs>()  function returns the number of wide characters that make "
"up the converted part of the wide-character string, not including the "
"terminating null wide character.  If an invalid multibyte sequence was "
"encountered, I<(size_t)\\ -1> is returned, and I<errno> set to B<EILSEQ>."
msgstr ""

#. type: tbl table
#: build/C/man3/mbsrtowcs.3:136
#, no-wrap
msgid "B<mbsrtowcs>()"
msgstr ""

#. type: tbl table
#: build/C/man3/mbsrtowcs.3:136
#, no-wrap
msgid "MT-Unsafe race:mbsrtowcs/!ps"
msgstr ""

#. type: Plain text
#: build/C/man3/mbsrtowcs.3:148
msgid ""
"The behavior of B<mbsrtowcs>()  depends on the B<LC_CTYPE> category of the "
"current locale."
msgstr ""

#. type: Plain text
#: build/C/man3/mbsrtowcs.3:158
msgid "B<iconv>(3), B<mbrtowc>(3), B<mbsinit>(3), B<mbsnrtowcs>(3), B<mbstowcs>(3)"
msgstr ""

#. type: TH
#: build/C/man3/putwchar.3:17
#, no-wrap
msgid "PUTWCHAR"
msgstr ""

#. type: Plain text
#: build/C/man3/putwchar.3:20
msgid "putwchar - write a wide character to standard output"
msgstr ""

#. type: Plain text
#: build/C/man3/putwchar.3:25
#, no-wrap
msgid "B<wint_t putwchar(wchar_t >I<wc>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/putwchar.3:49
msgid ""
"The B<putwchar>()  function is the wide-character equivalent of the "
"B<putchar>(3)  function.  It writes the wide character I<wc> to I<stdout>.  "
"If I<ferror(stdout)> becomes true, it returns B<WEOF>.  If a wide character "
"conversion error occurs, it sets I<errno> to B<EILSEQ> and returns B<WEOF>.  "
"Otherwise, it returns I<wc>."
msgstr ""

#. type: Plain text
#: build/C/man3/putwchar.3:60
msgid ""
"The B<putwchar>()  function returns I<wc> if no error occurred, or B<WEOF> "
"to indicate an error."
msgstr ""

#. type: tbl table
#: build/C/man3/putwchar.3:70
#, no-wrap
msgid "B<putwchar>()"
msgstr ""

#. type: Plain text
#: build/C/man3/putwchar.3:81
msgid ""
"The behavior of B<putwchar>()  depends on the B<LC_CTYPE> category of the "
"current locale."
msgstr ""

#. type: Plain text
#: build/C/man3/putwchar.3:87
msgid ""
"It is reasonable to expect that B<putwchar>()  will actually write the "
"multibyte sequence corresponding to the wide character I<wc>."
msgstr ""

#. type: TH
#: build/C/man3/ungetwc.3:16
#, no-wrap
msgid "UNGETWC"
msgstr ""

#. type: Plain text
#: build/C/man3/ungetwc.3:19
msgid "ungetwc - push back a wide character onto a FILE stream"
msgstr ""

#. type: Plain text
#: build/C/man3/ungetwc.3:24
#, no-wrap
msgid "B<wint_t ungetwc(wint_t >I<wc>B<, FILE *>I<stream>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/ungetwc.3:34
msgid ""
"The B<ungetwc>()  function is the wide-character equivalent of the "
"B<ungetc>(3)  function.  It pushes back a wide character onto I<stream> and "
"returns it."
msgstr ""

#. type: Plain text
#: build/C/man3/ungetwc.3:50
msgid ""
"If I<wc> is B<WEOF>, it returns B<WEOF>.  If I<wc> is an invalid wide "
"character, it sets I<errno> to B<EILSEQ> and returns B<WEOF>."
msgstr ""

#. type: Plain text
#: build/C/man3/ungetwc.3:59
msgid ""
"If I<wc> is a valid wide character, it is pushed back onto the stream and "
"thus becomes available for future wide-character read operations.  The "
"file-position indicator is decremented by one or more.  The end-of-file "
"indicator is cleared.  The backing storage of the file is not affected."
msgstr ""

#. type: Plain text
#: build/C/man3/ungetwc.3:64
msgid ""
"Note: I<wc> need not be the last wide-character read from the stream; it can "
"be any other valid wide character."
msgstr ""

#. type: Plain text
#: build/C/man3/ungetwc.3:68
msgid ""
"If the implementation supports multiple push-back operations in a row, the "
"pushed-back wide characters will be read in reverse order; however, only one "
"level of push-back is guaranteed."
msgstr ""

#. type: Plain text
#: build/C/man3/ungetwc.3:77
msgid ""
"The B<ungetwc>()  function returns I<wc> when successful, or B<WEOF> upon "
"failure."
msgstr ""

#. type: tbl table
#: build/C/man3/ungetwc.3:87
#, no-wrap
msgid "B<ungetwc>()"
msgstr ""

#. type: Plain text
#: build/C/man3/ungetwc.3:98
msgid ""
"The behavior of B<ungetwc>()  depends on the B<LC_CTYPE> category of the "
"current locale."
msgstr ""

#. type: Plain text
#: build/C/man3/ungetwc.3:100
msgid "B<fgetwc>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wcpcpy.3:15
#, no-wrap
msgid "WCPCPY"
msgstr ""

#. type: Plain text
#: build/C/man3/wcpcpy.3:18
msgid "wcpcpy - copy a wide-character string, returning a pointer to its end"
msgstr ""

#. type: Plain text
#: build/C/man3/wcpcpy.3:23
#, no-wrap
msgid "B<wchar_t *wcpcpy(wchar_t *>I<dest>B<, const wchar_t *>I<src>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcpcpy.3:31
msgid "B<wcpcpy>():"
msgstr ""

#. type: Plain text
#: build/C/man3/wcpcpy.3:54
msgid ""
"The B<wcpcpy>()  function is the wide-character equivalent of the "
"B<stpcpy>(3)  function.  It copies the wide-character string pointed to by "
"I<src>, including the terminating null wide character (L\\(aq\\e0\\(aq), to "
"the array pointed to by I<dest>."
msgstr ""

#. type: Plain text
#: build/C/man3/wcpcpy.3:56 build/C/man3/wcpncpy.3:83 build/C/man3/wcscat.3:39 build/C/man3/wcscpy.3:39 build/C/man3/wcsncat.3:42 build/C/man3/wcsncpy.3:59
msgid "The strings may not overlap."
msgstr ""

#. type: Plain text
#: build/C/man3/wcpcpy.3:62 build/C/man3/wcscpy.3:45
msgid ""
"The programmer must ensure that there is room for at least I<wcslen(src)+1> "
"wide characters at I<dest>."
msgstr ""

#. type: Plain text
#: build/C/man3/wcpcpy.3:67
msgid ""
"B<wcpcpy>()  returns a pointer to the end of the wide-character string "
"I<dest>, that is, a pointer to the terminating null wide character."
msgstr ""

#. type: tbl table
#: build/C/man3/wcpcpy.3:77
#, no-wrap
msgid "B<wcpcpy>()"
msgstr ""

#. type: Plain text
#: build/C/man3/wcpcpy.3:84
msgid "B<strcpy>(3), B<wcscpy>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wcpncpy.3:15
#, no-wrap
msgid "WCPNCPY"
msgstr ""

#. type: Plain text
#: build/C/man3/wcpncpy.3:19
msgid ""
"wcpncpy - copy a fixed-size string of wide characters, returning a pointer "
"to its end"
msgstr ""

#. type: Plain text
#: build/C/man3/wcpncpy.3:24
#, no-wrap
msgid ""
"B<wchar_t *wcpncpy(wchar_t *>I<dest>B<, const wchar_t *>I<src>B<, size_t "
">I<n>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcpncpy.3:32
msgid "B<wcpncpy>():"
msgstr ""

#. type: Plain text
#: build/C/man3/wcpncpy.3:81
msgid ""
"The B<wcpncpy>()  function is the wide-character equivalent of the "
"B<stpncpy>(3)  function.  It copies at most I<n> wide characters from the "
"wide-character string pointed to by I<src>, including the terminating null "
"wide (L\\(aq\\e0\\(aq), to the array pointed to by I<dest>.  Exactly I<n> "
"wide characters are written at I<dest>.  If the length I<wcslen(src)> is "
"smaller than I<n>, the remaining wide characters in the array pointed to by "
"I<dest> are filled with L\\(aq\\e0\\(aq characters.  If the length "
"I<wcslen(src)> is greater than or equal to I<n>, the string pointed to by "
"I<dest> will not be L\\(aq\\e0\\(aq terminated."
msgstr ""

#. type: Plain text
#: build/C/man3/wcpncpy.3:89 build/C/man3/wcsncpy.3:65 build/C/man3/wmemcpy.3:48 build/C/man3/wmemmove.3:46
msgid ""
"The programmer must ensure that there is room for at least I<n> wide "
"characters at I<dest>."
msgstr ""

#. type: Plain text
#: build/C/man3/wcpncpy.3:93
msgid ""
"B<wcpncpy>()  returns a pointer to the last wide character written, that is, "
"I<dest>+I<n>-1."
msgstr ""

#. type: tbl table
#: build/C/man3/wcpncpy.3:103
#, no-wrap
msgid "B<wcpncpy>()"
msgstr ""

#. type: Plain text
#: build/C/man3/wcpncpy.3:110
msgid "B<stpncpy>(3), B<wcsncpy>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wcrtomb.3:16
#, no-wrap
msgid "WCRTOMB"
msgstr ""

#. type: Plain text
#: build/C/man3/wcrtomb.3:19
msgid "wcrtomb - convert a wide character to a multibyte sequence"
msgstr ""

#. type: Plain text
#: build/C/man3/wcrtomb.3:24
#, no-wrap
msgid "B<size_t wcrtomb(char *>I<s>B<, wchar_t >I<wc>B<, mbstate_t *>I<ps>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcrtomb.3:48
msgid ""
"The main case for this function is when I<s> is not NULL and I<wc> is not a "
"null wide character (L\\(aq\\e0\\(aq).  In this case, the B<wcrtomb>()  "
"function converts the wide character I<wc> to its multibyte representation "
"and stores it at the beginning of the character array pointed to by I<s>.  "
"It updates the shift state I<*ps>, and returns the length of said multibyte "
"representation, that is, the number of bytes written at I<s>."
msgstr ""

#. type: Plain text
#: build/C/man3/wcrtomb.3:72
msgid ""
"A different case is when I<s> is not NULL, but I<wc> is a null wide "
"character (L\\(aq\\e0\\(aq).  In this case, the B<wcrtomb>()  function "
"stores at the character array pointed to by I<s> the shift sequence needed "
"to bring I<*ps> back to the initial state, followed by a \\(aq\\e0\\(aq "
"byte.  It updates the shift state I<*ps> (i.e., brings it into the initial "
"state), and returns the length of the shift sequence plus one, that is, the "
"number of bytes written at I<s>."
msgstr ""

#. type: Plain text
#: build/C/man3/wcrtomb.3:80
msgid ""
"A third case is when I<s> is NULL.  In this case, I<wc> is ignored, and the "
"function effectively returns"
msgstr ""

#. type: Plain text
#: build/C/man3/wcrtomb.3:82
#, no-wrap
msgid "    wcrtomb(buf, L\\(aq\\e0\\(aq, ps)\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcrtomb.3:86
msgid "where I<buf> is an internal anonymous buffer."
msgstr ""

#. type: Plain text
#: build/C/man3/wcrtomb.3:93
msgid ""
"In all of the above cases, if I<ps> is NULL, a static anonymous state known "
"only to the B<wcrtomb>()  function is used instead."
msgstr ""

#. type: Plain text
#: build/C/man3/wcrtomb.3:109
msgid ""
"The B<wcrtomb>()  function returns the number of bytes that have been or "
"would have been written to the byte array at I<s>.  If I<wc> can not be "
"represented as a multibyte sequence (according to the current locale), "
"I<(size_t)\\ -1> is returned, and I<errno> set to B<EILSEQ>."
msgstr ""

#. type: tbl table
#: build/C/man3/wcrtomb.3:119
#, no-wrap
msgid "B<wcrtomb>()"
msgstr ""

#. type: tbl table
#: build/C/man3/wcrtomb.3:119
#, no-wrap
msgid "MT-Unsafe race:wcrtomb/!ps"
msgstr ""

#. type: Plain text
#: build/C/man3/wcrtomb.3:131
msgid ""
"The behavior of B<wcrtomb>()  depends on the B<LC_CTYPE> category of the "
"current locale."
msgstr ""

#. type: Plain text
#: build/C/man3/wcrtomb.3:138
msgid "B<mbsinit>(3), B<wcsrtombs>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wcscasecmp.3:15
#, no-wrap
msgid "WCSCASECMP"
msgstr ""

#. type: Plain text
#: build/C/man3/wcscasecmp.3:18
msgid "wcscasecmp - compare two wide-character strings, ignoring case"
msgstr ""

#. type: Plain text
#: build/C/man3/wcscasecmp.3:23
#, no-wrap
msgid "B<int wcscasecmp(const wchar_t *>I<s1>B<, const wchar_t *>I<s2>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcscasecmp.3:31
msgid "B<wcscasecmp>():"
msgstr ""

#. type: Plain text
#: build/C/man3/wcscasecmp.3:58
msgid ""
"The B<wcscasecmp>()  function is the wide-character equivalent of the "
"B<strcasecmp>(3)  function.  It compares the wide-character string pointed "
"to by I<s1> and the wide-character string pointed to by I<s2>, ignoring case "
"differences (B<towupper>(3), B<towlower>(3))."
msgstr ""

#. type: Plain text
#: build/C/man3/wcscasecmp.3:79
msgid ""
"The B<wcscasecmp>()  function returns zero if the wide-character strings at "
"I<s1> and I<s2> are equal except for case distinctions.  It returns a "
"positive integer if I<s1> is greater than I<s2>, ignoring case.  It returns "
"a negative integer if I<s1> is smaller than I<s2>, ignoring case."
msgstr ""

#. type: SH
#: build/C/man3/wcscasecmp.3:79 build/C/man3/wcsncasecmp.3:84 build/C/man3/wcsnlen.3:78
#, no-wrap
msgid "VERSIONS"
msgstr ""

#. type: Plain text
#: build/C/man3/wcscasecmp.3:83
msgid "The B<wcscasecmp>()  function is provided in glibc since version 2.1."
msgstr ""

#. type: tbl table
#: build/C/man3/wcscasecmp.3:93
#, no-wrap
msgid "B<wcscasecmp>()"
msgstr ""

#. type: tbl table
#: build/C/man3/wcscasecmp.3:93 build/C/man3/wcsncasecmp.3:98 build/C/man3/wcstoimax.3:58 build/C/man3/wcswidth.3:57 build/C/man3/wcwidth.3:55
#, no-wrap
msgid "MT-Safe locale"
msgstr ""

#. type: Plain text
#: build/C/man3/wcscasecmp.3:99 build/C/man3/wcsdup.3:88 build/C/man3/wcsncasecmp.3:104
msgid ""
"POSIX.1-2008.  This function is not specified in POSIX.1-2001, and is not "
"widely available on other systems."
msgstr ""

#. type: Plain text
#: build/C/man3/wcscasecmp.3:106
msgid ""
"The behavior of B<wcscasecmp>()  depends on the B<LC_CTYPE> category of the "
"current locale."
msgstr ""

#. type: Plain text
#: build/C/man3/wcscasecmp.3:109
msgid "B<strcasecmp>(3), B<wcscmp>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wcscat.3:16
#, no-wrap
msgid "WCSCAT"
msgstr ""

#. type: Plain text
#: build/C/man3/wcscat.3:19
msgid "wcscat - concatenate two wide-character strings"
msgstr ""

#. type: Plain text
#: build/C/man3/wcscat.3:24
#, no-wrap
msgid "B<wchar_t *wcscat(wchar_t *>I<dest>B<, const wchar_t *>I<src>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcscat.3:37
msgid ""
"The B<wcscat>()  function is the wide-character equivalent of the "
"B<strcat>(3)  function.  It copies the wide-character string pointed to by "
"I<src>, including the terminating null wide character (L\\(aq\\e0\\(aq), to "
"the end of the wide-character string pointed to by I<dest>."
msgstr ""

#. type: Plain text
#: build/C/man3/wcscat.3:44
msgid ""
"The programmer must ensure that there is room for at least "
"I<wcslen(dest)>+I<wcslen(src)>+1 wide characters at I<dest>."
msgstr ""

#. type: Plain text
#: build/C/man3/wcscat.3:48
msgid "B<wcscat>()  returns I<dest>."
msgstr ""

#. type: tbl table
#: build/C/man3/wcscat.3:58
#, no-wrap
msgid "B<wcscat>()"
msgstr ""

#. type: Plain text
#: build/C/man3/wcscat.3:67
msgid "B<strcat>(3), B<wcpcpy>(3), B<wcscpy>(3), B<wcsncat>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wcschr.3:16
#, no-wrap
msgid "WCSCHR"
msgstr ""

#. type: Plain text
#: build/C/man3/wcschr.3:19
msgid "wcschr - search a wide character in a wide-character string"
msgstr ""

#. type: Plain text
#: build/C/man3/wcschr.3:24
#, no-wrap
msgid "B<wchar_t *wcschr(const wchar_t *>I<wcs>B<, wchar_t >I<wc>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcschr.3:37
msgid ""
"The B<wcschr>()  function is the wide-character equivalent of the "
"B<strchr>(3)  function.  It searches the first occurrence of I<wc> in the "
"wide-character string pointed to by I<wcs>."
msgstr ""

#. type: Plain text
#: build/C/man3/wcschr.3:47
msgid ""
"The B<wcschr>()  function returns a pointer to the first occurrence of I<wc> "
"in the wide-character string pointed to by I<wcs>, or NULL if I<wc> does not "
"occur in the string."
msgstr ""

#. type: tbl table
#: build/C/man3/wcschr.3:57
#, no-wrap
msgid "B<wcschr>()"
msgstr ""

#. type: Plain text
#: build/C/man3/wcschr.3:67
msgid "B<strchr>(3), B<wcspbrk>(3), B<wcsrchr>(3), B<wcsstr>(3), B<wmemchr>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wcscmp.3:16
#, no-wrap
msgid "WCSCMP"
msgstr ""

#. type: Plain text
#: build/C/man3/wcscmp.3:19
msgid "wcscmp - compare two wide-character strings"
msgstr ""

#. type: Plain text
#: build/C/man3/wcscmp.3:24
#, no-wrap
msgid "B<int wcscmp(const wchar_t *>I<s1>B<, const wchar_t *>I<s2>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcscmp.3:37
msgid ""
"The B<wcscmp>()  function is the wide-character equivalent of the "
"B<strcmp>(3)  function.  It compares the wide-character string pointed to by "
"I<s1> and the wide-character string pointed to by I<s2>."
msgstr ""

#. type: Plain text
#: build/C/man3/wcscmp.3:59
msgid ""
"The B<wcscmp>()  function returns zero if the wide-character strings at "
"I<s1> and I<s2> are equal.  It returns an integer greater than zero if at "
"the first differing position I<i>, the corresponding wide-character I<s1[i]> "
"is greater than I<s2[i]>.  It returns an integer less than zero if at the "
"first differing position I<i>, the corresponding wide-character I<s1[i]> is "
"less than I<s2[i]>."
msgstr ""

#. type: tbl table
#: build/C/man3/wcscmp.3:69
#, no-wrap
msgid "B<wcscmp>()"
msgstr ""

#. type: Plain text
#: build/C/man3/wcscmp.3:77
msgid "B<strcmp>(3), B<wcscasecmp>(3), B<wmemcmp>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wcscpy.3:16
#, no-wrap
msgid "WCSCPY"
msgstr ""

#. type: Plain text
#: build/C/man3/wcscpy.3:19
msgid "wcscpy - copy a wide-character string"
msgstr ""

#. type: Plain text
#: build/C/man3/wcscpy.3:24
#, no-wrap
msgid "B<wchar_t *wcscpy(wchar_t *>I<dest>B<, const wchar_t *>I<src>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcscpy.3:37
msgid ""
"The B<wcscpy>()  function is the wide-character equivalent of the "
"B<strcpy>(3)  function.  It copies the wide-character string pointed to by "
"I<src>, including the terminating null wide character (L\\(aq\\e0\\(aq), to "
"the array pointed to by I<dest>."
msgstr ""

#. type: Plain text
#: build/C/man3/wcscpy.3:49
msgid "B<wcscpy>()  returns I<dest>."
msgstr ""

#. type: tbl table
#: build/C/man3/wcscpy.3:59
#, no-wrap
msgid "B<wcscpy>()"
msgstr ""

#. type: Plain text
#: build/C/man3/wcscpy.3:69
msgid "B<strcpy>(3), B<wcpcpy>(3), B<wcscat>(3), B<wcsdup>(3), B<wmemcpy>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wcscspn.3:16
#, no-wrap
msgid "WCSCSPN"
msgstr ""

#. type: Plain text
#: build/C/man3/wcscspn.3:19
msgid "wcscspn - search a wide-character string for any of a set of wide characters"
msgstr ""

#. type: Plain text
#: build/C/man3/wcscspn.3:24
#, no-wrap
msgid "B<size_t wcscspn(const wchar_t *>I<wcs>B<, const wchar_t *>I<reject>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcscspn.3:42
msgid ""
"The B<wcscspn>()  function is the wide-character equivalent of the "
"B<strcspn>(3)  function.  It determines the length of the longest initial "
"segment of I<wcs> which consists entirely of wide-characters not listed in "
"I<reject>.  In other words, it searches for the first occurrence in the "
"wide-character string I<wcs> of any of the characters in the wide-character "
"string I<reject>."
msgstr ""

#. type: Plain text
#: build/C/man3/wcscspn.3:61
msgid ""
"The B<wcscspn>()  function returns the number of wide characters in the "
"longest initial segment of I<wcs> which consists entirely of wide-characters "
"not listed in I<reject>.  In other words, it returns the position of the "
"first occurrence in the wide-character string I<wcs> of any of the "
"characters in the wide-character string I<reject>, or I<wcslen(wcs)> if "
"there is none."
msgstr ""

#. type: tbl table
#: build/C/man3/wcscspn.3:71
#, no-wrap
msgid "B<wcscspn>()"
msgstr ""

#. type: Plain text
#: build/C/man3/wcscspn.3:79
msgid "B<strcspn>(3), B<wcspbrk>(3), B<wcsspn>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wcsdup.3:15
#, no-wrap
msgid "WCSDUP"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsdup.3:18
msgid "wcsdup - duplicate a wide-character string"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsdup.3:23
#, no-wrap
msgid "B<wchar_t *wcsdup(const wchar_t *>I<s>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsdup.3:31
msgid "B<wcsdup>():"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsdup.3:53
msgid ""
"The B<wcsdup>()  function is the wide-character equivalent of the "
"B<strdup>(3)  function.  It allocates and returns a new wide-character "
"string whose initial contents is a duplicate of the wide-character string "
"pointed to by I<s>."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsdup.3:59
msgid ""
"Memory for the new wide-character string is obtained with B<malloc>(3), and "
"should be freed with B<free>(3)."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsdup.3:66
msgid ""
"On success, B<wcsdup>()  returns a pointer to the new wide-character "
"string.  On error, it returns NULL, with I<errno> set to indicate the cause "
"of the error."
msgstr ""

#. type: SH
#: build/C/man3/wcsdup.3:66
#, no-wrap
msgid "ERRORS"
msgstr ""

#. type: TP
#: build/C/man3/wcsdup.3:67
#, no-wrap
msgid "B<ENOMEM>"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsdup.3:70
msgid "Insufficient memory available to allocate duplicate string."
msgstr ""

#. type: tbl table
#: build/C/man3/wcsdup.3:80
#, no-wrap
msgid "B<wcsdup>()"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsdup.3:91
msgid "B<strdup>(3), B<wcscpy>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wcslen.3:16
#, no-wrap
msgid "WCSLEN"
msgstr ""

#. type: Plain text
#: build/C/man3/wcslen.3:19
msgid "wcslen - determine the length of a wide-character string"
msgstr ""

#. type: Plain text
#: build/C/man3/wcslen.3:24
#, no-wrap
msgid "B<size_t wcslen(const wchar_t *>I<s>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcslen.3:36
msgid ""
"The B<wcslen>()  function is the wide-character equivalent of the "
"B<strlen>(3)  function.  It determines the length of the wide-character "
"string pointed to by I<s>, excluding the terminating null wide character "
"(L\\(aq\\e0\\(aq)."
msgstr ""

#. type: Plain text
#: build/C/man3/wcslen.3:42
msgid "The B<wcslen>()  function returns the number of wide characters in I<s>."
msgstr ""

#. type: tbl table
#: build/C/man3/wcslen.3:52
#, no-wrap
msgid "B<wcslen>()"
msgstr ""

#. type: Plain text
#: build/C/man3/wcslen.3:58
msgid "B<strlen>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wcsncasecmp.3:15
#, no-wrap
msgid "WCSNCASECMP"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsncasecmp.3:18
msgid "wcsncasecmp - compare two fixed-size wide-character strings, ignoring case"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsncasecmp.3:23
#, no-wrap
msgid ""
"B<int wcsncasecmp(const wchar_t *>I<s1>B<, const wchar_t *>I<s2>B<, size_t "
">I<n>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsncasecmp.3:31
msgid "B<wcsncasecmp>():"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsncasecmp.3:60
msgid ""
"The B<wcsncasecmp>()  function is the wide-character equivalent of the "
"B<strncasecmp>(3)  function.  It compares the wide-character string pointed "
"to by I<s1> and the wide-character string pointed to by I<s2>, but at most "
"I<n> wide characters from each string, ignoring case differences "
"(B<towupper>(3), B<towlower>(3))."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsncasecmp.3:84
msgid ""
"The B<wcsncasecmp>()  function returns zero if the wide-character strings at "
"I<s1> and I<s2>, truncated to at most length I<n>, are equal except for case "
"distinctions.  It returns a positive integer if truncated I<s1> is greater "
"than truncated I<s2>, ignoring case.  It returns a negative integer if "
"truncated I<s1> is smaller than truncated I<s2>, ignoring case."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsncasecmp.3:88
msgid "The B<wcsncasecmp>()  function is provided in glibc since version 2.1."
msgstr ""

#. type: tbl table
#: build/C/man3/wcsncasecmp.3:98
#, no-wrap
msgid "B<wcsncasecmp>()"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsncasecmp.3:111
msgid ""
"The behavior of B<wcsncasecmp>()  depends on the B<LC_CTYPE> category of the "
"current locale."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsncasecmp.3:114
msgid "B<strncasecmp>(3), B<wcsncmp>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wcsncat.3:16
#, no-wrap
msgid "WCSNCAT"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsncat.3:19
msgid "wcsncat - concatenate two wide-character strings"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsncat.3:24
#, no-wrap
msgid ""
"B<wchar_t *wcsncat(wchar_t *>I<dest>B<, const wchar_t *>I<src>B<, size_t "
">I<n>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsncat.3:40
msgid ""
"The B<wcsncat>()  function is the wide-character equivalent of the "
"B<strncat>(3)  function.  It copies at most I<n> wide characters from the "
"wide-character string pointed to by I<src> to the end of the wide-character "
"string pointed to by I<dest>, and adds a terminating null wide character "
"(L\\(aq\\e0\\(aq)."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsncat.3:47
msgid ""
"The programmer must ensure that there is room for at least "
"I<wcslen(dest)>+I<n>+1 wide characters at I<dest>."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsncat.3:51
msgid "B<wcsncat>()  returns I<dest>."
msgstr ""

#. type: tbl table
#: build/C/man3/wcsncat.3:61
#, no-wrap
msgid "B<wcsncat>()"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsncat.3:68
msgid "B<strncat>(3), B<wcscat>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wcsncmp.3:16
#, no-wrap
msgid "WCSNCMP"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsncmp.3:19
msgid "wcsncmp - compare two fixed-size wide-character strings"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsncmp.3:24
#, no-wrap
msgid ""
"B<int wcsncmp(const wchar_t *>I<s1>B<, const wchar_t *>I<s2>B<, size_t "
">I<n>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsncmp.3:42
msgid ""
"The B<wcsncmp>()  function is the wide-character equivalent of the "
"B<strncmp>(3)  function.  It compares the wide-character string pointed to "
"by I<s1> and the wide-character string pointed to by I<s2>, but at most I<n> "
"wide characters from each string.  In each string, the comparison extends "
"only up to the first occurrence of a null wide character (L\\(aq\\e0\\(aq), "
"if any."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsncmp.3:73
msgid ""
"The B<wcsncmp>()  function returns zero if the wide-character strings at "
"I<s1> and I<s2>, truncated to at most length I<n>, are equal.  It returns an "
"integer greater than zero if at the first differing position I<i> (I<i> "
"E<lt> I<n>), the corresponding wide-character I<s1[i]> is greater than "
"I<s2[i]>.  It returns an integer less than zero if at the first differing "
"position I<i> (I<i> E<lt> I<n>), the corresponding wide-character I<s1[i]> "
"is less than I<s2[i]>."
msgstr ""

#. type: tbl table
#: build/C/man3/wcsncmp.3:83
#, no-wrap
msgid "B<wcsncmp>()"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsncmp.3:90
msgid "B<strncmp>(3), B<wcsncasecmp>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wcsncpy.3:16
#, no-wrap
msgid "WCSNCPY"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsncpy.3:19
msgid "wcsncpy - copy a fixed-size string of wide characters"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsncpy.3:24
#, no-wrap
msgid ""
"B<wchar_t *wcsncpy(wchar_t *>I<dest>B<, const wchar_t *>I<src>B<, size_t "
">I<n>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsncpy.3:57
msgid ""
"The B<wcsncpy>()  function is the wide-character equivalent of the "
"B<strncpy>(3)  function.  It copies at most I<n> wide characters from the "
"wide-character string pointed to by I<src>, including the terminating null "
"wide character (L\\(aq\\e0\\(aq), to the array pointed to by I<dest>.  "
"Exactly I<n> wide characters are written at I<dest>.  If the length "
"I<wcslen(src)> is smaller than I<n>, the remaining wide characters in the "
"array pointed to by I<dest> are filled with null wide characters.  If the "
"length I<wcslen(src)> is greater than or equal to I<n>, the string pointed "
"to by I<dest> will not be terminated by a null wide character."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsncpy.3:69
msgid "B<wcsncpy>()  returns I<dest>."
msgstr ""

#. type: tbl table
#: build/C/man3/wcsncpy.3:79
#, no-wrap
msgid "B<wcsncpy>()"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsncpy.3:85
msgid "B<strncpy>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wcsnlen.3:15
#, no-wrap
msgid "WCSNLEN"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsnlen.3:18
msgid "wcsnlen - determine the length of a fixed-size wide-character string"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsnlen.3:23
#, no-wrap
msgid "B<size_t wcsnlen(const wchar_t *>I<s>B<, size_t >I<maxlen>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsnlen.3:31
msgid "B<wcsnlen>():"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsnlen.3:64
msgid ""
"The B<wcsnlen>()  function is the wide-character equivalent of the "
"B<strnlen>(3)  function.  It returns the number of wide-characters in the "
"string pointed to by I<s>, not including the terminating null wide character "
"(L\\(aq\\e0\\(aq), but at most I<maxlen> wide characters (note: this "
"parameter is not a byte count).  In doing this, B<wcsnlen>()  looks at only "
"the first I<maxlen> wide characters at I<s> and never beyond I<s+maxlen>."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsnlen.3:78
msgid ""
"The B<wcsnlen>()  function returns I<wcslen(s)>, if that is less than "
"I<maxlen>, or I<maxlen> if there is no null wide character among the first "
"I<maxlen> wide characters pointed to by I<s>."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsnlen.3:82
msgid "The B<wcsnlen>()  function is provided in glibc since version 2.1."
msgstr ""

#. type: tbl table
#: build/C/man3/wcsnlen.3:92
#, no-wrap
msgid "B<wcsnlen>()"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsnlen.3:99
msgid "B<strnlen>(3), B<wcslen>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wcsnrtombs.3:15
#, no-wrap
msgid "WCSNRTOMBS"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsnrtombs.3:18
msgid "wcsnrtombs - convert a wide-character string to a multibyte string"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsnrtombs.3:24
#, no-wrap
msgid ""
"B<size_t wcsnrtombs(char *>I<dest>B<, const wchar_t **>I<src>B<, size_t "
">I<nwc>B<,>\n"
"B<                  size_t >I<len>B<, mbstate_t *>I<ps>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsnrtombs.3:32
msgid "B<wcsnrtombs>():"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsnrtombs.3:55
msgid ""
"The B<wcsnrtombs>()  function is like the B<wcsrtombs>(3)  function, except "
"that the number of wide characters to be converted, starting at I<*src>, is "
"limited to I<nwc>."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsnrtombs.3:87
msgid ""
"If I<dest> is not NULL, the B<wcsnrtombs>()  function converts at most "
"I<nwc> wide characters from the wide-character string I<*src> to a multibyte "
"string starting at I<dest>.  At most I<len> bytes are written to I<dest>.  "
"The shift state I<*ps> is updated.  The conversion is effectively performed "
"by repeatedly calling I<wcrtomb(dest, *src, ps)>, as long as this call "
"succeeds, and then incrementing I<dest> by the number of bytes written and "
"I<*src> by one.  The conversion can stop for three reasons:"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsnrtombs.3:99 build/C/man3/wcsrtombs.3:67
msgid ""
"A wide character has been encountered that can not be represented as a "
"multibyte sequence (according to the current locale).  In this case, I<*src> "
"is left pointing to the invalid wide character, I<(size_t)\\ -1> is "
"returned, and I<errno> is set to B<EILSEQ>."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsnrtombs.3:111
msgid ""
"I<nwc> wide characters have been converted without encountering a null wide "
"character (L\\(aq\\e0\\(aq), or the length limit forces a stop.  In this "
"case, I<*src> is left pointing to the next wide character to be converted, "
"and the number of bytes written to I<dest> is returned."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsnrtombs.3:123
msgid ""
"The wide-character string has been completely converted, including the "
"terminating null wide character (which has the side effect of bringing back "
"I<*ps> to the initial state).  In this case, I<*src> is set to NULL, and the "
"number of bytes written to I<dest>, excluding the terminating null byte "
"(\\(aq\\e0\\(aq), is returned."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsnrtombs.3:132
msgid ""
"If I<dest> is NULL, I<len> is ignored, and the conversion proceeds as above, "
"except that the converted bytes are not written out to memory, and that no "
"destination length limit exists."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsnrtombs.3:140
msgid ""
"In both of the above cases, if I<ps> is NULL, a static anonymous state known "
"only to the B<wcsnrtombs>()  function is used instead."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsnrtombs.3:146 build/C/man3/wcsrtombs.3:112
msgid ""
"The programmer must ensure that there is room for at least I<len> bytes at "
"I<dest>."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsnrtombs.3:160
msgid ""
"The B<wcsnrtombs>()  function returns the number of bytes that make up the "
"converted part of multibyte sequence, not including the terminating null "
"byte.  If a wide character was encountered which could not be converted, "
"I<(size_t)\\ -1> is returned, and I<errno> set to B<EILSEQ>."
msgstr ""

#. type: tbl table
#: build/C/man3/wcsnrtombs.3:170
#, no-wrap
msgid "B<wcsnrtombs>()"
msgstr ""

#. type: tbl table
#: build/C/man3/wcsnrtombs.3:170
#, no-wrap
msgid "MT-Unsafe race:wcsnrtombs/!ps"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsnrtombs.3:182
msgid ""
"The behavior of B<wcsnrtombs>()  depends on the B<LC_CTYPE> category of the "
"current locale."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsnrtombs.3:190
msgid "B<iconv>(3), B<mbsinit>(3), B<wcsrtombs>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wcspbrk.3:16
#, no-wrap
msgid "WCSPBRK"
msgstr ""

#. type: Plain text
#: build/C/man3/wcspbrk.3:19
msgid "wcspbrk - search a wide-character string for any of a set of wide characters"
msgstr ""

#. type: Plain text
#: build/C/man3/wcspbrk.3:24
#, no-wrap
msgid ""
"B<wchar_t *wcspbrk(const wchar_t *>I<wcs>B<, const wchar_t "
"*>I<accept>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcspbrk.3:39
msgid ""
"The B<wcspbrk>()  function is the wide-character equivalent of the "
"B<strpbrk>(3)  function.  It searches for the first occurrence in the "
"wide-character string pointed to by I<wcs> of any of the characters in the "
"wide-character string pointed to by I<accept>."
msgstr ""

#. type: Plain text
#: build/C/man3/wcspbrk.3:49
msgid ""
"The B<wcspbrk>()  function returns a pointer to the first occurrence in "
"I<wcs> of any of the characters listed in I<accept>.  If I<wcs> contains "
"none of these characters, NULL is returned."
msgstr ""

#. type: tbl table
#: build/C/man3/wcspbrk.3:59
#, no-wrap
msgid "B<wcspbrk>()"
msgstr ""

#. type: Plain text
#: build/C/man3/wcspbrk.3:67
msgid "B<strpbrk>(3), B<wcschr>(3), B<wcscspn>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wcsrchr.3:16
#, no-wrap
msgid "WCSRCHR"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsrchr.3:19
msgid "wcsrchr - search a wide character in a wide-character string"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsrchr.3:24
#, no-wrap
msgid "B<wchar_t *wcsrchr(const wchar_t *>I<wcs>B<, wchar_t >I<wc>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsrchr.3:37
msgid ""
"The B<wcsrchr>()  function is the wide-character equivalent of the "
"B<strrchr>(3)  function.  It searches the last occurrence of I<wc> in the "
"wide-character string pointed to by I<wcs>."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsrchr.3:47
msgid ""
"The B<wcsrchr>()  function returns a pointer to the last occurrence of I<wc> "
"in the wide-character string pointed to by I<wcs>, or NULL if I<wc> does not "
"occur in the string."
msgstr ""

#. type: tbl table
#: build/C/man3/wcsrchr.3:57
#, no-wrap
msgid "B<wcsrchr>()"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsrchr.3:64
msgid "B<strrchr>(3), B<wcschr>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wcsrtombs.3:16
#, no-wrap
msgid "WCSRTOMBS"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsrtombs.3:19
msgid "wcsrtombs - convert a wide-character string to a multibyte string"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsrtombs.3:25
#, no-wrap
msgid ""
"B<size_t wcsrtombs(char *>I<dest>B<, const wchar_t **>I<src>B<,>\n"
"B<                 size_t >I<len>B<, mbstate_t *>I<ps>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsrtombs.3:55
msgid ""
"If I<dest> is not NULL, the B<wcsrtombs>()  function converts the "
"wide-character string I<*src> to a multibyte string starting at I<dest>.  At "
"most I<len> bytes are written to I<dest>.  The shift state I<*ps> is "
"updated.  The conversion is effectively performed by repeatedly calling "
"I<wcrtomb(dest, *src, ps)>, as long as this call succeeds, and then "
"incrementing I<dest> by the number of bytes written and I<*src> by one.  The "
"conversion can stop for three reasons:"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsrtombs.3:76
msgid ""
"The length limit forces a stop.  In this case, I<*src> is left pointing to "
"the next wide character to be converted, and the number of bytes written to "
"I<dest> is returned."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsrtombs.3:89
msgid ""
"The wide-character string has been completely converted, including the "
"terminating null wide character (L\\(aq\\e0\\(aq), which has the side effect "
"of bringing back I<*ps> to the initial state.  In this case, I<*src> is set "
"to NULL, and the number of bytes written to I<dest>, excluding the "
"terminating null byte (\\(aq\\e0\\(aq), is returned."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsrtombs.3:98
msgid ""
"If I<dest> is NULL, I<len> is ignored, and the conversion proceeds as above, "
"except that the converted bytes are not written out to memory, and that no "
"length limit exists."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsrtombs.3:106
msgid ""
"In both of the above cases, if I<ps> is NULL, a static anonymous state known "
"only to the B<wcsrtombs>()  function is used instead."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsrtombs.3:126
msgid ""
"The B<wcsrtombs>()  function returns the number of bytes that make up the "
"converted part of multibyte sequence, not including the terminating null "
"byte.  If a wide character was encountered which could not be converted, "
"I<(size_t)\\ -1> is returned, and I<errno> set to B<EILSEQ>."
msgstr ""

#. type: tbl table
#: build/C/man3/wcsrtombs.3:136
#, no-wrap
msgid "B<wcsrtombs>()"
msgstr ""

#. type: tbl table
#: build/C/man3/wcsrtombs.3:136
#, no-wrap
msgid "MT-Unsafe race:wcsrtombs/!ps"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsrtombs.3:148
msgid ""
"The behavior of B<wcsrtombs>()  depends on the B<LC_CTYPE> category of the "
"current locale."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsrtombs.3:158
msgid "B<iconv>(3), B<mbsinit>(3), B<wcrtomb>(3), B<wcsnrtombs>(3), B<wcstombs>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wcsspn.3:16
#, no-wrap
msgid "WCSSPN"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsspn.3:20
msgid ""
"wcsspn - advance in a wide-character string, skipping any of a set of wide "
"characters"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsspn.3:25
#, no-wrap
msgid "B<size_t wcsspn(const wchar_t *>I<wcs>B<, const wchar_t *>I<accept>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsspn.3:41
msgid ""
"The B<wcsspn>()  function is the wide-character equivalent of the "
"B<strspn>(3)  function.  It determines the length of the longest initial "
"segment of I<wcs> which consists entirely of wide-characters listed in "
"I<accept>.  In other words, it searches for the first occurrence in the "
"wide-character string I<wcs> of a wide-character not contained in the "
"wide-character string I<accept>."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsspn.3:60
msgid ""
"The B<wcsspn>()  function returns the number of wide characters in the "
"longest initial segment of I<wcs> which consists entirely of wide-characters "
"listed in I<accept>.  In other words, it returns the position of the first "
"occurrence in the wide-character string I<wcs> of a wide-character not "
"contained in the wide-character string I<accept>, or I<wcslen(wcs)> if there "
"is none."
msgstr ""

#. type: tbl table
#: build/C/man3/wcsspn.3:70
#, no-wrap
msgid "B<wcsspn>()"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsspn.3:77
msgid "B<strspn>(3), B<wcscspn>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wcsstr.3:16
#, no-wrap
msgid "WCSSTR"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsstr.3:19
msgid "wcsstr - locate a substring in a wide-character string"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsstr.3:24
#, no-wrap
msgid ""
"B<wchar_t *wcsstr(const wchar_t *>I<haystack>B<, const wchar_t "
"*>I<needle>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsstr.3:36
msgid ""
"The B<wcsstr>()  function is the wide-character equivalent of the "
"B<strstr>(3)  function.  It searches for the first occurrence of the "
"wide-character string I<needle> (without its terminating null wide character "
"(L\\(aq\\e0\\(aq))  as a substring in the wide-character string I<haystack>."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsstr.3:48
msgid ""
"The B<wcsstr>()  function returns a pointer to the first occurrence of "
"I<needle> in I<haystack>.  It returns NULL if I<needle> does not occur as a "
"substring in I<haystack>."
msgstr ""

#. type: Plain text
#: build/C/man3/wcsstr.3:56
msgid ""
"Note the special case: If I<needle> is the empty wide-character string, the "
"return value is always I<haystack> itself."
msgstr ""

#. type: tbl table
#: build/C/man3/wcsstr.3:66
#, no-wrap
msgid "B<wcsstr>()"
msgstr ""

#. type: Plain text
#: build/C/man3/wcsstr.3:73
msgid "B<strstr>(3), B<wcschr>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wcstoimax.3:24
#, no-wrap
msgid "WCSTOIMAX"
msgstr ""

#. type: Plain text
#: build/C/man3/wcstoimax.3:27
msgid "wcstoimax, wcstoumax - convert wide-character string to integer"
msgstr ""

#. type: Plain text
#: build/C/man3/wcstoimax.3:31
#, no-wrap
msgid ""
"B<#include E<lt>stddef.hE<gt>>\n"
"B<#include E<lt>inttypes.hE<gt>>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcstoimax.3:36
#, no-wrap
msgid ""
"B<intmax_t wcstoimax(const wchar_t *>I<nptr>B<, wchar_t **>I<endptr>B<, int "
">I<base>B<);>\n"
"B<uintmax_t wcstoumax(const wchar_t *>I<nptr>B<, wchar_t **>I<endptr>B<, int "
">I<base>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcstoimax.3:47
msgid ""
"These functions are just like B<wcstol>(3)  and B<wcstoul>(3), except that "
"they return a value of type I<intmax_t> and I<uintmax_t>, respectively."
msgstr ""

#. type: tbl table
#: build/C/man3/wcstoimax.3:58
#, no-wrap
msgid ""
"B<wcstoimax>(),\n"
"B<wcstoumax>()"
msgstr ""

#.  FIXME . the pages referred to by the following xrefs are not yet written
#. type: Plain text
#: build/C/man3/wcstoimax.3:70
msgid ""
"B<imaxabs>(3), B<imaxdiv>(3), B<strtoimax>(3), B<strtoumax>(3), "
"B<wcstol>(3), B<wcstoul>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wcstok.3:16
#, no-wrap
msgid "WCSTOK"
msgstr ""

#. type: Plain text
#: build/C/man3/wcstok.3:19
msgid "wcstok - split wide-character string into tokens"
msgstr ""

#. type: Plain text
#: build/C/man3/wcstok.3:25
#, no-wrap
msgid ""
"B<wchar_t *wcstok(wchar_t *>I<wcs>B<, const wchar_t *>I<delim>B<, wchar_t "
"**>I<ptr>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcstok.3:39
msgid ""
"The B<wcstok>()  function is the wide-character equivalent of the "
"B<strtok>(3)  function, with an added argument to make it multithread-safe.  "
"It can be used to split a wide-character string I<wcs> into tokens, where a "
"token is defined as a substring not containing any wide-characters from "
"I<delim>."
msgstr ""

#. type: Plain text
#: build/C/man3/wcstok.3:74
msgid ""
"The search starts at I<wcs>, if I<wcs> is not NULL, or at I<*ptr>, if I<wcs> "
"is NULL.  First, any delimiter wide-characters are skipped, that is, the "
"pointer is advanced beyond any wide-characters which occur in I<delim>.  If "
"the end of the wide-character string is now reached, B<wcstok>()  returns "
"NULL, to indicate that no tokens were found, and stores an appropriate value "
"in I<*ptr>, so that subsequent calls to B<wcstok>()  will continue to return "
"NULL.  Otherwise, the B<wcstok>()  function recognizes the beginning of a "
"token and returns a pointer to it, but before doing that, it zero-terminates "
"the token by replacing the next wide-character which occurs in I<delim> with "
"a null wide character (L\\(aq\\e0\\(aq), and it updates I<*ptr> so that "
"subsequent calls will continue searching after the end of recognized token."
msgstr ""

#. type: Plain text
#: build/C/man3/wcstok.3:79
msgid ""
"The B<wcstok>()  function returns a pointer to the next token, or NULL if no "
"further token was found."
msgstr ""

#. type: tbl table
#: build/C/man3/wcstok.3:89
#, no-wrap
msgid "B<wcstok>()"
msgstr ""

#. type: Plain text
#: build/C/man3/wcstok.3:98
msgid ""
"The original I<wcs> wide-character string is destructively modified during "
"the operation."
msgstr ""

#. type: SH
#: build/C/man3/wcstok.3:98
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Plain text
#: build/C/man3/wcstok.3:100
msgid ""
"The following code loops over the tokens contained in a wide-character "
"string."
msgstr ""

#. type: Plain text
#: build/C/man3/wcstok.3:110
#, no-wrap
msgid ""
"wchar_t *wcs = ...;\n"
"wchar_t *token;\n"
"wchar_t *state;\n"
"for (token = wcstok(wcs, \" \\et\\en\", &state);\n"
"    token != NULL;\n"
"    token = wcstok(NULL, \" \\et\\en\", &state)) {\n"
"    ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcstok.3:114
msgid "B<strtok>(3), B<wcschr>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wcswidth.3:15
#, no-wrap
msgid "WCSWIDTH"
msgstr ""

#. type: Plain text
#: build/C/man3/wcswidth.3:18
msgid "wcswidth - determine columns needed for a fixed-size wide-character string"
msgstr ""

#. type: Plain text
#: build/C/man3/wcswidth.3:22
#, no-wrap
msgid ""
"B<#define _XOPEN_SOURCE>             /* See feature_test_macros(7) */\n"
"B<#include E<lt>wchar.hE<gt>>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcswidth.3:24
#, no-wrap
msgid "B<int wcswidth(const wchar_t *>I<s>B<, size_t >I<n>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcswidth.3:38
msgid ""
"The B<wcswidth>()  function returns the number of columns needed to "
"represent the wide-character string pointed to by I<s>, but at most I<n> "
"wide characters.  If a nonprintable wide character occurs among these "
"characters, -1 is returned."
msgstr ""

#. type: Plain text
#: build/C/man3/wcswidth.3:47
msgid ""
"The B<wcswidth>()  function returns the number of column positions for the "
"wide-character string I<s>, truncated to at most length I<n>."
msgstr ""

#. type: tbl table
#: build/C/man3/wcswidth.3:57
#, no-wrap
msgid "B<wcswidth>()"
msgstr ""

#. type: Plain text
#: build/C/man3/wcswidth.3:61 build/C/man3/wcwidth.3:59
msgid "POSIX.1-2001, POSIX.1-2008."
msgstr ""

#. type: Plain text
#: build/C/man3/wcswidth.3:68
msgid ""
"The behavior of B<wcswidth>()  depends on the B<LC_CTYPE> category of the "
"current locale."
msgstr ""

#. type: Plain text
#: build/C/man3/wcswidth.3:71
msgid "B<iswprint>(3), B<wcwidth>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wctob.3:16
#, no-wrap
msgid "WCTOB"
msgstr ""

#. type: Plain text
#: build/C/man3/wctob.3:19
msgid "wctob - try to represent a wide character as a single byte"
msgstr ""

#. type: Plain text
#: build/C/man3/wctob.3:24
#, no-wrap
msgid "B<int wctob(wint_t >I<c>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wctob.3:36
msgid ""
"The B<wctob>()  function tests whether the multibyte representation of the "
"wide character I<c>, starting in the initial state, consists of a single "
"byte.  If so, it is returned as an I<unsigned char>."
msgstr ""

#. type: Plain text
#: build/C/man3/wctob.3:42
msgid ""
"Never use this function.  It cannot help you in writing internationalized "
"programs.  Internationalized programs must never distinguish single-byte and "
"multibyte characters."
msgstr ""

#. type: Plain text
#: build/C/man3/wctob.3:50
msgid ""
"The B<wctob>()  function returns the single-byte representation of I<c>, if "
"it exists, or B<EOF> otherwise."
msgstr ""

#. type: tbl table
#: build/C/man3/wctob.3:60
#, no-wrap
msgid "B<wctob>()"
msgstr ""

#. type: Plain text
#: build/C/man3/wctob.3:72
msgid ""
"The behavior of B<wctob>()  depends on the B<LC_CTYPE> category of the "
"current locale."
msgstr ""

#. type: Plain text
#: build/C/man3/wctob.3:81
msgid ""
"This function should never be used.  Internationalized programs must never "
"distinguish single-byte and multibyte characters.  Use either B<wctomb>(3)  "
"or the thread-safe B<wcrtomb>(3)  instead."
msgstr ""

#. type: Plain text
#: build/C/man3/wctob.3:85
msgid "B<btowc>(3), B<wcrtomb>(3), B<wctomb>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wcwidth.3:15
#, no-wrap
msgid "WCWIDTH"
msgstr ""

#. type: Plain text
#: build/C/man3/wcwidth.3:18
msgid "wcwidth - determine columns needed for a wide character"
msgstr ""

#. type: Plain text
#: build/C/man3/wcwidth.3:22
#, no-wrap
msgid ""
"B<#define _XOPEN_SOURCE>       /* See feature_test_macros(7) */\n"
"B<#include E<lt>wchar.hE<gt>>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcwidth.3:24
#, no-wrap
msgid "B<int wcwidth(wchar_t >I<c>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcwidth.3:39
msgid ""
"The B<wcwidth>()  function returns the number of columns needed to represent "
"the wide character I<c>.  If I<c> is a printable wide character, the value "
"is at least 0.  If I<c> is null wide character (L\\(aq\\e0\\(aq), the value "
"is 0.  Otherwise, -1 is returned."
msgstr ""

#. type: Plain text
#: build/C/man3/wcwidth.3:45
msgid "The B<wcwidth>()  function returns the number of column positions for I<c>."
msgstr ""

#. type: tbl table
#: build/C/man3/wcwidth.3:55
#, no-wrap
msgid "B<wcwidth>()"
msgstr ""

#. type: Plain text
#: build/C/man3/wcwidth.3:61
msgid "Note that glibc before 2.2.5 used the prototype"
msgstr ""

#. type: Plain text
#: build/C/man3/wcwidth.3:64
#, no-wrap
msgid "B<int wcwidth(wint_t >I<c>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wcwidth.3:72
msgid ""
"The behavior of B<wcwidth>()  depends on the B<LC_CTYPE> category of the "
"current locale."
msgstr ""

#. type: Plain text
#: build/C/man3/wcwidth.3:75
msgid "B<iswprint>(3), B<wcswidth>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wmemchr.3:16
#, no-wrap
msgid "WMEMCHR"
msgstr ""

#. type: Plain text
#: build/C/man3/wmemchr.3:19
msgid "wmemchr - search a wide character in a wide-character array"
msgstr ""

#. type: Plain text
#: build/C/man3/wmemchr.3:24
#, no-wrap
msgid ""
"B<wchar_t *wmemchr(const wchar_t *>I<s>B<, wchar_t >I<c>B<, size_t "
">I<n>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wmemchr.3:38
msgid ""
"The B<wmemchr>()  function is the wide-character equivalent of the "
"B<memchr>(3)  function.  It searches the I<n> wide characters starting at "
"I<s> for the first occurrence of the wide character I<c>."
msgstr ""

#. type: Plain text
#: build/C/man3/wmemchr.3:51
msgid ""
"The B<wmemchr>()  function returns a pointer to the first occurrence of I<c> "
"among the I<n> wide characters starting at I<s>, or NULL if I<c> does not "
"occur among these."
msgstr ""

#. type: tbl table
#: build/C/man3/wmemchr.3:61
#, no-wrap
msgid "B<wmemchr>()"
msgstr ""

#. type: Plain text
#: build/C/man3/wmemchr.3:68
msgid "B<memchr>(3), B<wcschr>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wmemcmp.3:15
#, no-wrap
msgid "WMEMCMP"
msgstr ""

#. type: Plain text
#: build/C/man3/wmemcmp.3:18
msgid "wmemcmp - compare two arrays of wide-characters"
msgstr ""

#. type: Plain text
#: build/C/man3/wmemcmp.3:23
#, no-wrap
msgid ""
"B<int wmemcmp(const wchar_t *>I<s1>B<, const wchar_t *>I<s2>B<, size_t "
">I<n>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wmemcmp.3:38
msgid ""
"The B<wmemcmp>()  function is the wide-character equivalent of the "
"B<memcmp>(3)  function.  It compares the I<n> wide-characters starting at "
"I<s1> and the I<n> wide-characters starting at I<s2>."
msgstr ""

#. type: Plain text
#: build/C/man3/wmemcmp.3:70
msgid ""
"The B<wmemcmp>()  function returns zero if the wide-character arrays of size "
"I<n> at I<s1> and I<s2> are equal.  It returns an integer greater than zero "
"if at the first differing position I<i> (I<i> E<lt> I<n>), the corresponding "
"wide-character I<s1[i]> is greater than I<s2[i]>.  It returns an integer "
"less than zero if at the first differing position I<i> (I<i> E<lt> I<n>), "
"the corresponding wide-character I<s1[i]> is less than I<s2[i]>."
msgstr ""

#. type: tbl table
#: build/C/man3/wmemcmp.3:80
#, no-wrap
msgid "B<wmemcmp>()"
msgstr ""

#. type: Plain text
#: build/C/man3/wmemcmp.3:87
msgid "B<memcmp>(3), B<wcscmp>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wmemcpy.3:16
#, no-wrap
msgid "WMEMCPY"
msgstr ""

#. type: Plain text
#: build/C/man3/wmemcpy.3:19
msgid "wmemcpy - copy an array of wide-characters"
msgstr ""

#. type: Plain text
#: build/C/man3/wmemcpy.3:24
#, no-wrap
msgid ""
"B<wchar_t *wmemcpy(wchar_t *>I<dest>B<, const wchar_t *>I<src>B<, size_t "
">I<n>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wmemcpy.3:37
msgid ""
"The B<wmemcpy>()  function is the wide-character equivalent of the "
"B<memcpy>(3)  function.  It copies I<n> wide characters from the array "
"starting at I<src> to the array starting at I<dest>."
msgstr ""

#. type: Plain text
#: build/C/man3/wmemcpy.3:42
msgid ""
"The arrays may not overlap; use B<wmemmove>(3)  to copy between overlapping "
"arrays."
msgstr ""

#. type: Plain text
#: build/C/man3/wmemcpy.3:52
msgid "B<wmemcpy>()  returns I<dest>."
msgstr ""

#. type: tbl table
#: build/C/man3/wmemcpy.3:62
#, no-wrap
msgid "B<wmemcpy>()"
msgstr ""

#. type: Plain text
#: build/C/man3/wmemcpy.3:71
msgid "B<memcpy>(3), B<wcscpy>(3), B<wmemmove>(3), B<wmempcpy>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wmemmove.3:16
#, no-wrap
msgid "WMEMMOVE"
msgstr ""

#. type: Plain text
#: build/C/man3/wmemmove.3:19
msgid "wmemmove - copy an array of wide-characters"
msgstr ""

#. type: Plain text
#: build/C/man3/wmemmove.3:24
#, no-wrap
msgid ""
"B<wchar_t *wmemmove(wchar_t *>I<dest>B<, const wchar_t *>I<src>B<, size_t "
">I<n>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wmemmove.3:40
msgid ""
"The B<wmemmove>()  function is the wide-character equivalent of the "
"B<memmove>(3)  function.  It copies I<n> wide characters from the array "
"starting at I<src> to the array starting at I<dest>.  The arrays may "
"overlap."
msgstr ""

#. type: Plain text
#: build/C/man3/wmemmove.3:50
msgid "B<wmemmove>()  returns I<dest>."
msgstr ""

#. type: tbl table
#: build/C/man3/wmemmove.3:60
#, no-wrap
msgid "B<wmemmove>()"
msgstr ""

#. type: Plain text
#: build/C/man3/wmemmove.3:67
msgid "B<memmove>(3), B<wmemcpy>(3)"
msgstr ""

#. type: TH
#: build/C/man3/wmemset.3:16
#, no-wrap
msgid "WMEMSET"
msgstr ""

#. type: Plain text
#: build/C/man3/wmemset.3:19
msgid "wmemset - fill an array of wide-characters with a constant wide character"
msgstr ""

#. type: Plain text
#: build/C/man3/wmemset.3:24
#, no-wrap
msgid "B<wchar_t *wmemset(wchar_t *>I<wcs>B<, wchar_t >I<wc>B<, size_t >I<n>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/wmemset.3:39
msgid ""
"The B<wmemset>()  function is the wide-character equivalent of the "
"B<memset>(3)  function.  It fills the array of I<n> wide-characters starting "
"at I<wcs> with I<n> copies of the wide character I<wc>."
msgstr ""

#. type: Plain text
#: build/C/man3/wmemset.3:43
msgid "B<wmemset>()  returns I<wcs>."
msgstr ""

#. type: tbl table
#: build/C/man3/wmemset.3:53
#, no-wrap
msgid "B<wmemset>()"
msgstr ""

#. type: Plain text
#: build/C/man3/wmemset.3:59
msgid "B<memset>(3)"
msgstr ""
