# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-03-12 14:00+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#: build/C/man7/aio.7:25
#, no-wrap
msgid "AIO"
msgstr ""

#. type: TH
#: build/C/man7/aio.7:25 build/C/man3/aio_init.3:25
#, no-wrap
msgid "2020-08-13"
msgstr ""

#. type: TH
#: build/C/man7/aio.7:25 build/C/man3/aio_init.3:25 build/C/man2/io_cancel.2:7 build/C/man2/io_destroy.2:7 build/C/man2/io_getevents.2:7 build/C/man2/io_setup.2:7 build/C/man2/io_submit.2:8
#, no-wrap
msgid "Linux"
msgstr ""

#. type: TH
#: build/C/man7/aio.7:25 build/C/man3/aio_cancel.3:24 build/C/man3/aio_error.3:24 build/C/man3/aio_fsync.3:24 build/C/man3/aio_init.3:25 build/C/man3/aio_read.3:24 build/C/man3/aio_return.3:24 build/C/man3/aio_suspend.3:25 build/C/man3/aio_write.3:24 build/C/man2/io_cancel.2:7 build/C/man2/io_destroy.2:7 build/C/man2/io_getevents.2:7 build/C/man2/io_setup.2:7 build/C/man2/io_submit.2:8 build/C/man3/lio_listio.3:24
#, no-wrap
msgid "Linux Programmer's Manual"
msgstr ""

#. type: SH
#: build/C/man7/aio.7:26 build/C/man3/aio_cancel.3:25 build/C/man3/aio_error.3:25 build/C/man3/aio_fsync.3:25 build/C/man3/aio_init.3:26 build/C/man3/aio_read.3:25 build/C/man3/aio_return.3:25 build/C/man3/aio_suspend.3:26 build/C/man3/aio_write.3:25 build/C/man2/io_cancel.2:8 build/C/man2/io_destroy.2:8 build/C/man2/io_getevents.2:8 build/C/man2/io_setup.2:8 build/C/man2/io_submit.2:9 build/C/man3/lio_listio.3:25
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:28
msgid "aio - POSIX asynchronous I/O overview"
msgstr ""

#. type: SH
#: build/C/man7/aio.7:28 build/C/man3/aio_cancel.3:33 build/C/man3/aio_error.3:33 build/C/man3/aio_fsync.3:33 build/C/man3/aio_init.3:37 build/C/man3/aio_read.3:33 build/C/man3/aio_return.3:33 build/C/man3/aio_suspend.3:38 build/C/man3/aio_write.3:33 build/C/man2/io_cancel.2:20 build/C/man2/io_destroy.2:19 build/C/man2/io_getevents.2:22 build/C/man2/io_setup.2:19 build/C/man2/io_submit.2:21 build/C/man3/lio_listio.3:36
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:36
msgid ""
"The POSIX asynchronous I/O (AIO) interface allows applications to initiate "
"one or more I/O operations that are performed asynchronously (i.e., in the "
"background).  The application can elect to be notified of completion of the "
"I/O operation in a variety of ways: by delivery of a signal, by "
"instantiation of a thread, or no notification at all."
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:38
msgid "The POSIX AIO interface consists of the following functions:"
msgstr ""

#. type: TP
#: build/C/man7/aio.7:38
#, no-wrap
msgid "B<aio_read>(3)"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:43
msgid "Enqueue a read request.  This is the asynchronous analog of B<read>(2)."
msgstr ""

#. type: TP
#: build/C/man7/aio.7:43
#, no-wrap
msgid "B<aio_write>(3)"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:48
msgid "Enqueue a write request.  This is the asynchronous analog of B<write>(2)."
msgstr ""

#. type: TP
#: build/C/man7/aio.7:48
#, no-wrap
msgid "B<aio_fsync>(3)"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:55
msgid ""
"Enqueue a sync request for the I/O operations on a file descriptor.  This is "
"the asynchronous analog of B<fsync>(2)  and B<fdatasync>(2)."
msgstr ""

#. type: TP
#: build/C/man7/aio.7:55
#, no-wrap
msgid "B<aio_error>(3)"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:58
msgid "Obtain the error status of an enqueued I/O request."
msgstr ""

#. type: TP
#: build/C/man7/aio.7:58
#, no-wrap
msgid "B<aio_return>(3)"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:61
msgid "Obtain the return status of a completed I/O request."
msgstr ""

#. type: TP
#: build/C/man7/aio.7:61
#, no-wrap
msgid "B<aio_suspend>(3)"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:65
msgid ""
"Suspend the caller until one or more of a specified set of I/O requests "
"completes."
msgstr ""

#. type: TP
#: build/C/man7/aio.7:65
#, no-wrap
msgid "B<aio_cancel>(3)"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:69
msgid "Attempt to cancel outstanding I/O requests on a specified file descriptor."
msgstr ""

#. type: TP
#: build/C/man7/aio.7:69
#, no-wrap
msgid "B<lio_listio>(3)"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:72
msgid "Enqueue multiple I/O requests using a single function call."
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:79
msgid ""
"The I<aiocb> (\"asynchronous I/O control block\") structure defines "
"parameters that control an I/O operation.  An argument of this type is "
"employed with all of the functions listed above.  This structure has the "
"following form:"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:83
#, no-wrap
msgid "#include E<lt>aiocb.hE<gt>\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:86
#, no-wrap
msgid ""
"struct aiocb {\n"
"    /* The order of these fields is implementation-dependent */\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:95
#, no-wrap
msgid ""
"    int             aio_fildes;     /* File descriptor */\n"
"    off_t           aio_offset;     /* File offset */\n"
"    volatile void  *aio_buf;        /* Location of buffer */\n"
"    size_t          aio_nbytes;     /* Length of transfer */\n"
"    int             aio_reqprio;    /* Request priority */\n"
"    struct sigevent aio_sigevent;   /* Notification method */\n"
"    int             aio_lio_opcode; /* Operation to be performed;\n"
"                                       lio_listio() only */\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:98
#, no-wrap
msgid ""
"    /* Various implementation-internal fields not shown */\n"
"};\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:100
#, no-wrap
msgid "/* Operation codes for \\(aqaio_lio_opcode\\(aq: */\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:102
#, no-wrap
msgid "enum { LIO_READ, LIO_WRITE, LIO_NOP };\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:106 build/C/man2/io_submit.2:68
msgid "The fields of this structure are as follows:"
msgstr ""

#. type: TP
#: build/C/man7/aio.7:106 build/C/man2/io_submit.2:165
#, no-wrap
msgid "I<aio_fildes>"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:109 build/C/man2/io_submit.2:168
msgid "The file descriptor on which the I/O operation is to be performed."
msgstr ""

#. type: TP
#: build/C/man7/aio.7:109 build/C/man2/io_submit.2:175
#, no-wrap
msgid "I<aio_offset>"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:112 build/C/man2/io_submit.2:178
msgid "This is the file offset at which the I/O operation is to be performed."
msgstr ""

#. type: TP
#: build/C/man7/aio.7:112 build/C/man2/io_submit.2:168
#, no-wrap
msgid "I<aio_buf>"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:115 build/C/man2/io_submit.2:171
msgid "This is the buffer used to transfer data for a read or write operation."
msgstr ""

#. type: TP
#: build/C/man7/aio.7:115 build/C/man2/io_submit.2:171
#, no-wrap
msgid "I<aio_nbytes>"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:119 build/C/man2/io_submit.2:175
msgid "This is the size of the buffer pointed to by I<aio_buf>."
msgstr ""

#. type: TP
#: build/C/man7/aio.7:119 build/C/man2/io_submit.2:162
#, no-wrap
msgid "I<aio_reqprio>"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:128
msgid ""
"This field specifies a value that is subtracted from the calling thread's "
"real-time priority in order to determine the priority for execution of this "
"I/O request (see B<pthread_setschedparam>(3)).  The specified value must be "
"between 0 and the value returned by I<sysconf(_SC_AIO_PRIO_DELTA_MAX)>.  "
"This field is ignored for file synchronization operations."
msgstr ""

#. type: TP
#: build/C/man7/aio.7:128
#, no-wrap
msgid "I<aio_sigevent>"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:142
msgid ""
"This field is a structure that specifies how the caller is to be notified "
"when the asynchronous I/O operation completes.  Possible values for "
"I<aio_sigevent.sigev_notify> are B<SIGEV_NONE>, B<SIGEV_SIGNAL>, and "
"B<SIGEV_THREAD>.  See B<sigevent>(7)  for further details."
msgstr ""

#. type: TP
#: build/C/man7/aio.7:142 build/C/man2/io_submit.2:139
#, no-wrap
msgid "I<aio_lio_opcode>"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:146
msgid "The type of operation to be performed; used only for B<lio_listio>(3)."
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:149
msgid ""
"In addition to the standard functions listed above, the GNU C library "
"provides the following extension to the POSIX AIO API:"
msgstr ""

#. type: TP
#: build/C/man7/aio.7:149
#, no-wrap
msgid "B<aio_init>(3)"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:152
msgid ""
"Set parameters for tuning the behavior of the glibc POSIX AIO "
"implementation."
msgstr ""

#. type: SH
#: build/C/man7/aio.7:152 build/C/man3/aio_cancel.3:101 build/C/man3/aio_error.3:66 build/C/man3/aio_fsync.3:79 build/C/man3/aio_read.3:103 build/C/man3/aio_return.3:64 build/C/man3/aio_suspend.3:87 build/C/man3/aio_write.3:110 build/C/man2/io_cancel.2:50 build/C/man2/io_destroy.2:42 build/C/man2/io_getevents.2:73 build/C/man2/io_setup.2:45 build/C/man2/io_submit.2:210 build/C/man3/lio_listio.3:146
#, no-wrap
msgid "ERRORS"
msgstr ""

#. type: TP
#: build/C/man7/aio.7:153 build/C/man3/aio_error.3:67 build/C/man3/aio_fsync.3:87 build/C/man3/aio_read.3:111 build/C/man3/aio_return.3:65 build/C/man3/aio_write.3:122 build/C/man2/io_cancel.2:57 build/C/man2/io_destroy.2:46 build/C/man2/io_getevents.2:81 build/C/man2/io_setup.2:56 build/C/man2/io_submit.2:220 build/C/man3/lio_listio.3:171
#, no-wrap
msgid "B<EINVAL>"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:162
msgid ""
"The I<aio_reqprio> field of the I<aiocb> structure was less than 0, or was "
"greater than the limit returned by the call "
"I<sysconf(_SC_AIO_PRIO_DELTA_MAX)>."
msgstr ""

#. type: SH
#: build/C/man7/aio.7:162 build/C/man3/aio_cancel.3:110 build/C/man3/aio_error.3:78 build/C/man3/aio_fsync.3:99 build/C/man3/aio_init.3:92 build/C/man3/aio_read.3:128 build/C/man3/aio_return.3:74 build/C/man3/aio_suspend.3:102 build/C/man3/aio_write.3:133 build/C/man2/io_cancel.2:64 build/C/man2/io_destroy.2:53 build/C/man2/io_getevents.2:90 build/C/man2/io_setup.2:68 build/C/man2/io_submit.2:243 build/C/man3/lio_listio.3:202
#, no-wrap
msgid "VERSIONS"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:164
msgid "The POSIX AIO interfaces are provided by glibc since version 2.1."
msgstr ""

#. type: SH
#: build/C/man7/aio.7:164 build/C/man3/aio_cancel.3:126 build/C/man3/aio_error.3:94 build/C/man3/aio_fsync.3:115 build/C/man3/aio_init.3:96 build/C/man3/aio_read.3:144 build/C/man3/aio_return.3:90 build/C/man3/aio_suspend.3:118 build/C/man3/aio_write.3:149 build/C/man2/io_cancel.2:66 build/C/man2/io_destroy.2:55 build/C/man2/io_getevents.2:92 build/C/man2/io_setup.2:70 build/C/man2/io_submit.2:245 build/C/man3/lio_listio.3:219
#, no-wrap
msgid "CONFORMING TO"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:166 build/C/man3/aio_cancel.3:128 build/C/man3/aio_error.3:96 build/C/man3/aio_fsync.3:117 build/C/man3/aio_read.3:146 build/C/man3/aio_return.3:92 build/C/man3/aio_suspend.3:120 build/C/man3/aio_write.3:151 build/C/man3/lio_listio.3:221
msgid "POSIX.1-2001, POSIX.1-2008."
msgstr ""

#. type: SH
#: build/C/man7/aio.7:166 build/C/man3/aio_read.3:146 build/C/man3/aio_suspend.3:120 build/C/man3/aio_write.3:151 build/C/man2/io_cancel.2:70 build/C/man2/io_destroy.2:59 build/C/man2/io_getevents.2:96 build/C/man2/io_setup.2:74 build/C/man2/io_submit.2:249 build/C/man3/lio_listio.3:221
#, no-wrap
msgid "NOTES"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:173
msgid ""
"It is a good idea to zero out the control block buffer before use (see "
"B<memset>(3)).  The control block buffer and the buffer pointed to by "
"I<aio_buf> must not be changed while the I/O operation is in progress.  "
"These buffers must remain valid until the I/O operation completes."
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:177
msgid ""
"Simultaneous asynchronous read or write operations using the same I<aiocb> "
"structure yield undefined results."
msgstr ""

#.  http://lse.sourceforge.net/io/aio.html
#.  http://lse.sourceforge.net/io/aionotes.txt
#.  http://lwn.net/Articles/148755/
#. type: Plain text
#: build/C/man7/aio.7:195
msgid ""
"The current Linux POSIX AIO implementation is provided in user space by "
"glibc.  This has a number of limitations, most notably that maintaining "
"multiple threads to perform I/O operations is expensive and scales poorly.  "
"Work has been in progress for some time on a kernel state-machine-based "
"implementation of asynchronous I/O (see B<io_submit>(2), B<io_setup>(2), "
"B<io_cancel>(2), B<io_destroy>(2), B<io_getevents>(2)), but this "
"implementation hasn't yet matured to the point where the POSIX AIO "
"implementation can be completely reimplemented using the kernel system "
"calls."
msgstr ""

#. type: SH
#: build/C/man7/aio.7:195 build/C/man3/aio_cancel.3:128 build/C/man3/aio_error.3:96 build/C/man3/aio_read.3:158 build/C/man3/aio_return.3:92
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:208
msgid ""
"The program below opens each of the files named in its command-line "
"arguments and queues a request on the resulting file descriptor using "
"B<aio_read>(3).  The program then loops, periodically monitoring each of the "
"I/O operations that is still in progress using B<aio_error>(3).  Each of the "
"I/O requests is set up to provide notification by delivery of a signal.  "
"After all I/O requests have completed, the program retrieves their status "
"using B<aio_return>(3)."
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:214
msgid ""
"The B<SIGQUIT> signal (generated by typing control-\\e) causes the program "
"to request cancellation of each of the outstanding requests using "
"B<aio_cancel>(3)."
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:219
msgid ""
"Here is an example of what we might see when running this program.  In this "
"example, the program queues two requests to standard input, and these are "
"satisfied by two lines of input containing \"abc\" and \"x\"."
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:243
#, no-wrap
msgid ""
"$ B<./a.out /dev/stdin /dev/stdin>\n"
"opened /dev/stdin on descriptor 3\n"
"opened /dev/stdin on descriptor 4\n"
"aio_error():\n"
"    for request 0 (descriptor 3): In progress\n"
"    for request 1 (descriptor 4): In progress\n"
"B<abc>\n"
"I/O completion signal received\n"
"aio_error():\n"
"    for request 0 (descriptor 3): I/O succeeded\n"
"    for request 1 (descriptor 4): In progress\n"
"aio_error():\n"
"    for request 1 (descriptor 4): In progress\n"
"B<x>\n"
"I/O completion signal received\n"
"aio_error():\n"
"    for request 1 (descriptor 4): I/O succeeded\n"
"All I/O requests completed\n"
"aio_return():\n"
"    for request 0 (descriptor 3): 4\n"
"    for request 1 (descriptor 4): 2\n"
msgstr ""

#. type: SS
#: build/C/man7/aio.7:245
#, no-wrap
msgid "Program source"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:255
#, no-wrap
msgid ""
"#include E<lt>fcntl.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>unistd.hE<gt>\n"
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>errno.hE<gt>\n"
"#include E<lt>aio.hE<gt>\n"
"#include E<lt>signal.hE<gt>\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:257
#, no-wrap
msgid "#define BUF_SIZE 20     /* Size of buffers for read operations */\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:259
#, no-wrap
msgid "#define errExit(msg) do { perror(msg); exit(EXIT_FAILURE); } while (0)\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:266
#, no-wrap
msgid ""
"struct ioRequest {      /* Application-defined structure for tracking\n"
"                           I/O requests */\n"
"    int           reqNum;\n"
"    int           status;\n"
"    struct aiocb *aiocbp;\n"
"};\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:270
#, no-wrap
msgid ""
"static volatile sig_atomic_t gotSIGQUIT = 0;\n"
"                        /* On delivery of SIGQUIT, we attempt to\n"
"                           cancel all outstanding I/O requests */\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:276
#, no-wrap
msgid ""
"static void             /* Handler for SIGQUIT */\n"
"quitHandler(int sig)\n"
"{\n"
"    gotSIGQUIT = 1;\n"
"}\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:278
#, no-wrap
msgid "#define IO_SIGNAL SIGUSR1   /* Signal used to notify I/O completion */\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:284
#, no-wrap
msgid ""
"static void                 /* Handler for I/O completion signal */\n"
"aioSigHandler(int sig, siginfo_t *si, void *ucontext)\n"
"{\n"
"    if (si-E<gt>si_code == SI_ASYNCIO) {\n"
"        write(STDOUT_FILENO, \"I/O completion signal received\\en\", 31);\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:291
#, no-wrap
msgid ""
"        /* The corresponding ioRequest structure would be available as\n"
"               struct ioRequest *ioReq = si-E<gt>si_value.sival_ptr;\n"
"           and the file descriptor would then be available via\n"
"               ioReq-E<gt>aiocbp-E<gt>aio_fildes */\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:299
#, no-wrap
msgid ""
"int\n"
"main(int argc, char *argv[])\n"
"{\n"
"    struct sigaction sa;\n"
"    int s;\n"
"    int numReqs;        /* Total number of queued I/O requests */\n"
"    int openReqs;       /* Number of I/O requests still in progress */\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:305
#, no-wrap
msgid ""
"    if (argc E<lt> 2) {\n"
"        fprintf(stderr, \"Usage: %s E<lt>pathnameE<gt> "
"E<lt>pathnameE<gt>...\\en\",\n"
"                argv[0]);\n"
"        exit(EXIT_FAILURE);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:307
#, no-wrap
msgid "    numReqs = argc - 1;\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:309
#, no-wrap
msgid "    /* Allocate our arrays */\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:313
#, no-wrap
msgid ""
"    struct ioRequest *ioList = calloc(numReqs, sizeof(*ioList));\n"
"    if (ioList == NULL)\n"
"        errExit(\"calloc\");\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:317
#, no-wrap
msgid ""
"    struct aiocb *aiocbList = calloc(numReqs, sizeof(*aiocbList));\n"
"    if (aiocbList == NULL)\n"
"        errExit(\"calloc\");\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:319
#, no-wrap
msgid "    /* Establish handlers for SIGQUIT and the I/O completion signal */\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:322
#, no-wrap
msgid ""
"    sa.sa_flags = SA_RESTART;\n"
"    sigemptyset(&sa.sa_mask);\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:326
#, no-wrap
msgid ""
"    sa.sa_handler = quitHandler;\n"
"    if (sigaction(SIGQUIT, &sa, NULL) == -1)\n"
"        errExit(\"sigaction\");\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:331
#, no-wrap
msgid ""
"    sa.sa_flags = SA_RESTART | SA_SIGINFO;\n"
"    sa.sa_sigaction = aioSigHandler;\n"
"    if (sigaction(IO_SIGNAL, &sa, NULL) == -1)\n"
"        errExit(\"sigaction\");\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:334
#, no-wrap
msgid ""
"    /* Open each file specified on the command line, and queue\n"
"       a read request on the resulting file descriptor */\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:339
#, no-wrap
msgid ""
"    for (int j = 0; j E<lt> numReqs; j++) {\n"
"        ioList[j].reqNum = j;\n"
"        ioList[j].status = EINPROGRESS;\n"
"        ioList[j].aiocbp = &aiocbList[j];\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:345
#, no-wrap
msgid ""
"        ioList[j].aiocbp-E<gt>aio_fildes = open(argv[j + 1], O_RDONLY);\n"
"        if (ioList[j].aiocbp-E<gt>aio_fildes == -1)\n"
"            errExit(\"open\");\n"
"        printf(\"opened %s on descriptor %d\\en\", argv[j + 1],\n"
"                ioList[j].aiocbp-E<gt>aio_fildes);\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:349
#, no-wrap
msgid ""
"        ioList[j].aiocbp-E<gt>aio_buf = malloc(BUF_SIZE);\n"
"        if (ioList[j].aiocbp-E<gt>aio_buf == NULL)\n"
"            errExit(\"malloc\");\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:357
#, no-wrap
msgid ""
"        ioList[j].aiocbp-E<gt>aio_nbytes = BUF_SIZE;\n"
"        ioList[j].aiocbp-E<gt>aio_reqprio = 0;\n"
"        ioList[j].aiocbp-E<gt>aio_offset = 0;\n"
"        ioList[j].aiocbp-E<gt>aio_sigevent.sigev_notify = SIGEV_SIGNAL;\n"
"        ioList[j].aiocbp-E<gt>aio_sigevent.sigev_signo = IO_SIGNAL;\n"
"        ioList[j].aiocbp-E<gt>aio_sigevent.sigev_value.sival_ptr =\n"
"                                &ioList[j];\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:362
#, no-wrap
msgid ""
"        s = aio_read(ioList[j].aiocbp);\n"
"        if (s == -1)\n"
"            errExit(\"aio_read\");\n"
"    }\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:364
#, no-wrap
msgid "    openReqs = numReqs;\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:366
#, no-wrap
msgid "    /* Loop, monitoring status of I/O requests */\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:369
#, no-wrap
msgid ""
"    while (openReqs E<gt> 0) {\n"
"        sleep(3);       /* Delay between each monitoring step */\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:371
#, no-wrap
msgid "        if (gotSIGQUIT) {\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:375
#, no-wrap
msgid ""
"            /* On receipt of SIGQUIT, attempt to cancel each of the\n"
"               outstanding I/O requests, and display status returned\n"
"               from the cancellation requests */\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:377
#, no-wrap
msgid "            printf(\"got SIGQUIT; canceling I/O requests: \\en\");\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:394
#, no-wrap
msgid ""
"            for (int j = 0; j E<lt> numReqs; j++) {\n"
"                if (ioList[j].status == EINPROGRESS) {\n"
"                    printf(\"    Request %d on descriptor %d:\", j,\n"
"                            ioList[j].aiocbp-E<gt>aio_fildes);\n"
"                    s = aio_cancel(ioList[j].aiocbp-E<gt>aio_fildes,\n"
"                            ioList[j].aiocbp);\n"
"                    if (s == AIO_CANCELED)\n"
"                        printf(\"I/O canceled\\en\");\n"
"                    else if (s == AIO_NOTCANCELED)\n"
"                        printf(\"I/O not canceled\\en\");\n"
"                    else if (s == AIO_ALLDONE)\n"
"                        printf(\"I/O all done\\en\");\n"
"                    else\n"
"                        perror(\"aio_cancel\");\n"
"                }\n"
"            }\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:397
#, no-wrap
msgid ""
"            gotSIGQUIT = 0;\n"
"        }\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:400
#, no-wrap
msgid ""
"        /* Check the status of each I/O request that is still\n"
"           in progress */\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:407
#, no-wrap
msgid ""
"        printf(\"aio_error():\\en\");\n"
"        for (int j = 0; j E<lt> numReqs; j++) {\n"
"            if (ioList[j].status == EINPROGRESS) {\n"
"                printf(\"    for request %d (descriptor %d): \",\n"
"                        j, ioList[j].aiocbp-E<gt>aio_fildes);\n"
"                ioList[j].status = aio_error(ioList[j].aiocbp);\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:422
#, no-wrap
msgid ""
"                switch (ioList[j].status) {\n"
"                case 0:\n"
"                    printf(\"I/O succeeded\\en\");\n"
"                    break;\n"
"                case EINPROGRESS:\n"
"                    printf(\"In progress\\en\");\n"
"                    break;\n"
"                case ECANCELED:\n"
"                    printf(\"Canceled\\en\");\n"
"                    break;\n"
"                default:\n"
"                    perror(\"aio_error\");\n"
"                    break;\n"
"                }\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:428
#, no-wrap
msgid ""
"                if (ioList[j].status != EINPROGRESS)\n"
"                    openReqs--;\n"
"            }\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:430
#, no-wrap
msgid "    printf(\"All I/O requests completed\\en\");\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:432
#, no-wrap
msgid "    /* Check status return of all I/O requests */\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:436
#, no-wrap
msgid ""
"    printf(\"aio_return():\\en\");\n"
"    for (int j = 0; j E<lt> numReqs; j++) {\n"
"        ssize_t s;\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:441
#, no-wrap
msgid ""
"        s = aio_return(ioList[j].aiocbp);\n"
"        printf(\"    for request %d (descriptor %d): %zd\\en\",\n"
"                j, ioList[j].aiocbp-E<gt>aio_fildes, s);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:444
#, no-wrap
msgid ""
"    exit(EXIT_SUCCESS);\n"
"}\n"
msgstr ""

#. type: SH
#: build/C/man7/aio.7:445 build/C/man3/aio_cancel.3:131 build/C/man3/aio_error.3:99 build/C/man3/aio_fsync.3:117 build/C/man3/aio_init.3:98 build/C/man3/aio_read.3:161 build/C/man3/aio_return.3:95 build/C/man3/aio_suspend.3:146 build/C/man3/aio_write.3:163 build/C/man2/io_cancel.2:100 build/C/man2/io_destroy.2:89 build/C/man2/io_getevents.2:131 build/C/man2/io_setup.2:104 build/C/man2/io_submit.2:279 build/C/man3/lio_listio.3:233
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:460
msgid ""
"B<io_cancel>(2), B<io_destroy>(2), B<io_getevents>(2), B<io_setup>(2), "
"B<io_submit>(2), B<aio_cancel>(3), B<aio_error>(3), B<aio_init>(3), "
"B<aio_read>(3), B<aio_return>(3), B<aio_write>(3), B<lio_listio>(3)"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:466
msgid ""
"\"Asynchronous I/O Support in Linux 2.5\", Bhattacharya, Pratt, Pulavarty, "
"and Morgan, Proceedings of the Linux Symposium, 2003, E<.UR "
"https://www.kernel.org/doc/ols/2003/ols2003-pages-351-366.pdf> E<.UE>"
msgstr ""

#. type: SH
#: build/C/man7/aio.7:466 build/C/man3/aio_cancel.3:140 build/C/man3/aio_error.3:108 build/C/man3/aio_fsync.3:127 build/C/man3/aio_init.3:100 build/C/man3/aio_read.3:170 build/C/man3/aio_return.3:104 build/C/man3/aio_suspend.3:156 build/C/man3/aio_write.3:172 build/C/man2/io_cancel.2:108 build/C/man2/io_destroy.2:97 build/C/man2/io_getevents.2:140 build/C/man2/io_setup.2:112 build/C/man2/io_submit.2:287 build/C/man3/lio_listio.3:241
#, no-wrap
msgid "COLOPHON"
msgstr ""

#. type: Plain text
#: build/C/man7/aio.7:474 build/C/man3/aio_cancel.3:148 build/C/man3/aio_error.3:116 build/C/man3/aio_fsync.3:135 build/C/man3/aio_init.3:108 build/C/man3/aio_read.3:178 build/C/man3/aio_return.3:112 build/C/man3/aio_suspend.3:164 build/C/man3/aio_write.3:180 build/C/man2/io_cancel.2:116 build/C/man2/io_destroy.2:105 build/C/man2/io_getevents.2:148 build/C/man2/io_setup.2:120 build/C/man2/io_submit.2:295 build/C/man3/lio_listio.3:249
msgid ""
"This page is part of release 5.10 of the Linux I<man-pages> project.  A "
"description of the project, information about reporting bugs, and the latest "
"version of this page, can be found at "
"\\%https://www.kernel.org/doc/man-pages/."
msgstr ""

#. type: TH
#: build/C/man3/aio_cancel.3:24
#, no-wrap
msgid "AIO_CANCEL"
msgstr ""

#. type: TH
#: build/C/man3/aio_cancel.3:24 build/C/man3/aio_error.3:24 build/C/man3/aio_read.3:24 build/C/man3/aio_return.3:24
#, no-wrap
msgid "2020-06-09"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_cancel.3:27
msgid "aio_cancel - cancel an outstanding asynchronous I/O request"
msgstr ""

#. type: SH
#: build/C/man3/aio_cancel.3:27 build/C/man3/aio_error.3:27 build/C/man3/aio_fsync.3:27 build/C/man3/aio_init.3:28 build/C/man3/aio_read.3:27 build/C/man3/aio_return.3:27 build/C/man3/aio_suspend.3:28 build/C/man3/aio_write.3:27 build/C/man2/io_cancel.2:10 build/C/man2/io_destroy.2:10 build/C/man2/io_getevents.2:10 build/C/man2/io_setup.2:10 build/C/man2/io_submit.2:11 build/C/man3/lio_listio.3:27
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_cancel.3:29 build/C/man3/aio_error.3:29 build/C/man3/aio_fsync.3:29 build/C/man3/aio_read.3:29 build/C/man3/aio_return.3:29 build/C/man3/aio_write.3:29
msgid "B<#include E<lt>aio.hE<gt>>"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_cancel.3:31
msgid "B<int aio_cancel(int >I<fd>B<, struct aiocb *>I<aiocbp>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_cancel.3:33 build/C/man3/aio_error.3:33 build/C/man3/aio_fsync.3:33 build/C/man3/aio_init.3:37 build/C/man3/aio_read.3:33 build/C/man3/aio_return.3:33 build/C/man3/aio_write.3:33
msgid "Link with I<-lrt>."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_cancel.3:51
msgid ""
"The B<aio_cancel>()  function attempts to cancel outstanding asynchronous "
"I/O requests for the file descriptor I<fd>.  If I<aiocbp> is NULL, all such "
"requests are canceled.  Otherwise, only the request described by the control "
"block pointed to by I<aiocbp> is canceled.  (See B<aio>(7)  for a "
"description of the I<aiocb> structure.)"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_cancel.3:63
msgid ""
"Normal asynchronous notification occurs for canceled requests (see B<aio>(7)  "
"and B<sigevent>(7)).  The request return status (B<aio_return>(3))  is set "
"to -1, and the request error status (B<aio_error>(3))  is set to "
"B<ECANCELED>.  The control block of requests that cannot be canceled is not "
"changed."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_cancel.3:70
msgid ""
"If the request could not be canceled, then it will terminate in the usual "
"way after performing the I/O operation.  (In this case, B<aio_error>(3)  "
"will return the status B<EINPROGRESSS>.)"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_cancel.3:77
msgid ""
"If I<aiocbp> is not NULL, and I<fd> differs from the file descriptor with "
"which the asynchronous operation was initiated, unspecified results occur."
msgstr ""

#.  FreeBSD: not those on raw disk devices.
#. type: Plain text
#: build/C/man3/aio_cancel.3:80
msgid "Which operations are cancelable is implementation-defined."
msgstr ""

#. type: SH
#: build/C/man3/aio_cancel.3:80 build/C/man3/aio_error.3:44 build/C/man3/aio_fsync.3:73 build/C/man3/aio_read.3:88 build/C/man3/aio_return.3:49 build/C/man3/aio_suspend.3:79 build/C/man3/aio_write.3:95 build/C/man2/io_cancel.2:45 build/C/man2/io_destroy.2:37 build/C/man2/io_getevents.2:59 build/C/man2/io_setup.2:40 build/C/man2/io_submit.2:204 build/C/man3/lio_listio.3:108
#, no-wrap
msgid "RETURN VALUE"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_cancel.3:84
msgid "The B<aio_cancel>()  function returns one of the following values:"
msgstr ""

#. type: TP
#: build/C/man3/aio_cancel.3:84
#, no-wrap
msgid "B<AIO_CANCELED>"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_cancel.3:87
msgid "All requests were successfully canceled."
msgstr ""

#. type: TP
#: build/C/man3/aio_cancel.3:87
#, no-wrap
msgid "B<AIO_NOTCANCELED>"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_cancel.3:93
msgid ""
"At least one of the requests specified was not canceled because it was in "
"progress.  In this case, one may check the status of individual requests "
"using B<aio_error>(3)."
msgstr ""

#. type: TP
#: build/C/man3/aio_cancel.3:93
#, no-wrap
msgid "B<AIO_ALLDONE>"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_cancel.3:96
msgid "All requests had already been completed before the call."
msgstr ""

#. type: TP
#: build/C/man3/aio_cancel.3:96
#, no-wrap
msgid "-1"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_cancel.3:101
msgid ""
"An error occurred.  The cause of the error can be found by inspecting "
"I<errno>."
msgstr ""

#. type: TP
#: build/C/man3/aio_cancel.3:102 build/C/man3/aio_fsync.3:83 build/C/man3/aio_read.3:107 build/C/man3/aio_write.3:114 build/C/man2/io_submit.2:214
#, no-wrap
msgid "B<EBADF>"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_cancel.3:106
msgid "I<fd> is not a valid file descriptor."
msgstr ""

#. type: TP
#: build/C/man3/aio_cancel.3:106 build/C/man3/aio_error.3:74 build/C/man3/aio_fsync.3:95 build/C/man3/aio_read.3:119 build/C/man3/aio_return.3:70 build/C/man3/aio_suspend.3:98 build/C/man3/aio_write.3:129 build/C/man2/io_cancel.2:60 build/C/man2/io_destroy.2:49 build/C/man2/io_getevents.2:86 build/C/man2/io_setup.2:64 build/C/man2/io_submit.2:230
#, no-wrap
msgid "B<ENOSYS>"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_cancel.3:110
msgid "B<aio_cancel>()  is not implemented."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_cancel.3:114
msgid "The B<aio_cancel>()  function is available since glibc 2.1."
msgstr ""

#. type: SH
#: build/C/man3/aio_cancel.3:114 build/C/man3/aio_error.3:82 build/C/man3/aio_fsync.3:103 build/C/man3/aio_read.3:132 build/C/man3/aio_return.3:78 build/C/man3/aio_suspend.3:106 build/C/man3/aio_write.3:137 build/C/man3/lio_listio.3:206
#, no-wrap
msgid "ATTRIBUTES"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_cancel.3:117 build/C/man3/aio_error.3:85 build/C/man3/aio_fsync.3:106 build/C/man3/aio_read.3:135 build/C/man3/aio_return.3:81 build/C/man3/aio_suspend.3:109 build/C/man3/aio_write.3:140 build/C/man3/lio_listio.3:209
msgid "For an explanation of the terms used in this section, see B<attributes>(7)."
msgstr ""

#. type: tbl table
#: build/C/man3/aio_cancel.3:121 build/C/man3/aio_error.3:89 build/C/man3/aio_fsync.3:110 build/C/man3/aio_read.3:139 build/C/man3/aio_return.3:85 build/C/man3/aio_suspend.3:113 build/C/man3/aio_write.3:144 build/C/man3/lio_listio.3:213
#, no-wrap
msgid "Interface"
msgstr ""

#. type: tbl table
#: build/C/man3/aio_cancel.3:121 build/C/man3/aio_error.3:89 build/C/man3/aio_fsync.3:110 build/C/man3/aio_read.3:139 build/C/man3/aio_return.3:85 build/C/man3/aio_suspend.3:113 build/C/man3/aio_write.3:144 build/C/man3/lio_listio.3:213
#, no-wrap
msgid "Attribute"
msgstr ""

#. type: tbl table
#: build/C/man3/aio_cancel.3:121 build/C/man3/aio_error.3:89 build/C/man3/aio_fsync.3:110 build/C/man3/aio_read.3:139 build/C/man3/aio_return.3:85 build/C/man3/aio_suspend.3:113 build/C/man3/aio_write.3:144 build/C/man3/lio_listio.3:213
#, no-wrap
msgid "Value"
msgstr ""

#. type: tbl table
#: build/C/man3/aio_cancel.3:124
#, no-wrap
msgid "B<aio_cancel>()"
msgstr ""

#. type: tbl table
#: build/C/man3/aio_cancel.3:124 build/C/man3/aio_error.3:92 build/C/man3/aio_fsync.3:113 build/C/man3/aio_read.3:142 build/C/man3/aio_return.3:88 build/C/man3/aio_suspend.3:116 build/C/man3/aio_write.3:147 build/C/man3/lio_listio.3:216
#, no-wrap
msgid "Thread safety"
msgstr ""

#. type: tbl table
#: build/C/man3/aio_cancel.3:124 build/C/man3/aio_error.3:92 build/C/man3/aio_fsync.3:113 build/C/man3/aio_read.3:142 build/C/man3/aio_return.3:88 build/C/man3/aio_suspend.3:116 build/C/man3/aio_write.3:147 build/C/man3/lio_listio.3:216
#, no-wrap
msgid "MT-Safe"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_cancel.3:131 build/C/man3/aio_error.3:99 build/C/man3/aio_read.3:161 build/C/man3/aio_return.3:95
msgid "See B<aio>(7)."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_cancel.3:140
msgid ""
"B<aio_error>(3), B<aio_fsync>(3), B<aio_read>(3), B<aio_return>(3), "
"B<aio_suspend>(3), B<aio_write>(3), B<lio_listio>(3), B<aio>(7)"
msgstr ""

#. type: TH
#: build/C/man3/aio_error.3:24
#, no-wrap
msgid "AIO_ERROR"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_error.3:27
msgid "aio_error - get error status of asynchronous I/O operation"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_error.3:31
msgid "B<int aio_error(const struct aiocb *>I<aiocbp>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_error.3:44
msgid ""
"The B<aio_error>()  function returns the error status for the asynchronous "
"I/O request with control block pointed to by I<aiocbp>.  (See B<aio>(7)  for "
"a description of the I<aiocb> structure.)"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_error.3:46
msgid "This function returns one of the following:"
msgstr ""

#. type: IP
#: build/C/man3/aio_error.3:46 build/C/man3/aio_error.3:50 build/C/man3/aio_error.3:53 build/C/man3/aio_error.3:55 build/C/man3/aio_suspend.3:42 build/C/man3/aio_suspend.3:46 build/C/man3/aio_suspend.3:48
#, no-wrap
msgid "*"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_error.3:50
msgid "B<EINPROGRESS>, if the request has not been completed yet."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_error.3:53
msgid "B<ECANCELED>, if the request was canceled."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_error.3:55
msgid "0, if the request completed successfully."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_error.3:66
msgid ""
"A positive error number, if the asynchronous I/O operation failed.  This is "
"the same value that would have been stored in the I<errno> variable in the "
"case of a synchronous B<read>(2), B<write>(2), B<fsync>(2), or "
"B<fdatasync>(2)  call."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_error.3:74
msgid ""
"I<aiocbp> does not point at a control block for an asynchronous I/O request "
"of which the return status (see B<aio_return>(3))  has not been retrieved "
"yet."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_error.3:78
msgid "B<aio_error>()  is not implemented."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_error.3:82
msgid "The B<aio_error>()  function is available since glibc 2.1."
msgstr ""

#. type: tbl table
#: build/C/man3/aio_error.3:92
#, no-wrap
msgid "B<aio_error>()"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_error.3:108
msgid ""
"B<aio_cancel>(3), B<aio_fsync>(3), B<aio_read>(3), B<aio_return>(3), "
"B<aio_suspend>(3), B<aio_write>(3), B<lio_listio>(3), B<aio>(7)"
msgstr ""

#. type: TH
#: build/C/man3/aio_fsync.3:24
#, no-wrap
msgid "AIO_FSYNC"
msgstr ""

#. type: TH
#: build/C/man3/aio_fsync.3:24 build/C/man3/aio_suspend.3:25 build/C/man3/aio_write.3:24
#, no-wrap
msgid "2017-09-15"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_fsync.3:27
msgid "aio_fsync - asynchronous file synchronization"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_fsync.3:31
msgid "B<int aio_fsync(int >I<op>B<, struct aiocb *>I<aiocbp>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_fsync.3:44
msgid ""
"The B<aio_fsync>()  function does a sync on all outstanding asynchronous I/O "
"operations associated with I<aiocbp-E<gt>aio_fildes>.  (See B<aio>(7)  for a "
"description of the I<aiocb> structure.)"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_fsync.3:58
msgid ""
"More precisely, if I<op> is B<O_SYNC>, then all currently queued I/O "
"operations shall be completed as if by a call of B<fsync>(2), and if I<op> "
"is B<O_DSYNC>, this call is the asynchronous analog of B<fdatasync>(2)."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_fsync.3:60
msgid "Note that this is a request only; it does not wait for I/O completion."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_fsync.3:73
msgid ""
"Apart from I<aio_fildes>, the only field in the structure pointed to by "
"I<aiocbp> that is used by this call is the I<aio_sigevent> field (a "
"I<sigevent> structure, described in B<sigevent>(7)), which indicates the "
"desired type of asynchronous notification at completion.  All other fields "
"are ignored."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_fsync.3:79
msgid ""
"On success (the sync request was successfully queued)  this function returns "
"0.  On error, -1 is returned, and I<errno> is set appropriately."
msgstr ""

#. type: TP
#: build/C/man3/aio_fsync.3:80 build/C/man3/aio_read.3:104 build/C/man3/aio_suspend.3:88 build/C/man3/aio_write.3:111 build/C/man2/io_cancel.2:51 build/C/man2/io_setup.2:46 build/C/man2/io_submit.2:211 build/C/man3/lio_listio.3:150 build/C/man3/lio_listio.3:153
#, no-wrap
msgid "B<EAGAIN>"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_fsync.3:83 build/C/man3/aio_read.3:107 build/C/man3/aio_write.3:114 build/C/man3/lio_listio.3:153
msgid "Out of resources."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_fsync.3:87 build/C/man3/aio_write.3:118
msgid "I<aio_fildes> is not a valid file descriptor open for writing."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_fsync.3:95
msgid ""
"Synchronized I/O is not supported for this file, or I<op> is not B<O_SYNC> "
"or B<O_DSYNC>."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_fsync.3:99
msgid "B<aio_fsync>()  is not implemented."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_fsync.3:103
msgid "The B<aio_fsync>()  function is available since glibc 2.1."
msgstr ""

#. type: tbl table
#: build/C/man3/aio_fsync.3:113
#, no-wrap
msgid "B<aio_fsync>()"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_fsync.3:127
msgid ""
"B<aio_cancel>(3), B<aio_error>(3), B<aio_read>(3), B<aio_return>(3), "
"B<aio_suspend>(3), B<aio_write>(3), B<lio_listio>(3), B<aio>(7), "
"B<sigevent>(7)"
msgstr ""

#. type: TH
#: build/C/man3/aio_init.3:25
#, no-wrap
msgid "AIO_INIT"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_init.3:28
msgid "aio_init - asynchronous I/O initialization"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_init.3:32
#, no-wrap
msgid ""
"B<#define _GNU_SOURCE>         /* See feature_test_macros(7) */\n"
"B<#include E<lt>aio.hE<gt>>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_init.3:34
#, no-wrap
msgid "B<void aio_init(const struct aioinit *>I<init>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_init.3:44
msgid ""
"The GNU-specific B<aio_init>()  function allows the caller to provide tuning "
"hints to the glibc POSIX AIO implementation.  Use of this function is "
"optional, but to be effective, it must be called before employing any other "
"functions in the POSIX AIO API."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_init.3:48
msgid ""
"The tuning information is provided in the buffer pointed to by the argument "
"I<init>.  This buffer is a structure of the following form:"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_init.3:63
#, no-wrap
msgid ""
"struct aioinit {\n"
"    int aio_threads;    /* Maximum number of threads */\n"
"    int aio_num;        /* Number of expected simultaneous\n"
"                           requests */\n"
"    int aio_locks;      /* Not used */\n"
"    int aio_usedba;     /* Not used */\n"
"    int aio_debug;      /* Not used */\n"
"    int aio_numusers;   /* Not used */\n"
"    int aio_idle_time;  /* Number of seconds before idle thread\n"
"                           terminates (since glibc 2.2) */\n"
"    int aio_reserved;\n"
"};\n"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_init.3:69
msgid "The following fields are used in the I<aioinit> structure:"
msgstr ""

#. type: TP
#: build/C/man3/aio_init.3:69
#, no-wrap
msgid "I<aio_threads>"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_init.3:77
msgid ""
"This field specifies the maximum number of worker threads that may be used "
"by the implementation.  If the number of outstanding I/O operations exceeds "
"this limit, then excess operations will be queued until a worker thread "
"becomes free.  If this field is specified with a value less than 1, the "
"value 1 is used.  The default value is 20."
msgstr ""

#. type: TP
#: build/C/man3/aio_init.3:77
#, no-wrap
msgid "I<aio_num>"
msgstr ""

#.  FIXME . But, if aio_num > 32, the behavior looks strange. See
#.  http://sourceware.org/bugzilla/show_bug.cgi?id=12083
#. type: Plain text
#: build/C/man3/aio_init.3:86
msgid ""
"This field should specify the maximum number of simultaneous I/O requests "
"that the caller expects to enqueue.  If a value less than 32 is specified "
"for this field, it is rounded up to 32.  The default value is 64."
msgstr ""

#. type: TP
#: build/C/man3/aio_init.3:86
#, no-wrap
msgid "I<aio_idle_time>"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_init.3:92
msgid ""
"This field specifies the amount of time in seconds that a worker thread "
"should wait for further requests before terminating, after having completed "
"a previous request.  The default value is 1."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_init.3:96
msgid "The B<aio_init>()  function is available since glibc 2.1."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_init.3:98
msgid "This function is a GNU extension."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_init.3:100
msgid "B<aio>(7)"
msgstr ""

#. type: TH
#: build/C/man3/aio_read.3:24
#, no-wrap
msgid "AIO_READ"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_read.3:27
msgid "aio_read - asynchronous read"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_read.3:31
msgid "B<int aio_read(struct aiocb *>I<aiocbp>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_read.3:41
msgid ""
"The B<aio_read>()  function queues the I/O request described by the buffer "
"pointed to by I<aiocbp>.  This function is the asynchronous analog of "
"B<read>(2).  The arguments of the call"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_read.3:43
#, no-wrap
msgid "    read(fd, buf, count)\n"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_read.3:56 build/C/man3/aio_write.3:56
msgid ""
"correspond (in order) to the fields I<aio_fildes>, I<aio_buf>, and "
"I<aio_nbytes> of the structure pointed to by I<aiocbp>.  (See B<aio>(7)  for "
"a description of the I<aiocb> structure.)"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_read.3:62
msgid ""
"The data is read starting at the absolute position "
"I<aiocbp-E<gt>aio_offset>, regardless of the file offset.  After the call, "
"the value of the file offset is unspecified."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_read.3:75
msgid ""
"The \"asynchronous\" means that this call returns as soon as the request has "
"been enqueued; the read may or may not have completed when the call "
"returns.  One tests for completion using B<aio_error>(3).  The return status "
"of a completed I/O operation can be obtained by B<aio_return>(3).  "
"Asynchronous notification of I/O completion can be obtained by setting "
"I<aiocbp-E<gt>aio_sigevent> appropriately; see B<sigevent>(7)  for details."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_read.3:82 build/C/man3/aio_write.3:89
msgid ""
"If B<_POSIX_PRIORITIZED_IO> is defined, and this file supports it, then the "
"asynchronous operation is submitted at a priority equal to that of the "
"calling process minus I<aiocbp-E<gt>aio_reqprio>."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_read.3:86 build/C/man3/aio_write.3:93
msgid "The field I<aiocbp-E<gt>aio_lio_opcode> is ignored."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_read.3:88
msgid "No data is read from a regular file beyond its maximum offset."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_read.3:103 build/C/man3/aio_write.3:110
msgid ""
"On success, 0 is returned.  On error, the request is not enqueued, -1 is "
"returned, and I<errno> is set appropriately.  If an error is detected only "
"later, it will be reported via B<aio_return>(3)  (returns status -1) and "
"B<aio_error>(3)  (error status\\(emwhatever one would have gotten in "
"I<errno>, such as B<EBADF>)."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_read.3:111
msgid "I<aio_fildes> is not a valid file descriptor open for reading."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_read.3:119
msgid "One or more of I<aio_offset>, I<aio_reqprio>, or I<aio_nbytes> are invalid."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_read.3:123
msgid "B<aio_read>()  is not implemented."
msgstr ""

#. type: TP
#: build/C/man3/aio_read.3:123
#, no-wrap
msgid "B<EOVERFLOW>"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_read.3:128
msgid ""
"The file is a regular file, we start reading before end-of-file and want at "
"least one byte, but the starting position is past the maximum offset for "
"this file."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_read.3:132
msgid "The B<aio_read>()  function is available since glibc 2.1."
msgstr ""

#. type: tbl table
#: build/C/man3/aio_read.3:142
#, no-wrap
msgid "B<aio_read>()"
msgstr ""

#.  or the control block of the operation
#. type: Plain text
#: build/C/man3/aio_read.3:154
msgid ""
"It is a good idea to zero out the control block before use.  The control "
"block must not be changed while the read operation is in progress.  The "
"buffer area being read into must not be accessed during the operation or "
"undefined results may occur.  The memory areas involved must remain valid."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_read.3:158 build/C/man3/aio_write.3:163 build/C/man3/lio_listio.3:233
msgid ""
"Simultaneous I/O operations specifying the same I<aiocb> structure produce "
"undefined results."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_read.3:170
msgid ""
"B<aio_cancel>(3), B<aio_error>(3), B<aio_fsync>(3), B<aio_return>(3), "
"B<aio_suspend>(3), B<aio_write>(3), B<lio_listio>(3), B<aio>(7)"
msgstr ""

#. type: TH
#: build/C/man3/aio_return.3:24
#, no-wrap
msgid "AIO_RETURN"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_return.3:27
msgid "aio_return - get return status of asynchronous I/O operation"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_return.3:31
msgid "B<ssize_t aio_return(struct aiocb *>I<aiocbp>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_return.3:44
msgid ""
"The B<aio_return>()  function returns the final return status for the "
"asynchronous I/O request with control block pointed to by I<aiocbp>.  (See "
"B<aio>(7)  for a description of the I<aiocb> structure.)"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_return.3:49
msgid ""
"This function should be called only once for any given request, after "
"B<aio_error>(3)  returns something other than B<EINPROGRESS>."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_return.3:59
msgid ""
"If the asynchronous I/O operation has completed, this function returns the "
"value that would have been returned in case of a synchronous B<read>(2), "
"B<write>(2), B<fsync>(2)  or B<fdatasync>(2), call.  On error, -1 is "
"returned, and I<errno> is set appropriately."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_return.3:64
msgid ""
"If the asynchronous I/O operation has not yet completed, the return value "
"and effect of B<aio_return>()  are undefined."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_return.3:70
msgid ""
"I<aiocbp> does not point at a control block for an asynchronous I/O request "
"of which the return status has not been retrieved yet."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_return.3:74
msgid "B<aio_return>()  is not implemented."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_return.3:78
msgid "The B<aio_return>()  function is available since glibc 2.1."
msgstr ""

#. type: tbl table
#: build/C/man3/aio_return.3:88
#, no-wrap
msgid "B<aio_return>()"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_return.3:104
msgid ""
"B<aio_cancel>(3), B<aio_error>(3), B<aio_fsync>(3), B<aio_read>(3), "
"B<aio_suspend>(3), B<aio_write>(3), B<lio_listio>(3), B<aio>(7)"
msgstr ""

#. type: TH
#: build/C/man3/aio_suspend.3:25
#, no-wrap
msgid "AIO_SUSPEND"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_suspend.3:28
msgid "aio_suspend - wait for asynchronous I/O operation or timeout"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_suspend.3:32 build/C/man3/lio_listio.3:30
#, no-wrap
msgid "B<#include E<lt>aio.hE<gt>>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_suspend.3:35
#, no-wrap
msgid ""
"B<int aio_suspend(const struct aiocb * const >I<aiocb_list>B<[],>\n"
"B<                int >I<nitems>B<, const struct timespec "
"*>I<timeout>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_suspend.3:37 build/C/man3/lio_listio.3:35
#, no-wrap
msgid "Link with I<-lrt>.\n"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_suspend.3:42
msgid ""
"The B<aio_suspend>()  function suspends the calling thread until one of the "
"following occurs:"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_suspend.3:46
msgid ""
"One or more of the asynchronous I/O requests in the list I<aiocb_list> has "
"completed."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_suspend.3:48
msgid "A signal is delivered."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_suspend.3:55
msgid ""
"I<timeout> is not NULL and the specified time interval has passed.  (For "
"details of the I<timespec> structure, see B<nanosleep>(2).)"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_suspend.3:73
msgid ""
"The I<nitems> argument specifies the number of items in I<aiocb_list>.  Each "
"item in the list pointed to by I<aiocb_list> must be either NULL (and then "
"is ignored), or a pointer to a control block on which I/O was initiated "
"using B<aio_read>(3), B<aio_write>(3), or B<lio_listio>(3).  (See B<aio>(7)  "
"for a description of the I<aiocb> structure.)"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_suspend.3:79
msgid ""
"If B<CLOCK_MONOTONIC> is supported, this clock is used to measure the "
"timeout interval (see B<clock_gettime>(3))."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_suspend.3:87
msgid ""
"If this function returns after completion of one of the I/O requests "
"specified in I<aiocb_list>, 0 is returned.  Otherwise, -1 is returned, and "
"I<errno> is set to indicate the error."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_suspend.3:92
msgid "The call timed out before any of the indicated operations had completed."
msgstr ""

#. type: TP
#: build/C/man3/aio_suspend.3:92 build/C/man2/io_getevents.2:77 build/C/man3/lio_listio.3:161
#, no-wrap
msgid "B<EINTR>"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_suspend.3:98
msgid ""
"The call was ended by signal (possibly the completion signal of one of the "
"operations we were waiting for); see B<signal>(7)."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_suspend.3:102
msgid "B<aio_suspend>()  is not implemented."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_suspend.3:106
msgid "The B<aio_suspend>()  function is available since glibc 2.1."
msgstr ""

#. type: tbl table
#: build/C/man3/aio_suspend.3:116
#, no-wrap
msgid "B<aio_suspend>()"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_suspend.3:124
msgid ""
"One can achieve polling by using a non-NULL I<timeout> that specifies a zero "
"time interval."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_suspend.3:130
msgid ""
"If one or more of the asynchronous I/O operations specified in I<aiocb_list> "
"has already completed at the time of the call to B<aio_suspend>(), then the "
"call returns immediately."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_suspend.3:140
msgid ""
"To determine which I/O operations have completed after a successful return "
"from B<aio_suspend>(), use B<aio_error>(3)  to scan the list of I<aiocb> "
"structures pointed to by I<aiocb_list>."
msgstr ""

#. type: SH
#: build/C/man3/aio_suspend.3:140 build/C/man2/io_getevents.2:126
#, no-wrap
msgid "BUGS"
msgstr ""

#.  FIXME . https://sourceware.org/bugzilla/show_bug.cgi?id=13172
#. type: Plain text
#: build/C/man3/aio_suspend.3:146
msgid ""
"The glibc implementation of B<aio_suspend>()  is not async-signal-safe, in "
"violation of the requirements of POSIX.1."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_suspend.3:156
msgid ""
"B<aio_cancel>(3), B<aio_error>(3), B<aio_fsync>(3), B<aio_read>(3), "
"B<aio_return>(3), B<aio_write>(3), B<lio_listio>(3), B<aio>(7), B<time>(7)"
msgstr ""

#. type: TH
#: build/C/man3/aio_write.3:24
#, no-wrap
msgid "AIO_WRITE"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_write.3:27
msgid "aio_write - asynchronous write"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_write.3:31
msgid "B<int aio_write(struct aiocb *>I<aiocbp>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_write.3:41
msgid ""
"The B<aio_write>()  function queues the I/O request described by the buffer "
"pointed to by I<aiocbp>.  This function is the asynchronous analog of "
"B<write>(2).  The arguments of the call"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_write.3:43
#, no-wrap
msgid "    write(fd, buf, count)\n"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_write.3:69
msgid ""
"If B<O_APPEND> is not set, the data is written starting at the absolute "
"position I<aiocbp-E<gt>aio_offset>, regardless of the file offset.  If "
"B<O_APPEND> is set, data is written at the end of the file in the same order "
"as B<aio_write>()  calls are made.  After the call, the value of the file "
"offset is unspecified."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_write.3:82
msgid ""
"The \"asynchronous\" means that this call returns as soon as the request has "
"been enqueued; the write may or may not have completed when the call "
"returns.  One tests for completion using B<aio_error>(3).  The return status "
"of a completed I/O operation can be obtained B<aio_return>(3).  Asynchronous "
"notification of I/O completion can be obtained by setting "
"I<aiocbp-E<gt>aio_sigevent> appropriately; see B<sigevent>(7)  for details."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_write.3:95
msgid "No data is written to a regular file beyond its maximum offset."
msgstr ""

#. type: TP
#: build/C/man3/aio_write.3:118
#, no-wrap
msgid "B<EFBIG>"
msgstr ""

#. type: Plain text
#: build/C/man3/aio_write.3:122
msgid ""
"The file is a regular file, we want to write at least one byte, but the "
"starting position is at or beyond the maximum offset for this file."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_write.3:129
msgid "One or more of I<aio_offset>, I<aio_reqprio>, I<aio_nbytes> are invalid."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_write.3:133
msgid "B<aio_write>()  is not implemented."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_write.3:137
msgid "The B<aio_write>()  function is available since glibc 2.1."
msgstr ""

#. type: tbl table
#: build/C/man3/aio_write.3:147
#, no-wrap
msgid "B<aio_write>()"
msgstr ""

#.  or the control block of the operation
#. type: Plain text
#: build/C/man3/aio_write.3:159
msgid ""
"It is a good idea to zero out the control block before use.  The control "
"block must not be changed while the write operation is in progress.  The "
"buffer area being written out must not be accessed during the operation or "
"undefined results may occur.  The memory areas involved must remain valid."
msgstr ""

#. type: Plain text
#: build/C/man3/aio_write.3:172
msgid ""
"B<aio_cancel>(3), B<aio_error>(3), B<aio_fsync>(3), B<aio_read>(3), "
"B<aio_return>(3), B<aio_suspend>(3), B<lio_listio>(3), B<aio>(7)"
msgstr ""

#. type: TH
#: build/C/man2/io_cancel.2:7
#, no-wrap
msgid "IO_CANCEL"
msgstr ""

#. type: TH
#: build/C/man2/io_cancel.2:7 build/C/man2/io_destroy.2:7 build/C/man2/io_getevents.2:7 build/C/man2/io_setup.2:7 build/C/man2/io_submit.2:8
#, no-wrap
msgid "2020-12-21"
msgstr ""

#. type: Plain text
#: build/C/man2/io_cancel.2:10
msgid "io_cancel - cancel an outstanding asynchronous I/O operation"
msgstr ""

#. type: Plain text
#: build/C/man2/io_cancel.2:13 build/C/man2/io_destroy.2:13 build/C/man2/io_setup.2:13 build/C/man2/io_submit.2:14
#, no-wrap
msgid "B<#include E<lt>linux/aio_abi.hE<gt>>          /* Defines needed types */\n"
msgstr ""

#. type: Plain text
#: build/C/man2/io_cancel.2:16
#, no-wrap
msgid ""
"B<int io_cancel(aio_context_t >I<ctx_id>B<, struct iocb *>I<iocb>B<,>\n"
"B<              struct io_event *>I<result>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man2/io_cancel.2:20 build/C/man2/io_destroy.2:19 build/C/man2/io_getevents.2:22 build/C/man2/io_setup.2:19 build/C/man2/io_submit.2:21
msgid "I<Note>: There is no glibc wrapper for this system call; see NOTES."
msgstr ""

#. type: Plain text
#: build/C/man2/io_cancel.2:29 build/C/man2/io_destroy.2:28 build/C/man2/io_getevents.2:31 build/C/man2/io_submit.2:30
msgid ""
"I<Note>: this page describes the raw Linux system call interface.  The "
"wrapper function provided by I<libaio> uses a different type for the "
"I<ctx_id> argument.  See NOTES."
msgstr ""

#. type: Plain text
#: build/C/man2/io_cancel.2:45
msgid ""
"The B<io_cancel>()  system call attempts to cancel an asynchronous I/O "
"operation previously submitted with B<io_submit>(2).  The I<iocb> argument "
"describes the operation to be canceled and the I<ctx_id> argument is the AIO "
"context to which the operation was submitted.  If the operation is "
"successfully canceled, the event will be copied into the memory pointed to "
"by I<result> without being placed into the completion queue."
msgstr ""

#. type: Plain text
#: build/C/man2/io_cancel.2:50
msgid "On success, B<io_cancel>()  returns 0.  For the failure return, see NOTES."
msgstr ""

#. type: Plain text
#: build/C/man2/io_cancel.2:54
msgid "The I<iocb> specified was not canceled."
msgstr ""

#. type: TP
#: build/C/man2/io_cancel.2:54 build/C/man2/io_destroy.2:43 build/C/man2/io_getevents.2:74 build/C/man2/io_setup.2:53 build/C/man2/io_submit.2:217
#, no-wrap
msgid "B<EFAULT>"
msgstr ""

#. type: Plain text
#: build/C/man2/io_cancel.2:57 build/C/man2/io_submit.2:220
msgid "One of the data structures points to invalid data."
msgstr ""

#. type: Plain text
#: build/C/man2/io_cancel.2:60 build/C/man2/io_destroy.2:49
msgid "The AIO context specified by I<ctx_id> is invalid."
msgstr ""

#. type: Plain text
#: build/C/man2/io_cancel.2:64
msgid "B<io_cancel>()  is not implemented on this architecture."
msgstr ""

#. type: Plain text
#: build/C/man2/io_cancel.2:66 build/C/man2/io_destroy.2:55 build/C/man2/io_getevents.2:92 build/C/man2/io_setup.2:70 build/C/man2/io_submit.2:245
msgid "The asynchronous I/O system calls first appeared in Linux 2.5."
msgstr ""

#. type: Plain text
#: build/C/man2/io_cancel.2:70
msgid ""
"B<io_cancel>()  is Linux-specific and should not be used in programs that "
"are intended to be portable."
msgstr ""

#.  http://git.fedorahosted.org/git/?p=libaio.git
#. type: Plain text
#: build/C/man2/io_cancel.2:79
msgid ""
"Glibc does not provide a wrapper function for this system call.  You could "
"invoke it using B<syscall>(2).  But instead, you probably want to use the "
"B<io_cancel>()  wrapper function provided by I<libaio>."
msgstr ""

#.  But glibc is confused, since <libaio.h> uses 'io_context_t' to declare
#.  the system call.
#. type: Plain text
#: build/C/man2/io_cancel.2:100 build/C/man2/io_destroy.2:89 build/C/man2/io_getevents.2:126 build/C/man2/io_submit.2:279
msgid ""
"Note that the I<libaio> wrapper function uses a different type "
"(I<io_context_t>)  for the I<ctx_id> argument.  Note also that the I<libaio> "
"wrapper does not follow the usual C library conventions for indicating "
"errors: on error it returns a negated error number (the negative of one of "
"the values listed in ERRORS).  If the system call is invoked via "
"B<syscall>(2), then the return value follows the usual conventions for "
"indicating an error: -1, with I<errno> set to a (positive) value that "
"indicates the error."
msgstr ""

#.  .SH AUTHOR
#.  Kent Yoder.
#. type: Plain text
#: build/C/man2/io_cancel.2:108
msgid ""
"B<io_destroy>(2), B<io_getevents>(2), B<io_setup>(2), B<io_submit>(2), "
"B<aio>(7)"
msgstr ""

#. type: TH
#: build/C/man2/io_destroy.2:7
#, no-wrap
msgid "IO_DESTROY"
msgstr ""

#. type: Plain text
#: build/C/man2/io_destroy.2:10
msgid "io_destroy - destroy an asynchronous I/O context"
msgstr ""

#. type: Plain text
#: build/C/man2/io_destroy.2:15
#, no-wrap
msgid "B<int io_destroy(aio_context_t >I<ctx_id>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man2/io_destroy.2:37
msgid ""
"The B<io_destroy>()  system call will attempt to cancel all outstanding "
"asynchronous I/O operations against I<ctx_id>, will block on the completion "
"of all operations that could not be canceled, and will destroy the "
"I<ctx_id>."
msgstr ""

#. type: Plain text
#: build/C/man2/io_destroy.2:42
msgid "On success, B<io_destroy>()  returns 0.  For the failure return, see NOTES."
msgstr ""

#. type: Plain text
#: build/C/man2/io_destroy.2:46
msgid "The context pointed to is invalid."
msgstr ""

#. type: Plain text
#: build/C/man2/io_destroy.2:53
msgid "B<io_destroy>()  is not implemented on this architecture."
msgstr ""

#. type: Plain text
#: build/C/man2/io_destroy.2:59
msgid ""
"B<io_destroy>()  is Linux-specific and should not be used in programs that "
"are intended to be portable."
msgstr ""

#.  http://git.fedorahosted.org/git/?p=libaio.git
#. type: Plain text
#: build/C/man2/io_destroy.2:68
msgid ""
"Glibc does not provide a wrapper function for this system call.  You could "
"invoke it using B<syscall>(2).  But instead, you probably want to use the "
"B<io_destroy>()  wrapper function provided by I<libaio>."
msgstr ""

#.  .SH AUTHOR
#.  Kent Yoder.
#. type: Plain text
#: build/C/man2/io_destroy.2:97
msgid ""
"B<io_cancel>(2), B<io_getevents>(2), B<io_setup>(2), B<io_submit>(2), "
"B<aio>(7)"
msgstr ""

#. type: TH
#: build/C/man2/io_getevents.2:7
#, no-wrap
msgid "IO_GETEVENTS"
msgstr ""

#. type: Plain text
#: build/C/man2/io_getevents.2:10
msgid "io_getevents - read asynchronous I/O events from the completion queue"
msgstr ""

#. type: Plain text
#: build/C/man2/io_getevents.2:14
#, no-wrap
msgid ""
"B<#include E<lt>linux/aio_abi.hE<gt>>         /* Defines needed types */\n"
"B<#include E<lt>linux/time.hE<gt>>            /* Defines 'struct timespec' "
"*/\n"
msgstr ""

#. type: Plain text
#: build/C/man2/io_getevents.2:18
#, no-wrap
msgid ""
"B<int io_getevents(aio_context_t >I<ctx_id>B<, long >I<min_nr>B<, long "
">I<nr>B<,>\n"
"B<                 struct io_event *>I<events>B<, struct timespec "
"*>I<timeout>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man2/io_getevents.2:38
msgid ""
"The B<io_getevents>()  system call attempts to read at least I<min_nr> "
"events and up to I<nr> events from the completion queue of the AIO context "
"specified by I<ctx_id>."
msgstr ""

#. type: Plain text
#: build/C/man2/io_getevents.2:41
msgid ""
"The I<timeout> argument specifies the amount of time to wait for events, and "
"is specified as a relative timeout in a structure of the following form:"
msgstr ""

#. type: Plain text
#: build/C/man2/io_getevents.2:48
#, no-wrap
msgid ""
"struct timespec {\n"
"    time_t tv_sec;      /* seconds */\n"
"    long   tv_nsec;     /* nanoseconds [0 .. 999999999] */\n"
"};\n"
msgstr ""

#. type: Plain text
#: build/C/man2/io_getevents.2:53
msgid ""
"The specified time will be rounded up to the system clock granularity and is "
"guaranteed not to expire early."
msgstr ""

#. type: Plain text
#: build/C/man2/io_getevents.2:59
msgid ""
"Specifying I<timeout> as NULL means block indefinitely until at least "
"I<min_nr> events have been obtained."
msgstr ""

#. type: Plain text
#: build/C/man2/io_getevents.2:71
msgid ""
"On success, B<io_getevents>()  returns the number of events read.  This may "
"be 0, or a value less than I<min_nr>, if the I<timeout> expired.  It may "
"also be a nonzero value less than I<min_nr>, if the call was interrupted by "
"a signal handler."
msgstr ""

#. type: Plain text
#: build/C/man2/io_getevents.2:73
msgid "For the failure return, see NOTES."
msgstr ""

#. type: Plain text
#: build/C/man2/io_getevents.2:77
msgid "Either I<events> or I<timeout> is an invalid pointer."
msgstr ""

#. type: Plain text
#: build/C/man2/io_getevents.2:81
msgid "Interrupted by a signal handler; see B<signal>(7)."
msgstr ""

#. type: Plain text
#: build/C/man2/io_getevents.2:86
msgid "I<ctx_id> is invalid.  I<min_nr> is out of range or I<nr> is out of range."
msgstr ""

#. type: Plain text
#: build/C/man2/io_getevents.2:90
msgid "B<io_getevents>()  is not implemented on this architecture."
msgstr ""

#. type: Plain text
#: build/C/man2/io_getevents.2:96
msgid ""
"B<io_getevents>()  is Linux-specific and should not be used in programs that "
"are intended to be portable."
msgstr ""

#.  http://git.fedorahosted.org/git/?p=libaio.git
#. type: Plain text
#: build/C/man2/io_getevents.2:105
msgid ""
"Glibc does not provide a wrapper function for this system call.  You could "
"invoke it using B<syscall>(2).  But instead, you probably want to use the "
"B<io_getevents>()  wrapper function provided by I<libaio>."
msgstr ""

#. type: Plain text
#: build/C/man2/io_getevents.2:131
msgid ""
"An invalid I<ctx_id> may cause a segmentation fault instead of generating "
"the error B<EINVAL>."
msgstr ""

#.  .SH AUTHOR
#.  Kent Yoder.
#. type: Plain text
#: build/C/man2/io_getevents.2:140
msgid ""
"B<io_cancel>(2), B<io_destroy>(2), B<io_setup>(2), B<io_submit>(2), "
"B<aio>(7), B<time>(7)"
msgstr ""

#. type: TH
#: build/C/man2/io_setup.2:7
#, no-wrap
msgid "IO_SETUP"
msgstr ""

#. type: Plain text
#: build/C/man2/io_setup.2:10
msgid "io_setup - create an asynchronous I/O context"
msgstr ""

#. type: Plain text
#: build/C/man2/io_setup.2:15
#, no-wrap
msgid "B<long io_setup(unsigned >I<nr_events>B<, aio_context_t *>I<ctx_idp>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man2/io_setup.2:28
msgid ""
"I<Note>: this page describes the raw Linux system call interface.  The "
"wrapper function provided by I<libaio> uses a different type for the "
"I<ctx_idp> argument.  See NOTES."
msgstr ""

#. type: Plain text
#: build/C/man2/io_setup.2:40
msgid ""
"The B<io_setup>()  system call creates an asynchronous I/O context suitable "
"for concurrently processing I<nr_events> operations.  The I<ctx_idp> "
"argument must not point to an AIO context that already exists, and must be "
"initialized to 0 prior to the call.  On successful creation of the AIO "
"context, I<*ctx_idp> is filled in with the resulting handle."
msgstr ""

#. type: Plain text
#: build/C/man2/io_setup.2:45
msgid "On success, B<io_setup>()  returns 0.  For the failure return, see NOTES."
msgstr ""

#. type: Plain text
#: build/C/man2/io_setup.2:53
msgid ""
"The specified I<nr_events> exceeds the limit of available events, as defined "
"in I</proc/sys/fs/aio-max-nr> (see B<proc>(5))."
msgstr ""

#. type: Plain text
#: build/C/man2/io_setup.2:56
msgid "An invalid pointer is passed for I<ctx_idp>."
msgstr ""

#. type: Plain text
#: build/C/man2/io_setup.2:61
msgid ""
"I<ctx_idp> is not initialized, or the specified I<nr_events> exceeds "
"internal limits.  I<nr_events> should be greater than 0."
msgstr ""

#. type: TP
#: build/C/man2/io_setup.2:61
#, no-wrap
msgid "B<ENOMEM>"
msgstr ""

#. type: Plain text
#: build/C/man2/io_setup.2:64
msgid "Insufficient kernel resources are available."
msgstr ""

#. type: Plain text
#: build/C/man2/io_setup.2:68
msgid "B<io_setup>()  is not implemented on this architecture."
msgstr ""

#. type: Plain text
#: build/C/man2/io_setup.2:74
msgid ""
"B<io_setup>()  is Linux-specific and should not be used in programs that are "
"intended to be portable."
msgstr ""

#.  http://git.fedorahosted.org/git/?p=libaio.git
#. type: Plain text
#: build/C/man2/io_setup.2:83
msgid ""
"Glibc does not provide a wrapper function for this system call.  You could "
"invoke it using B<syscall>(2).  But instead, you probably want to use the "
"B<io_setup>()  wrapper function provided by I<libaio>."
msgstr ""

#.  But glibc is confused, since <libaio.h> uses 'io_context_t' to declare
#.  the system call.
#. type: Plain text
#: build/C/man2/io_setup.2:104
msgid ""
"Note that the I<libaio> wrapper function uses a different type "
"(I<io_context_t\\ *>)  for the I<ctx_idp> argument.  Note also that the "
"I<libaio> wrapper does not follow the usual C library conventions for "
"indicating errors: on error it returns a negated error number (the negative "
"of one of the values listed in ERRORS).  If the system call is invoked via "
"B<syscall>(2), then the return value follows the usual conventions for "
"indicating an error: -1, with I<errno> set to a (positive) value that "
"indicates the error."
msgstr ""

#.  .SH AUTHOR
#.  Kent Yoder.
#. type: Plain text
#: build/C/man2/io_setup.2:112
msgid ""
"B<io_cancel>(2), B<io_destroy>(2), B<io_getevents>(2), B<io_submit>(2), "
"B<aio>(7)"
msgstr ""

#. type: TH
#: build/C/man2/io_submit.2:8
#, no-wrap
msgid "IO_SUBMIT"
msgstr ""

#. type: Plain text
#: build/C/man2/io_submit.2:11
msgid "io_submit - submit asynchronous I/O blocks for processing"
msgstr ""

#. type: Plain text
#: build/C/man2/io_submit.2:17
#, no-wrap
msgid ""
"B<int io_submit(aio_context_t >I<ctx_id>B<, long >I<nr>B<, struct iocb "
"**>I<iocbpp>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man2/io_submit.2:40
msgid ""
"The B<io_submit>()  system call queues I<nr> I/O request blocks for "
"processing in the AIO context I<ctx_id>.  The I<iocbpp> argument should be "
"an array of I<nr> AIO control blocks, which will be submitted to context "
"I<ctx_id>."
msgstr ""

#. type: Plain text
#: build/C/man2/io_submit.2:46
msgid ""
"The I<iocb> (I/O control block) structure defined in I<linux/aio_abi.h> "
"defines the parameters that control the I/O operation."
msgstr ""

#. type: Plain text
#: build/C/man2/io_submit.2:50
#, no-wrap
msgid "#include E<lt>linux/aio_abi.hE<gt>\n"
msgstr ""

#. type: Plain text
#: build/C/man2/io_submit.2:64
#, no-wrap
msgid ""
"struct iocb {\n"
"    __u64   aio_data;\n"
"    __u32   PADDED(aio_key, aio_rw_flags);\n"
"    __u16   aio_lio_opcode;\n"
"    __s16   aio_reqprio;\n"
"    __u32   aio_fildes;\n"
"    __u64   aio_buf;\n"
"    __u64   aio_nbytes;\n"
"    __s64   aio_offset;\n"
"    __u64   aio_reserved2;\n"
"    __u32   aio_flags;\n"
"    __u32   aio_resfd;\n"
"};\n"
msgstr ""

#. type: TP
#: build/C/man2/io_submit.2:68
#, no-wrap
msgid "I<aio_data>"
msgstr ""

#. type: Plain text
#: build/C/man2/io_submit.2:76
msgid ""
"This data is copied into the I<data> field of the I<io_event> structure upon "
"I/O completion (see B<io_getevents>(2))."
msgstr ""

#. type: TP
#: build/C/man2/io_submit.2:76
#, no-wrap
msgid "I<aio_key>"
msgstr ""

#. type: Plain text
#: build/C/man2/io_submit.2:82
msgid ""
"This is an internal field used by the kernel.  Do not modify this field "
"after an B<io_submit>()  call."
msgstr ""

#. type: TP
#: build/C/man2/io_submit.2:82
#, no-wrap
msgid "I<aio_rw_flags>"
msgstr ""

#. type: Plain text
#: build/C/man2/io_submit.2:86
msgid "This defines the R/W flags passed with structure.  The valid values are:"
msgstr ""

#. type: TP
#: build/C/man2/io_submit.2:87
#, no-wrap
msgid "B<RWF_APPEND> (since Linux 4.16)"
msgstr ""

#.  commit e1fc742e14e01d84d9693c4aca4ab23da65811fb
#. type: Plain text
#: build/C/man2/io_submit.2:101
msgid ""
"Append data to the end of the file.  See the description of the flag of the "
"same name in B<pwritev2>(2)  as well as the description of B<O_APPEND> in "
"B<open>(2).  The I<aio_offset> field is ignored.  The file offset is not "
"changed."
msgstr ""

#. type: TP
#: build/C/man2/io_submit.2:101
#, no-wrap
msgid "B<RWF_DSYNC> (since Linux 4.13)"
msgstr ""

#. type: Plain text
#: build/C/man2/io_submit.2:111
msgid ""
"Write operation complete according to requirement of synchronized I/O data "
"integrity.  See the description of the flag of the same name in "
"B<pwritev2>(2)  as well the description of B<O_DSYNC> in B<open>(2)."
msgstr ""

#. type: TP
#: build/C/man2/io_submit.2:111
#, no-wrap
msgid "B<RWF_HIPRI> (since Linux 4.13)"
msgstr ""

#. type: Plain text
#: build/C/man2/io_submit.2:114
msgid "High priority request, poll if possible"
msgstr ""

#. type: TP
#: build/C/man2/io_submit.2:114
#, no-wrap
msgid "B<RWF_NOWAIT> (since Linux 4.14)"
msgstr ""

#. type: Plain text
#: build/C/man2/io_submit.2:128
msgid ""
"Don't wait if the I/O will block for operations such as file block "
"allocations, dirty page flush, mutex locks, or a congested block device "
"inside the kernel.  If any of these conditions are met, the control block is "
"returned immediately with a return value of B<-EAGAIN> in the I<res> field "
"of the I<io_event> structure (see B<io_getevents>(2))."
msgstr ""

#. type: TP
#: build/C/man2/io_submit.2:128
#, no-wrap
msgid "B<RWF_SYNC> (since Linux 4.13)"
msgstr ""

#. type: Plain text
#: build/C/man2/io_submit.2:138
msgid ""
"Write operation complete according to requirement of synchronized I/O file "
"integrity.  See the description of the flag of the same name in "
"B<pwritev2>(2)  as well the description of B<O_SYNC> in B<open>(2)."
msgstr ""

#. type: Plain text
#: build/C/man2/io_submit.2:147
msgid ""
"This defines the type of I/O to be performed by the I<iocb> structure.  The "
"valid values are defined by the enum defined in I<linux/aio_abi.h>:"
msgstr ""

#. type: Plain text
#: build/C/man2/io_submit.2:160
#, no-wrap
msgid ""
"enum {\n"
"    IOCB_CMD_PREAD = 0,\n"
"    IOCB_CMD_PWRITE = 1,\n"
"    IOCB_CMD_FSYNC = 2,\n"
"    IOCB_CMD_FDSYNC = 3,\n"
"    IOCB_CMD_POLL = 5,\n"
"    IOCB_CMD_NOOP = 6,\n"
"    IOCB_CMD_PREADV = 7,\n"
"    IOCB_CMD_PWRITEV = 8,\n"
"};\n"
msgstr ""

#. type: Plain text
#: build/C/man2/io_submit.2:165
msgid "This defines the requests priority."
msgstr ""

#. type: TP
#: build/C/man2/io_submit.2:178
#, no-wrap
msgid "I<aio_flags>"
msgstr ""

#. type: Plain text
#: build/C/man2/io_submit.2:184
msgid ""
"This is the set of flags associated with the I<iocb> structure.  The valid "
"values are:"
msgstr ""

#. type: TP
#: build/C/man2/io_submit.2:185
#, no-wrap
msgid "B<IOCB_FLAG_RESFD>"
msgstr ""

#. type: Plain text
#: build/C/man2/io_submit.2:191
msgid ""
"Asynchronous I/O control must signal the file descriptor mentioned in "
"I<aio_resfd> upon completion."
msgstr ""

#. type: TP
#: build/C/man2/io_submit.2:191
#, no-wrap
msgid "B<IOCB_FLAG_IOPRIO> (since Linux 4.18)"
msgstr ""

#.  commit d9a08a9e616beeccdbd0e7262b7225ffdfa49e92
#. type: Plain text
#: build/C/man2/io_submit.2:200
msgid ""
"Interpret the I<aio_reqprio> field as an B<IOPRIO_VALUE> as defined by "
"I<linux/ioprio.h>."
msgstr ""

#. type: TP
#: build/C/man2/io_submit.2:201
#, no-wrap
msgid "I<aio_resfd>"
msgstr ""

#. type: Plain text
#: build/C/man2/io_submit.2:204
msgid "The file descriptor to signal in the event of asynchronous I/O completion."
msgstr ""

#. type: Plain text
#: build/C/man2/io_submit.2:210
msgid ""
"On success, B<io_submit>()  returns the number of I<iocb>s submitted (which "
"may be less than I<nr>, or 0 if I<nr> is zero).  For the failure return, see "
"NOTES."
msgstr ""

#. type: Plain text
#: build/C/man2/io_submit.2:214
msgid "Insufficient resources are available to queue any I<iocb>s."
msgstr ""

#. type: Plain text
#: build/C/man2/io_submit.2:217
msgid "The file descriptor specified in the first I<iocb> is invalid."
msgstr ""

#. type: Plain text
#: build/C/man2/io_submit.2:230
msgid ""
"The AIO context specified by I<ctx_id> is invalid.  I<nr> is less than 0.  "
"The I<iocb> at I<*iocbpp[0]> is not properly initialized, the operation "
"specified is invalid for the file descriptor in the I<iocb>, or the value in "
"the I<aio_reqprio> field is invalid."
msgstr ""

#. type: Plain text
#: build/C/man2/io_submit.2:234
msgid "B<io_submit>()  is not implemented on this architecture."
msgstr ""

#. type: TP
#: build/C/man2/io_submit.2:234
#, no-wrap
msgid "B<EPERM>"
msgstr ""

#. type: Plain text
#: build/C/man2/io_submit.2:243
msgid ""
"The I<aio_reqprio> field is set with the class B<IOPRIO_CLASS_RT>, but the "
"submitting context does not have the B<CAP_SYS_ADMIN> capability."
msgstr ""

#. type: Plain text
#: build/C/man2/io_submit.2:249
msgid ""
"B<io_submit>()  is Linux-specific and should not be used in programs that "
"are intended to be portable."
msgstr ""

#.  http://git.fedorahosted.org/git/?p=libaio.git
#. type: Plain text
#: build/C/man2/io_submit.2:258
msgid ""
"Glibc does not provide a wrapper function for this system call.  You could "
"invoke it using B<syscall>(2).  But instead, you probably want to use the "
"B<io_submit>()  wrapper function provided by I<libaio>."
msgstr ""

#.  .SH AUTHOR
#.  Kent Yoder.
#. type: Plain text
#: build/C/man2/io_submit.2:287
msgid ""
"B<io_cancel>(2), B<io_destroy>(2), B<io_getevents>(2), B<io_setup>(2), "
"B<aio>(7)"
msgstr ""

#. type: TH
#: build/C/man3/lio_listio.3:24
#, no-wrap
msgid "LIO_LISTIO"
msgstr ""

#. type: TH
#: build/C/man3/lio_listio.3:24
#, no-wrap
msgid "2020-04-11"
msgstr ""

#. type: Plain text
#: build/C/man3/lio_listio.3:27
msgid "lio_listio - initiate a list of I/O requests"
msgstr ""

#. type: Plain text
#: build/C/man3/lio_listio.3:33
#, no-wrap
msgid ""
"B<int lio_listio(int >I<mode>B<, struct aiocb *const >I<aiocb_list>B<[],>\n"
"B<               int >I<nitems>B<, struct sigevent *>I<sevp>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/lio_listio.3:41
msgid ""
"The B<lio_listio>()  function initiates the list of I/O operations described "
"by the array I<aiocb_list>."
msgstr ""

#. type: Plain text
#: build/C/man3/lio_listio.3:45
msgid "The I<mode> operation has one of the following values:"
msgstr ""

#. type: TP
#: build/C/man3/lio_listio.3:45
#, no-wrap
msgid "B<LIO_WAIT>"
msgstr ""

#. type: Plain text
#: build/C/man3/lio_listio.3:51
msgid ""
"The call blocks until all operations are complete.  The I<sevp> argument is "
"ignored."
msgstr ""

#. type: TP
#: build/C/man3/lio_listio.3:51
#, no-wrap
msgid "B<LIO_NOWAIT>"
msgstr ""

#. type: Plain text
#: build/C/man3/lio_listio.3:63
msgid ""
"The I/O operations are queued for processing and the call returns "
"immediately.  When all of the I/O operations complete, asynchronous "
"notification occurs, as specified by the I<sevp> argument; see "
"B<sigevent>(7)  for details.  If I<sevp> is NULL, no asynchronous "
"notification occurs."
msgstr ""

#. type: Plain text
#: build/C/man3/lio_listio.3:77
msgid ""
"The I<aiocb_list> argument is an array of pointers to I<aiocb> structures "
"that describe I/O operations.  These operations are executed in an "
"unspecified order.  The I<nitems> argument specifies the size of the array "
"I<aiocb_list>.  null pointers in I<aiocb_list> are ignored."
msgstr ""

#. type: Plain text
#: build/C/man3/lio_listio.3:83
msgid ""
"In each control block in I<aiocb_list>, the I<aio_lio_opcode> field "
"specifies the I/O operation to be initiated, as follows:"
msgstr ""

#. type: TP
#: build/C/man3/lio_listio.3:83
#, no-wrap
msgid "B<LIO_READ>"
msgstr ""

#. type: Plain text
#: build/C/man3/lio_listio.3:89
msgid ""
"Initiate a read operation.  The operation is queued as for a call to "
"B<aio_read>(3)  specifying this control block."
msgstr ""

#. type: TP
#: build/C/man3/lio_listio.3:89
#, no-wrap
msgid "B<LIO_WRITE>"
msgstr ""

#. type: Plain text
#: build/C/man3/lio_listio.3:95
msgid ""
"Initiate a write operation.  The operation is queued as for a call to "
"B<aio_write>(3)  specifying this control block."
msgstr ""

#. type: TP
#: build/C/man3/lio_listio.3:95
#, no-wrap
msgid "B<LIO_NOP>"
msgstr ""

#. type: Plain text
#: build/C/man3/lio_listio.3:98
msgid "Ignore this control block."
msgstr ""

#. type: Plain text
#: build/C/man3/lio_listio.3:108
msgid ""
"The remaining fields in each control block have the same meanings as for "
"B<aio_read>(3)  and B<aio_write>(3).  The I<aio_sigevent> fields of each "
"control block can be used to specify notifications for the individual I/O "
"operations (see B<sigevent>(7))."
msgstr ""

#. type: Plain text
#: build/C/man3/lio_listio.3:118
msgid ""
"If I<mode> is B<LIO_NOWAIT>, B<lio_listio>()  returns 0 if all I/O "
"operations are successfully queued.  Otherwise, -1 is returned, and I<errno> "
"is set to indicate the error."
msgstr ""

#. type: Plain text
#: build/C/man3/lio_listio.3:128
msgid ""
"If I<mode> is B<LIO_WAIT>, B<lio_listio>()  returns 0 when all of the I/O "
"operations have completed successfully.  Otherwise, -1 is returned, and "
"I<errno> is set to indicate the error."
msgstr ""

#. type: Plain text
#: build/C/man3/lio_listio.3:146
msgid ""
"The return status from B<lio_listio>()  provides information only about the "
"call itself, not about the individual I/O operations.  One or more of the "
"I/O operations may fail, but this does not prevent other operations "
"completing.  The status of individual I/O operations in I<aiocb_list> can be "
"determined using B<aio_error>(3).  When an operation has completed, its "
"return status can be obtained using B<aio_return>(3).  Individual I/O "
"operations can fail for the reasons described in B<aio_read>(3)  and "
"B<aio_write>(3)."
msgstr ""

#. type: Plain text
#: build/C/man3/lio_listio.3:150
msgid "The B<lio_listio>()  function may fail for the following reasons:"
msgstr ""

#.  Doesn't happen in glibc(?)
#. type: Plain text
#: build/C/man3/lio_listio.3:161
msgid ""
"The number of I/O operations specified by I<nitems> would cause the limit "
"B<AIO_MAX> to be exceeded."
msgstr ""

#. type: Plain text
#: build/C/man3/lio_listio.3:171
msgid ""
"I<mode> was B<LIO_WAIT> and a signal was caught before all I/O operations "
"completed; see B<signal>(7).  (This may even be one of the signals used for "
"asynchronous I/O completion notification.)"
msgstr ""

#.  Doesn't happen in glibc(?)
#. type: Plain text
#: build/C/man3/lio_listio.3:179
msgid "I<mode> is invalid, or I<nitems> exceeds the limit B<AIO_LISTIO_MAX>."
msgstr ""

#. type: TP
#: build/C/man3/lio_listio.3:179
#, no-wrap
msgid "B<EIO>"
msgstr ""

#.  e.g., ioa_reqprio or aio_lio_opcode was invalid
#. type: Plain text
#: build/C/man3/lio_listio.3:187
msgid ""
"One of more of the operations specified by I<aiocb_list> failed.  The "
"application can check the status of each operation using B<aio_return>(3)."
msgstr ""

#. type: Plain text
#: build/C/man3/lio_listio.3:202
msgid ""
"If B<lio_listio>()  fails with the error B<EAGAIN>, B<EINTR>, or B<EIO>, "
"then some of the operations in I<aiocb_list> may have been initiated.  If "
"B<lio_listio>()  fails for any other reason, then none of the I/O operations "
"has been initiated."
msgstr ""

#. type: Plain text
#: build/C/man3/lio_listio.3:206
msgid "The B<lio_listio>()  function is available since glibc 2.1."
msgstr ""

#. type: tbl table
#: build/C/man3/lio_listio.3:216
#, no-wrap
msgid "B<lio_listio>()"
msgstr ""

#.  or the control block of the operation
#. type: Plain text
#: build/C/man3/lio_listio.3:229
msgid ""
"It is a good idea to zero out the control blocks before use.  The control "
"blocks must not be changed while the I/O operations are in progress.  The "
"buffer areas being read into or written from must not be accessed during the "
"operations or undefined results may occur.  The memory areas involved must "
"remain valid."
msgstr ""

#. type: Plain text
#: build/C/man3/lio_listio.3:241
msgid ""
"B<aio_cancel>(3), B<aio_error>(3), B<aio_fsync>(3), B<aio_return>(3), "
"B<aio_suspend>(3), B<aio_write>(3), B<aio>(7)"
msgstr ""
