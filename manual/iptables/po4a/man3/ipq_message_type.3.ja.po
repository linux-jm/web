# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-03-24 13:11+0900\n"
"PO-Revision-Date: 2013-04-08 14:29+0900\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#, no-wrap
msgid "IPQ_MESSAGE_TYPE"
msgstr ""

#. type: TH
#, no-wrap
msgid "16 October 2001"
msgstr ""

#. type: TH
#, no-wrap
msgid "Linux iptables 1.2"
msgstr ""

#. type: TH
#, no-wrap
msgid "Linux Programmer's Manual"
msgstr ""

#
#
#
#
#.      Copyright (c) 2000-2001 Netfilter Core Team
#.      This program is free software; you can redistribute it and/or modify
#.      it under the terms of the GNU General Public License as published by
#.      the Free Software Foundation; either version 2 of the License, or
#.      (at your option) any later version.
#.      This program is distributed in the hope that it will be useful,
#.      but WITHOUT ANY WARRANTY; without even the implied warranty of
#.      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#.      GNU General Public License for more details.
#.      You should have received a copy of the GNU General Public License
#.      along with this program; if not, write to the Free Software
#.      Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#. type: SH
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
msgid "ipq_message_type, ipq_get_packet, ipq_getmsgerr \\(em query queue messages"
msgstr ""

#. type: SH
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
msgid "B<#include E<lt>linux/netfilter.hE<gt>>"
msgstr ""

#. type: Plain text
msgid "B<#include E<lt>libipq.hE<gt>>"
msgstr ""

#. type: Plain text
msgid "B<int ipq_message_type(const unsigned char *>I<buf>B<);>"
msgstr ""

#. type: Plain text
msgid "B<ipq_packet_msg_t *ipq_get_packet(const unsigned char *>I<buf>B<);>"
msgstr ""

#. type: Plain text
msgid "B<int ipq_get_msgerr(const unsigned char *>I<buf>B<);>"
msgstr ""

#. type: SH
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
msgid "The B<ipq_message_type> function returns the type of queue message returned to userspace via B<ipq_read>."
msgstr ""

#. type: Plain text
msgid "B<ipq_message_type> should always be called following a successful call to B<ipq_read> to determine whether the message is a packet message or an error message. The I<buf> parameter should be the same data obtained from the previous call to B<ipq_read>."
msgstr ""

#. type: Plain text
msgid "B<ipq_message_type> will return one of the following values:"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<NLMSG_ERROR>"
msgstr ""

#. type: Plain text
msgid "An error message generated by the Netlink transport."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<IPQM_PACKET>"
msgstr ""

#. type: Plain text
msgid "A packet message containing packet metadata and optional packet payload data."
msgstr ""

#. type: Plain text
msgid "The B<ipq_get_packet> function should be called if B<ipq_message_type> returns B<IPQM_PACKET>.  The I<buf> parameter should point to the same data used for the call to B<ipq_message_type>.  The pointer returned by B<ipq_get_packet> points to a packet message, which is declared as follows:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"typedef struct ipq_packet_msg {\n"
"\tunsigned long packet_id;        /* ID of queued packet */\n"
"\tunsigned long mark;             /* Netfilter mark value */\n"
"\tlong timestamp_sec;             /* Packet arrival time (seconds) */\n"
"\tlong timestamp_usec;            /* Packet arrvial time (+useconds) */\n"
"\tunsigned int hook;              /* Netfilter hook we rode in on */\n"
"\tchar indev_name[IFNAMSIZ];      /* Name of incoming interface */\n"
"\tchar outdev_name[IFNAMSIZ];     /* Name of outgoing interface */\n"
"\tunsigned short hw_protocol;     /* Hardware protocol (network order) */\n"
"\tunsigned short hw_type;         /* Hardware type */\n"
"\tunsigned char hw_addrlen;       /* Hardware address length */\n"
"\tunsigned char hw_addr[8];       /* Hardware address */\n"
"\tsize_t data_len;                /* Length of packet data */\n"
"\tunsigned char payload[0];       /* Optional packet data */\n"
"} ipq_packet_msg_t;\n"
msgstr ""

#. type: Plain text
msgid "Each of these fields may be read by the application.  If the queue mode is B<IPQ_COPY_PACKET> and the I<data_len> value is greater than zero, the packet payload contents may be accessed in the memory following the B<ipq_packet_msg_t> structure to a range of I<data_len.>"
msgstr ""

#. type: Plain text
msgid "The I<packet_id> field contains a packet identifier to be used when calling B<ipq_set_verdict>."
msgstr ""

#. type: Plain text
msgid "The B<ipq_get_msgerr> function should be called if B<ipq_message_type> returns B<NLMSG_ERROR.> The I<buf> parameter should point to the same data used for the call to B<ipq_message_type>.  The value returned by B<ipq_get_msgerr> is set by higher level kernel code and corresponds to standard B<errno> values."
msgstr ""

#. type: SH
#, no-wrap
msgid "BUGS"
msgstr ""

#. type: Plain text
msgid "None known."
msgstr ""

#. type: SH
#, no-wrap
msgid "AUTHOR"
msgstr ""

#. type: Plain text
msgid "James Morris E<lt>jmorris@intercode.com.auE<gt>"
msgstr ""

#. type: SH
#, no-wrap
msgid "COPYRIGHT"
msgstr ""

#. type: Plain text
msgid "Copyright (c) 2000-2001 Netfilter Core Team."
msgstr ""

#. type: Plain text
msgid "Distributed under the GNU General Public License."
msgstr ""

#. type: SH
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
msgid "B<iptables>(8), B<libipq>(3)."
msgstr ""
