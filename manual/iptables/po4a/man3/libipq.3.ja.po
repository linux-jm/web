# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-03-24 13:11+0900\n"
"PO-Revision-Date: 2013-04-08 14:30+0900\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#, no-wrap
msgid "LIBIPQ"
msgstr ""

#. type: TH
#, no-wrap
msgid "16 October 2001"
msgstr ""

#. type: TH
#, no-wrap
msgid "Linux iptables 1.2"
msgstr ""

#. type: TH
#, no-wrap
msgid "Linux Programmer's Manual"
msgstr ""

#
#
#
#
#.      Copyright (c) 2000-2001 Netfilter Core Team
#.      This program is free software; you can redistribute it and/or modify
#.      it under the terms of the GNU General Public License as published by
#.      the Free Software Foundation; either version 2 of the License, or
#.      (at your option) any later version.
#.      This program is distributed in the hope that it will be useful,
#.      but WITHOUT ANY WARRANTY; without even the implied warranty of
#.      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#.      GNU General Public License for more details.
#.      You should have received a copy of the GNU General Public License
#.      along with this program; if not, write to the Free Software
#.      Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#. type: SH
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
msgid "libipq \\(em iptables userspace packet queuing library."
msgstr ""

#. type: SH
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
msgid "B<#include E<lt>linux/netfilter.hE<gt>>"
msgstr ""

#. type: Plain text
msgid "B<#include E<lt>libipq.hE<gt>>"
msgstr ""

#. type: SH
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
msgid "libipq is a development library for iptables userspace packet queuing."
msgstr ""

#. type: SS
#, no-wrap
msgid "Userspace Packet Queuing"
msgstr ""

#. type: Plain text
msgid "Netfilter provides a mechanism for passing packets out of the stack for queueing to userspace, then receiving these packets back into the kernel with a verdict specifying what to do with the packets (such as ACCEPT or DROP).  These packets may also be modified in userspace prior to reinjection back into the kernel."
msgstr ""

#. type: Plain text
msgid "For each supported protocol, a kernel module called a I<queue handler> may register with Netfilter to perform the mechanics of passing packets to and from userspace."
msgstr ""

#. type: Plain text
msgid "The standard queue handler for IPv4 is ip_queue.  It is provided as an experimental module with 2.4 kernels, and uses a Netlink socket for kernel/userspace communication."
msgstr ""

#. type: Plain text
msgid "Once ip_queue is loaded, IP packets may be selected with iptables and queued for userspace processing via the QUEUE target.  For example, running the following commands:"
msgstr ""

#. type: Plain text
msgid "  # modprobe iptable_filter"
msgstr ""

#. type: Plain text
msgid "  # modprobe ip_queue"
msgstr ""

#. type: Plain text
msgid "  # iptables -A OUTPUT -p icmp -j QUEUE"
msgstr ""

#. type: Plain text
msgid "will cause any locally generated ICMP packets (e.g. ping output) to be sent to the ip_queue module, which will then attempt to deliver the packets to a userspace application.  If no userspace application is waiting, the packets will be dropped"
msgstr ""

#. type: Plain text
msgid "An application may receive and process these packets via libipq."
msgstr ""

#. type: SS
#, no-wrap
msgid "Libipq Overview"
msgstr ""

#. type: Plain text
msgid "Libipq provides an API for communicating with ip_queue.  The following is an overview of API usage, refer to individual man pages for more details on each function."
msgstr ""

#. type: Plain text
msgid "B<Initialisation>"
msgstr ""

#. type: Plain text
msgid "To initialise the library, call B<ipq_create_handle>(3).  This will attempt to bind to the Netlink socket used by ip_queue and return an opaque context handle for subsequent library calls."
msgstr ""

#. type: Plain text
msgid "B<Setting the Queue Mode>"
msgstr ""

#. type: Plain text
msgid "B<ipq_set_mode>(3)  allows the application to specify whether packet metadata, or packet payloads as well as metadata are copied to userspace.  It is also used to initially notify ip_queue that an application is ready to receive queue messages."
msgstr ""

#. type: Plain text
msgid "B<Receiving Packets from the Queue>"
msgstr ""

#. type: Plain text
msgid "B<ipq_read>(3)  waits for queue messages to arrive from ip_queue and copies them into a supplied buffer.  Queue messages may be I<packet messages> or I<error messages.>"
msgstr ""

#. type: Plain text
msgid "The type of packet may be determined with B<ipq_message_type>(3)."
msgstr ""

#. type: Plain text
msgid "If it's a packet message, the metadata and optional payload may be retrieved with B<ipq_get_packet>(3)."
msgstr ""

#. type: Plain text
msgid "To retrieve the value of an error message, use B<ipq_get_msgerr>(3)."
msgstr ""

#. type: Plain text
msgid "B<Issuing Verdicts on Packets>"
msgstr ""

#. type: Plain text
msgid "To issue a verdict on a packet, and optionally return a modified version of the packet to the kernel, call B<ipq_set_verdict>(3)."
msgstr ""

#. type: Plain text
msgid "B<Error Handling>"
msgstr ""

#. type: Plain text
msgid "An error string corresponding to the current value of the internal error variable B<ipq_errno> may be obtained with B<ipq_errstr>(3)."
msgstr ""

#. type: Plain text
msgid "For simple applications, calling B<ipq_perror>(3)  will print the same message as B<ipq_errstr>(3), as well as the string corresponding to the global B<errno> value (if set) to stderr."
msgstr ""

#. type: Plain text
msgid "B<Cleaning Up>"
msgstr ""

#. type: Plain text
msgid "To free up the Netlink socket and destroy resources associated with the context handle, call B<ipq_destroy_handle>(3)."
msgstr ""

#. type: SH
#, no-wrap
msgid "SUMMARY"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ipq_create_handle>(3)"
msgstr ""

#. type: Plain text
msgid "Initialise library, return context handle."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ipq_set_mode>(3)"
msgstr ""

#. type: Plain text
msgid "Set the queue mode, to copy either packet metadata, or payloads as well as metadata to userspace."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ipq_read>(3)"
msgstr ""

#. type: Plain text
msgid "Wait for a queue message to arrive from ip_queue and read it into a buffer."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ipq_message_type>(3)"
msgstr ""

#. type: Plain text
msgid "Determine message type in the buffer."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ipq_get_packet>(3)"
msgstr ""

#. type: Plain text
msgid "Retrieve a packet message from the buffer."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ipq_get_msgerr>(3)"
msgstr ""

#. type: Plain text
msgid "Retrieve an error message from the buffer."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ipq_set_verdict>(3)"
msgstr ""

#. type: Plain text
msgid "Set a verdict on a packet, optionally replacing its contents."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ipq_errstr>(3)"
msgstr ""

#. type: Plain text
msgid "Return an error message corresponding to the internal ipq_errno variable."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ipq_perror>(3)"
msgstr ""

#. type: Plain text
msgid "Helper function to print error messages to stderr."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ipq_destroy_handle>(3)"
msgstr ""

#. type: Plain text
msgid "Destroy context handle and associated resources."
msgstr ""

#. type: SH
#, no-wrap
msgid "EXAMPLE"
msgstr ""

#. type: Plain text
msgid "The following is an example of a simple application which receives packets and issues NF_ACCEPT verdicts on each packet."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"/*\n"
" * This code is GPL.\n"
" */\n"
"#include E<lt>linux/netfilter.hE<gt>\n"
"#include E<lt>libipq.hE<gt>\n"
"#include E<lt>stdio.hE<gt>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "#define BUFSIZE 2048 \n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"static void die(struct ipq_handle *h)\n"
"{\n"
"\tipq_perror(\"passer\");\n"
"\tipq_destroy_handle(h);\n"
"\texit(1);\n"
"}\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"int main(int argc, char **argv)\n"
"{\n"
"\tint status;\n"
"\tunsigned char buf[BUFSIZE];\n"
"\tstruct ipq_handle *h;\n"
"\t\n"
"\th = ipq_create_handle(0, NFPROTO_IPV4);\n"
"\tif (!h)\n"
"\t\tdie(h);\n"
"\t\t\n"
"\tstatus = ipq_set_mode(h, IPQ_COPY_PACKET, BUFSIZE);\n"
"\tif (status E<lt> 0)\n"
"\t\tdie(h);\n"
"\t\t\n"
"\tdo{\n"
"\t\tstatus = ipq_read(h, buf, BUFSIZE, 0);\n"
"\t\tif (status E<lt> 0)\n"
"\t\t\tdie(h);\n"
"\t\t\t\n"
"\t\tswitch (ipq_message_type(buf)) {\n"
"\t\t\tcase NLMSG_ERROR:\n"
"\t\t\t\tfprintf(stderr, \"Received error message %d\\en\",\n"
"\t\t\t\t        ipq_get_msgerr(buf));\n"
"\t\t\t\tbreak;\n"
"\t\t\t\t\n"
"\t\t\tcase IPQM_PACKET: {\n"
"\t\t\t\tipq_packet_msg_t *m = ipq_get_packet(buf);\n"
"\t\t\t\t\n"
"\t\t\t\tstatus = ipq_set_verdict(h, m-E<gt>packet_id,\n"
"\t\t\t\t                         NF_ACCEPT, 0, NULL);\n"
"\t\t\t\tif (status E<lt> 0)\n"
"\t\t\t\t\tdie(h);\n"
"\t\t\t\tbreak;\n"
"\t\t\t}\n"
"\t\t\t\n"
"\t\t\tdefault:\n"
"\t\t\t\tfprintf(stderr, \"Unknown message type!\\en\");\n"
"\t\t\t\tbreak;\n"
"\t\t}\n"
"\t} while (1);\n"
"\t\n"
"\tipq_destroy_handle(h);\n"
"\treturn 0;\n"
"}\n"
msgstr ""

#. type: Plain text
msgid "Pointers to more libipq application examples may be found in The Netfilter FAQ."
msgstr ""

#. type: SH
#, no-wrap
msgid "DIAGNOSTICS"
msgstr ""

#. type: Plain text
msgid "For information about monitoring and tuning ip_queue, refer to the Linux 2.4 Packet Filtering HOWTO."
msgstr ""

#. type: Plain text
msgid "If an application modifies a packet, it needs to also update any checksums for the packet.  Typically, the kernel will silently discard modified packets with invalid checksums."
msgstr ""

#. type: SH
#, no-wrap
msgid "SECURITY"
msgstr ""

#. type: Plain text
msgid "Processes require CAP_NET_ADMIN capabilty to access the kernel ip_queue module.  Such processes can potentially access and modify any IP packets received, generated or forwarded by the kernel."
msgstr ""

#. type: SH
#, no-wrap
msgid "TODO"
msgstr ""

#. type: Plain text
msgid "Per-handle B<ipq_errno> values."
msgstr ""

#. type: SH
#, no-wrap
msgid "BUGS"
msgstr ""

#. type: Plain text
msgid "Probably."
msgstr ""

#. type: SH
#, no-wrap
msgid "AUTHOR"
msgstr ""

#. type: Plain text
msgid "James Morris E<lt>jmorris@intercode.com.auE<gt>"
msgstr ""

#. type: SH
#, no-wrap
msgid "COPYRIGHT"
msgstr ""

#. type: Plain text
msgid "Copyright (c) 2000-2001 Netfilter Core Team."
msgstr ""

#. type: Plain text
msgid "Distributed under the GNU General Public License."
msgstr ""

#. type: SH
#, no-wrap
msgid "CREDITS"
msgstr ""

#. type: Plain text
msgid "Joost Remijn implemented the B<ipq_read> timeout feature, which appeared in the 1.2.4 release of iptables."
msgstr ""

#. type: Plain text
msgid "Fernando Anton added support for IPv6."
msgstr ""

#. type: SH
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
msgid "B<iptables>(8), B<ipq_create_handle>(3), B<ipq_destroy_handle>(3), B<ipq_errstr>(3), B<ipq_get_msgerr>(3), B<ipq_get_packet>(3), B<ipq_message_type>(3), B<ipq_perror>(3), B<ipq_read>(3), B<ipq_set_mode>(3), B<ipq_set_verdict>(3)."
msgstr ""

#. type: Plain text
msgid "The Netfilter home page at http://netfilter.samba.org/ which has links to The Networking Concepts HOWTO, The Linux 2.4 Packet Filtering HOWTO, The Linux 2.4 NAT HOWTO, The Netfilter Hacking HOWTO, The Netfilter FAQ and many other useful resources."
msgstr ""
