.\"                                                                            
.\" Japanese Version Copyright (c) 1999-2000 Yuichi SATO
.\"         all rights reserved.                                               
.\" Translated Fri Sep 17 03:26:44 JST 1999
.\"         by Yuichi SATO <sato@complex.eng.hokudai.ac.jp>
.\" Modified Wed Jun 28 01:55:54 JST 2000
.\"         by Yuichi SATO <sato@complex.eng.hokudai.ac.jp>
.\" Updated Tue Oct 10 22:29:13 JST 2000
.\"	    by Yuichi SATO <sato@complex.eng.hokudai.ac.jp>
.\" Updated Wed Nov 22 05:26:31 JST 2000
.\"	    by Yuichi SATO <sato@complex.eng.hokudai.ac.jp>
.\" Modified Fri Dec  1 18:58:22 JST 2000
.\"	    by Yuichi SATO <sato@complex.eng.hokudai.ac.jp>
.\"
.\"WORD:        caret           キャレット
.\"WORD:        pound sign      シャープ記号
.\"
.TH LESSKEY 1 "Version 358: 08 Jul 2000"
.SH 名前
lesskey \- less のキー割り当てを指定する
.SH 書式
.B "lesskey [-o output] [--] [input]"
.br
.B "lesskey [--output=output] [--] [input]"
.br
.B "lesskey -V"
.br
.B "lesskey --version"
.SH 説明
.I lesskey
は
.I less
で使われるキー割り当てのセットを指定するために使われる。
入力ファイルはキー割り当てを記述したテキストファイルである。
入力ファイルが "-" のときは、標準入力が読まれる。
入力ファイルが何も指定されないときは、
使用しているシステムに応じた
標準のファイル名が入力ファイルの名前として使われる。
Unix では $HOME/.lesskey が使われる。
MS-DOS では $HOME/_lesskey が使われる。
OS/2 では $HOME/lesskey.ini が使われ、
$HOME が定義されないときは $INIT/lesskey.ini が使われる。
出力ファイルは
.I less
で使われるバイナリファイルである。
出力ファイルが何も指定されておらず、
環境変数 LESSKEY が設定されている場合、
LESSKEY の値が出力ファイルの名前として使われる。
LESSKEY が指定されていない場合は、
使用しているシステムに応じた
標準のファイル名が出力ファイルの名前として使われる。
UNIX と OS-9 では $HOME/.less が使われる。
MS-DOS では $HOME/_less  が使われる。
OS/2 では $HOME/less.ini が使われ、
$HOME が定義されないときは $INIT/less.ini が使われる。
出力ファイルが既に存在する場合、
.I lesskey
は出力ファイルを上書きする。
.PP
-V と --version オプションは、
.I lesskey
にバージョン番号を表示させて、すぐに終了させる。
-V または --version オプションが指定された場合、
他のオプションと引き数は無視される。
.PP
入力ファイルは、いくつかの
.I セクション
から構成される。
各セクションは、セクションのタイプを識別する行から始まる。
指定できるセクションを以下に示す。
.IP #command
新しいコマンドラインキーを定義する。
.IP #line-edit
新しいライン編集キーを定義する。
.IP #env
環境変数を定義する。
.PP
空白行と特別なセクションヘッダ行を除く、
シャープ記号 (#) から始まる行は無視される。

.SH コマンドセクション
コマンドセクションは次の行から始まる。
.sp
#command
.sp
コマンドセクションがファイルの中での最初のセクションである場合、
この行は省略することもできる。
コマンドラインセクションは次の形式の行から構成される。
.sp
	\fIstring\fP <whitespace> \fIaction\fP [extra-string] <newline>
.sp
whitespace (空白) とはスペースとタブを 1 つ以上並べたものである。
\fIstring\fP はアクションを起こすコマンドキーである。
\fIstring\fP は 1 つのコマンドキー、または 15 個までのキーである。
\fIaction\fP は下のリストにある less のアクションである。
\fIstring\fP 中の文字はコマンドの文字通り、もしくは、
コントロールキーを示すためにキャレット (^) を前において表す。
バックスラッシュと、それに続く 3 桁までの 8 進数は、
文字を 8 進数で指定するために使われる。
.\"A backslash followed by certain characters specifies input
.\"characters as follows:
バックスラッシュとその後に続く文字により、次のような入力文字を指定する。
.IP \eb
BACKSPACE
.IP \ee
ESCAPE
.IP \en
NEWLINE
.IP \er
RETURN
.IP \et
TAB
.IP \eku
UP ARROW
.IP \ekd
DOWN ARROW
.IP \ekr
RIGHT ARROW
.IP \ekl
LEFT ARROW
.IP \ekU
PAGE UP
.IP \ekD
PAGE DOWN
.IP \ekh
HOME
.IP \eke
END
.IP \ekx
DELETE
.PP
バックスラッシュの後に続く上に挙げた以外の文字は、
その文字が特殊文字としてでなく、文字通りに使われることを意味している。
バックスラッシュを前に置かなければならない文字は、
キャレット・スペース・タブ・バックスラッシュ自身である。
.PP
アクションの後に "extra" string を続けることもできる。
.I less
が実行されているときにそのようなコマンドが入力されると、
アクションが実行された後、extra string が
.I less
で入力されたときと同じように解釈される。
この特色はコマンドの機能を拡張する場合に使われる。
下の "{" と ":t" コマンドの例を参照すること。
アクションが "quit" の場合、extra string は特別な意味を持つ。
.I less
が終了するとき、extra string の最初の 1 文字が終了ステータスとして使われる。

.SH 例
下の入力ファイルは、less で使われるデフォルトの
コマンドキーセットを表している。
.sp
.nf
	#command
	\er		forw-line 
	\en		forw-line 
	e		forw-line 
	j		forw-line 
	\ekd		forw-line
	^E		forw-line 
	^N		forw-line 
	k		back-line 
	y		back-line 
	^Y		back-line 
	^K		back-line 
	^P		back-line 
	J		forw-line-force 
	K		back-line-force 
	Y		back-line-force 
	d		forw-scroll 
	^D		forw-scroll 
	u		back-scroll 
	^U		back-scroll 
	\e40		forw-screen 
	f		forw-screen 
	^F		forw-screen 
	^V		forw-screen 
	\ekD		forw-screen
	b		back-screen 
	^B		back-screen 
	\eev		back-screen 
	\ekU		back-screen
	z		forw-window 
	w		back-window 
	\ee\e40	forw-screen-force
	F		forw-forever 
	R		repaint-flush 
	r		repaint 
	^R		repaint 
	^L		repaint 
	\eeu		undo-hilite
	g		goto-line 
	<		goto-line 
	\ee<		goto-line 
	p		percent 
	%		percent 
	\ee[		left-scroll
	\ee]		right-scroll
	\ee(		left-scroll
	\ee)		right-scroll
	{		forw-bracket {}
	}		back-bracket {}
	(		forw-bracket ()
	)		back-bracket ()
	[		forw-bracket []
	]		back-bracket []
	\ee^F		forw-bracket 
	\ee^B		back-bracket 
	G		goto-end 
	\ee>		goto-end 
	>		goto-end 
	=		status 
	^G		status 
	:f		status 
	/		forw-search 
	?		back-search 
	\ee/		forw-search *
	\ee?		back-search *
	n		repeat-search 
	\een		repeat-search-all 
	N		reverse-search 
	\eeN		reverse-search-all 
	m		set-mark 
	'		goto-mark 
	^X^X		goto-mark 
	E		examine 
	:e		examine 
	^X^V		examine 
	:n		next-file 
	:p		prev-file 
	:x		index-file 
	-		toggle-option 
	:t		toggle-option t
	s		toggle-option o
	_		display-option 
	|		pipe 
	v		visual 
	!		shell 
	+		firstcmd 
	@		rotate-right 
	H		help 
	h		help 
	V		version 
	0		digit
	1		digit
	2		digit
	3		digit
	4		digit
	5		digit
	6		digit
	7		digit
	8		digit
	9		digit
	q		quit 
	Q		quit 
	:q		quit 
	:Q		quit 
	ZZ		quit 
.fi
.sp
.SH 優先順
.I lesskey
で指定されるコマンドは、デフォルトのコマンドより優先される。
action を "invalid" としたコマンドを入力ファイルに入れておくと、
デフォルトのコマンドキーを使用不可にすることができる。
また、action のところを "noaction" と記述することで、
そのキーは何もしないと定義される。
"noaction" は "invalid" に似ているが、
.I less
は "invalid" コマンドに対してエラーのビープ音を鳴らすが、
"noaction" コマンドに対しては何もしない。
さらに、次のコントロール行を入力ファイルに追加すると、
全てのデフォルトのコマンドが不可にできる。
.sp
#stop
.sp
これにより、全てのデフォルトコマンドは無視される。
#stop 行は、ファイルのそのセクションの最後の行に置かれなければならない。
.PP
#stop は危険であることを理解しておかなければならない。
#stop により全てのデフォルトコマンドが不可にされるので、
必要な全てのアクションを可能にするためには
#stop 行の前に必要なコマンドを指定しなければならない。
例えば、"quit" コマンドを指定しないと使いづらくなる。

.SH ラインエディットセクション
ラインエディットセクションは次の行で始まる。
.sp
#line-edit
.sp
このセクションは、#command セクションで一般のコマンドの新しいキー割り当てを
指定したときと同じやりかたで、
ラインエディットコマンドの新しいキー割り当てを指定する。
ラインエディットセクションは、下の例のように 1 行毎の
キーとアクションのリストからなる。

.SH 例
下の入力ファイルは、less で使われる
デフォルトのラインエディットキーのセットを記述している。
.sp
.nf
	#line-edit
	\et	    	forw-complete
	\e17		back-complete
	\ee\et		back-complete
	^L		expand
	^V		literal
	^A		literal
   	\eel		right
	\ekr		right
	\eeh		left
	\ekl		left
	\eeb		word-left
	\ee\ekl	word-left
	\eew		word-right
	\ee\ekr	word-right
	\eei		insert
	\eex		delete
	\ekx		delete
	\eeX		word-delete
	\eekx		word-delete
	\ee\eb		word-backspace
	\ee0		home
	\ekh		home
	\ee$		end
	\eke		end
	\eek		up
	\eku		up
	\eej		down
.fi
.sp

.SH LESS 環境変数セクション
環境変数セクションは次の行から始まる。
.sp
#env
.sp
この行の後には、環境変数の割り当てリストが続く。
各行は、環境変数名・イコール記号 (=)・環境変数に割り当てる値、
で構成される。
イコール記号の前後の空白は無視される。
この方法で割り当てられる変数は、
.I less
でしか参照されない。
ある変数がシステム環境でも lesskey ファイルでも指定されている場合、
lesskey ファイルでの値が優先される。
lesskey ファイルは環境変数を上書きするために使うこともできるが、
lesskey ファイルで環境変数を設定する主な目的は、
.I less
の全ての設定情報を 1 つのファイルに収めることである。

.SH 例
下の入力ファイルでは、
.I less
を常に -i オプションをつけて実行し、
文字セットを "latin1" にするように指定している。
.sp
.nf
	#env
	LESS = -i
	LESSCHARSET = latin1
.fi
.sp

.SH 関連項目
less(1)

.SH 警告
上矢印のような特殊キーをキーボードに依存しない方法で指定することは
不可能である。
そのような特殊キーを指定する唯一の方法は、
そのキーが押されたときにキーボードが送るエスケープシーケンスを
指定することである。
.PP
MS-DOS と OS/2 では、NUL 文字 (0) で始まる文字列を送るキーがある。
この NUL 文字は、lesskey ファイルで \e340 と表される。

.SH 著作権
Copyright (C) 2000  Mark Nudelman
.PP
lesskey is part of the GNU project and is free software;
you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by
the Free Software Foundation;
either version 2, or (at your option) any later version.
.PP
lesskey is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU General Public License for more details.
.PP
You should have received a copy of the GNU General Public License 
along with lesskey; see the file COPYING.
If not, write to the Free Software Foundation, 59 Temple Place,
Suite 330, Boston, MA  02111-1307, USA.

.SH 著者
.PP
Mark Nudelman <marknu@flash.net>
.br
バグの報告やコメントは、上のアドレスか bug-less@gnu.org へ送って下さい。

.SH パッチ
Copyright (c) 1994-2000  Kazushi (Jam) Marukawa, Japanized routines only
.br
Comments to: jam@pobox.com
.br
You may distribute under the terms of the Less License.
.PP
[参考訳]
.br
Copyright (c) 1994-2000  Kazushi (Jam) Marukawa, 日本語化ルーチンのみ。
.br
コメントは jam@pobox.com へ送って下さい。
.br
このパッチは Less ライセンスの下で配布できる。
