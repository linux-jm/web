.\" Copyright (C) 1998 David A. Hinds -- dahinds@users.sourceforge.net
.\" ftl_format.1 1.10 2000/06/12 21:24:48
.\"
.\" Japanese Version Copyright (c) 2000 NAKANO Takeo all rights reserved.
.\" Translated Sun May 14 2000 by NAKANO Takeo <nakano@apm.seikei.ac.jp>
.\" Updated Tue Oct 24 20:08:41 JST 2000
.\"	by Yuichi SATO <sato@complex.eng.hokudai.ac.jp>
.\"
.TH FTL_FORMAT 1 "2000/06/12 21:24:48" "pcmcia-cs"
.SH 名前
ftl_format \- Flash Translation Layer フォーマットユーティリティ
.SH 書式
.B ftl_format
.RB [ -q ]
.RB [ -i ]
.RB [ "\-s "\c
.IR spare ]
.RB [ "\-r "\c
.IR reserve ]
.RB [ "\-b "\c
.IR bootsize ]
.I device
.SH 説明
.B ftl_foramt
は Flash Translation Layer (FTL) パーティションを
フラッシュメモリデバイス上に作成する。
flash パーティションに対応する raw character モードデバイスファイル
.RI ( /dev/mem0c0c
など) にアクセスできる必要がある。
.PP
これは実際には低レベルのフォーマット動作であり、
FTL ブロックデバイスドライバによるメモリデバイスへのアクセスの前に必要となる。
まず
.B ftl_format
によってパーティションを用意し、
次のステップでファイルシステムを作成することになる。
ファイルシステムコマンドはデバイスに FTL デバイスファイル
.RI ( /dev/ftl0
など) 経由でアクセスする。
.PP
別の動作として、
.B ftl_format
はフラッシュカードのアドレス空間の先頭に、ブートイメージのための
(あるいはその他の目的のための) 領域を予約することもできる。
このブート領域は FTL パーティションの一部ではなく、
従って raw メモリデバイスを通してのみアクセスできる。
.PP
Intel Series 100 フラッシュカードでは、
先頭の flash ブロックはカードの CIS を保存するために用いられる。
コマンドラインから boot 領域を指定しないと、
.B ftl_format
は自動的に 1 ブロックを確保し、先頭ブロックを飛ばすようにする。
.SH オプション
.TP
.B \-q
沈黙モード: フォーマットの進行状態を表示しない。
.TP
.B \-i
対話モード: フォーマットの開始前に確認をとる。
.TP
.BI "\-s " spare
指定した個数の削除ブロックをスペアとして確保する。
デフォルトは 1。読み書きパーティションには、
少なくとも 1 つのスペアブロックが必要である。
.TP
.BI "\-r " reserve
指定したパーセンテージの領域をデバイス全体にたいして確保し、
書き込みを効率化する。デフォルトは 5%。この領域を少なくすると、
フリーなブロックを確保するために flash の消去操作が多くなる。
.TP
.BI "\-b " bootsize
フラッシュカードのある領域をブートイメージ用に予約する。
サイズは消去ブロックの整数倍に切り上げられる。
.SH 著者
David Hinds \- dahinds@users.sourceforge.net
.SH 関連項目
.BR ftl_cs (4),
.BR ftl_check (8)
