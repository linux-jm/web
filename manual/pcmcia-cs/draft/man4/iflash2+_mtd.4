.\" Copyright (C) 1998 David A. Hinds -- dhinds@pcmcia.sourceforge.org
.\" iflash2_mtd.4 1.6 1999/12/21 22:56:31
.\"
.\"O .TH IFLASH2_MTD 4 "1999/12/21 22:56:31" "pcmcia-cs"
.\"O .SH NAME
.\"O iflash2+_mtd \- memory technology driver for Intel Series 2+ flash
.\"O .SH SYNOPSIS
.\"O .B insmod iflash2+_mtd.o
.\"O .RB [ pc_debug=\c
.\"O .IR n ]
.\"O .RB [ mem_speed=\c
.\"O .IR n ]
.\"O .RB [ word_width=\c
.\"O .IR n ]
.\"O .RB [ vpp_timeout_period=\c
.\"O .IR n ]
.\"O .RB [ vpp_settle=\c
.\"O .IR n ]
.\"O .RB [ erase_timeout=\c
.\"O .IR n ]
.\"O .RB [ erase_limit=\c
.\"O .IR n ]
.\"O .RB [ retry_limit=\c
.\"O .IR n ]
.\"O .RB [ max_tries=\c
.\"O .IR n ]
.\"O .RB [ mem_speed=\c
.\"O .IR n ]
.\"O .RB [ word_width=\c
.\"O .IR n ]
.\"O .SH DESCRIPTION
.\"O .B Iflash2+_mtd
.\"O is a memory technology driver for Intel Series 2+ flash
.\"O devices.  Memory technology drivers are used by Card Services to
.\"O provide device-independent access for memory cards through bulk memory
.\"O services.  
.\"O .PP
.\"O In addition to backwards compatibility with Series 2 flash devices,
.\"O Series 2+ devices provide fast page-mode transfers, which allow
.\"O sequential flash writes to proceed in the background without active
.\"O monitoring.  While faster than Series 2 cards in actual write speeds,
.\"O this means that Series 2+ cards also do not tie up the 
.\"O host processor while writes are in progress.
.\"O .SH PARAMETERS
.\"O .TP
.\"O .BI pc_debug= n
.\"O Selects the PCMCIA debugging level.  This parameter is only available
.\"O if the module is compiled with debugging enabled.  A non-zero value
.\"O enables debugging.
.\"O .TP
.\"O .BI mem_speed= n
.\"O Sets the access speed of shared memory windows, in nanoseconds.  The
.\"O default is 0 (i.e., no extra wait states).  Values of up to 1000 are
.\"O legal.
.\"O .TP
.\"O .BI word_width= n
.\"O A flag indicating if memory windows should be configured for
.\"O 8-bit (if 0) or 16-bit (if 1) transfers.  The default is 1 (16-bit).
.\"O .TP
.\"O .BI vpp_timeout_period= n
.\"O In milliseconds, this specifies the maximum idle period after a write
.\"O operation before programming power will be switched off.  The default
.\"O is 1000 ms.
.\"O .TP
.\"O .BI vpp_settle= n
.\"O In milliseconds, this gives a delay between when programming power is
.\"O switched on, and when the device is assumed to be powered up and ready
.\"O to receive erase or write commands.  The default is 100 ms.
.\"O .TP
.\"O .BI write_timeout= n
.\"O In milliseconds, specifies the maximum elapsed time for a page write
.\"O (256 words) before it times out.  The default is 100 ms.
.\"O .TP
.\"O .BI erase_timeout= n
.\"O In milliseconds, specifies the poll interval for monitoring the status
.\"O of a bulk erase operation.  The default is 100 ms.
.\"O .TP
.\"O .BI erase_limit= n
.\"O In milliseconds, specifies the maximum elapsed time before an erase
.\"O operation is assumed to have failed.  The default is 10000 ms.
.\"O .TP
.\"O .BI retry_limit= n
.\"O The maximum number of retries for a write operation.  The default is
.\"O 4.
.\"O .TP
.\"O .BI max_tries= n
.\"O The maximum number of status register polls before various commands
.\"O are assumed to have timed out.  The default is 4096.
.\"O .SH AUTHOR
.\"O David Hinds \- dhinds@pcmcia.sourceforge.org
.\"O .SH "SEE ALSO"
.\"O iflash2+_mtd(4), memory_cs(4).
