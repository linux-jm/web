.\" Copyright (c) 2000 Benjamin C. Reed <breed@almaden.ibm.com>
.\" airo.c.4
.\"
.\"O .TH AIRO 4 "1/17/00" "IBM Almaden Research Center"
.\"O 
.\"O .SH NAME
.\"O airo \- Driver for the Aironet 802.11 ISA/PCI/PCMCIA 4500 & 4800 cards
.\"O 
.\"O .SH SYNOPSIS
.\"O .B insmod airo.o
.\"O .RB [ io=\c
.\"O .IR i,j,... ]
.\"O .RB [ irq=\c
.\"O .IR i,j,... ]
.\"O .RB [ basic_rate=\c
.\"O .IR n ]
.\"O .RB [ rates=\c
.\"O .IR i,j,... ]
.\"O .RB [ ssids=\c
.\"O .IR i,j,... ]
.\"O 
.\"O .SH DESCRIPTION
.\"O This driver is for Aironet 4500 and 4800 ISA/PCI/PCMCIA cards and 2.0
.\"O or 2.2 kernels.  Just for fun, I tested a 3500 for a total of 2
.\"O minutes and it seemed to work more or less.  (The configuration
.\"O information displayed in the Config file seemed a bit messed up.)
.\"O 
.\"O The card will create an ethX device for each wireless card.  An entry
.\"O for each device will be created under /proc/aironet/ethX with entries
.\"O to view the status of the card and configure it.
.\"O 
.\"O .SH /proc/aironet
.\"O In the /proc/aironet partition there will be a subdirectory for each
.\"O aironet interface. In that subdirectory are four files: Status,
.\"O Config, WepKey, and SSID.
.\"O 
.\"O .TP   
.\"O .BI Status
.\"O Most of the fields in the Status file are self describing.  The Mode:
.\"O field is a bitmask.  Here is the description from the programmer's
.\"O manual:
.\"O    
.\"O    Bit Meaning
.\"O    0x0001 Configured
.\"O    0x0002 MAC Enabled
.\"O    0x0004 Receive Enabled
.\"O    0x0010 In Sync
.\"O    0x0020 Associated
.\"O    0x8000 Error
.\"O    
.\"O I'm not sure what the units are in the Signal: field.
.\"O 
.\"O .TP   
.\"O .BI Config
.\"O The Config file is mode up of fields separated by newlines.  When
.\"O setting the fields, they can occur in any order.  If the values are
.\"O in error, a sane default will be used.  Note, there must be exactly
.\"O one space between the colon and the value.
.\"O 
.\"O .TP
.\"O .BI   Mode:
.\"O can be "adhoc" or "ESS".  Defaults to ESS.
.\"O 
.\"O .TP
.\"O .BI   NodeName:
.\"O Can be up to 16 characters in length
.\"O 
.\"O .TP
.\"O .BI   PowerMode:
.\"O Can be CAM (Constantly Awake Mode), PSP (Power Saving
.\"O something...), PSPCAM (you guess...).  CAM is default.
.\"O 
.\"O .TP
.\"O .BI   DataRates:
.\"O Must be separated by exactly 1 space.  The units are 500 kps.  So 2 is
.\"O 1 mbs.  There can be up to 8 rates specified.  The basic rate set by
.\"O setting the high bit (bit 7).
.\"O 
.\"O .TP
.\"O .BI   Channel:
.\"O Don't know anything about this except that you can set it...
.\"O 
.\"O .TP
.\"O .BI   XmitPower:
.\"O Transmit power in milliwatts.
.\"O 
.\"O .TP
.\"O .BI   WEP:
.\"O Can be open, encrypt, and shared, meaning no authentication, 
.\"O encrypted data only, shared key authentication and encryption.
.\"O Note that when WEP is enabled the current cards (as of 9/9/99)
.\"O do not allow data rates above 2 mbs.
.\"O 
.\"O .TP
.\"O .BI   Modulation:
.\"O Can be cck or mok.  Sets the modulation type for speeds above 2mbs.
.\"O 
.\"O .TP
.\"O .BI WepKey
.\"O This file allows the WepKey to be set.  I don't use Wep, so I can't
.\"O really test it. The key is set by writing the key as a string
.\"O to the file.  Each octet must be written in hexadecimal with
.\"O leading zeros and separated by colons.  For security reasons the key
.\"O cannot be read from the card.  Writing to this file sets both the
.\"O permanent and temporary key.  (Anyone have a need for being able
.\"O to write them separately?)  For example:
.\"O 
.\"O      echo 12:04:78:9a:bc > /proc/aironet/eth0/WepKey
.\"O    
.\"O .TP
.\"O .BI SSID
.\"O The SSID file has the list of usable SSIDs. If the list is empty, it
.\"O will associate with any access point that it can find. The SSIDs are
.\"O separated by line feeds. This file may also be written to to change
.\"O the list.
.\"O 
.\"O .TP
.\"O .BI Stats/StatsDelta
.\"O Basically a dump of all the statistics of the card.  The source has
.\"O provisions for all the statistics even though by default a lot of them
.\"O are turned off.  Stats give the statistics from the time the card was
.\"O powered up.  StatsDelta gives the statistics from the time the statistics
.\"O were last reset.  The statistics are reset by opening the StatsDelta file
.\"O for writing.
.\"O 
.\"
.\" PARAMETER part
.\"
.\"O .SH PARAMETERS
.\"O .TP
.\"O .BI io= i,j,...
.\"O Specifies the set of ioports used by the driver.  This is only used
.\"O for ISA cards.  The irq to be used will match the irq in the same
.\"O position in the irq list.  So basically ioport at index i will be used 
.\"O with the irq at index i.
.\"O .TP
.\"O .BI irq= i,j,...
.\"O Specifies the set of interrupts are used by the driver.
.\"O .TP
.\"O .BI rates= i,j,...
.\"O A comma separted list of rates.  There are up to 8 of them.  They are
.\"O specified in 512 kps units.
.\"O .TP
.\"O .BI basic_rate= n
.\"O Sets the basic rate of the card.  Same units as the rates.  (It must
.\"O be one of the rates.)
.\"O .TP
.\"O .BI ssids= i,j,k
.\"O A commat separated list of ssids.  There can be up to 3.  They are a
.\"O maximum of 32 characters.
.\"O 
.\"O .SH SPECIFIC NOTES
.\"O When used with PCMCIA cards, it must be used with the airo_cs module.
.\"O 
.\"O .SH AUTHOR
.\"O Benjamin C. Reed \- breed@almaden.ibm.com
.\"O 
.\"O .SH SEE ALSO
.\"O .BR airo_cs (4),
.\"O .BR cardmgr (8),
.\"O .BR pcmcia (5),
.\"O .BR insmod (1),
