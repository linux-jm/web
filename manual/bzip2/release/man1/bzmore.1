.\"Shamelessly copied from zmore.1 by Philippe Troin <phil@fifi.org>
.\"for Debian GNU/Linux
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Copyright (c) 2003, 2022
.\" Yuichi SATO and Akihiro Motoki
.\"         all rights reserved.
.\" Translated 2003-05-01, Yuichi SATO <ysato444@yahoo.co.jp>
.\" Translated for 1.0.8, 2021-11-24
.\" Updated, 2022-04-28, Akihiro Motoki <amotoki@gmail.com>
.\" Updated, 2022-05-05, ribbon <ribbon@users.osdn.me>
.\"
.TH BZMORE 1   
.SH 名前
bzmore, bzless \- bzip2 圧縮されたテキストを CRT で見るためのファイル閲覧フィルタ
.SH 書式
\fBbzmore\fP [ name ...  ]
.br
\fBbzless\fP [ name ...  ]
.SH 注意
以下の説明において、 \fIbzless\fP と \fIless\fP は、 \fIbzmore\fP と \fImore\fP と等価で、
そのまま読み替えることができます。
.SH 説明
\fIbzmore\fP は、圧縮されたテキストファイルや通常のテキストファイルを ソフトコピー端末上で一度に全画面で閲覧するためのフィルタです。
\fIbzmore\fP は \fIbzip2\fP で圧縮されたファイルに対して動作します (圧縮されていないファイルに対しても動作します)。
ファイルが存在しない場合、 \fIbzmore\fP は、そのファイル名に拡張子 .bz2 をつけた名前のファイルを探します。
.PP
\fIbzmore\fP は通常、1 画面毎に画面の一番下に \-\-続ける\-\- と表示して一時停止します。 キャリッジリターンを打つと、1 行分表示を進めます。
スペースを打つと、1 画面分表示を進めます。 他のキーについては、後に列挙します。
.PP
\fIbzmore\fP は端末の特性とデフォルトのウインドウサイズを決定するために、 ファイル \fI/etc/termcap\fP を調べます。 24
行表示できる端末では、デフォルトのウインドウサイズは 22 行です。 \fIbzmore\fP が一時停止しているときに打つことのできる、
その他のシーケンスとその結果は次の通りです (\fIi\fP はオプションの引数 (整数値) で、デフォルトは 1 です)。
.PP
.IP \fIi\|\fP<space>
\fIi\fP 行分表示を進めます (引数が与えられない場合、1 画面分進めます)。
.PP
.IP ^D
11 行進めて表示します (\*(lqスクロール\*(rq)。 \fIi\fP が与えられると、スクロールサイズが \fIi\|\fP に設定されます。
.PP
.IP d
^D (control\-D) と同じ。
.PP
.IP \fIi\|\fPz
\fIi\|\fP が与えられた場合に新しいウインドウサイズになります、という以外は スペースを打った場合と同じです。
現在のファイルの終わりでは、ウインドウサイズがデフォルトの値に戻ることに注意してください。
.PP
.IP \fIi\|\fPs
\fIi\|\fP 行分スキップし、画面いっぱいに表示します。
.PP
.IP \fIi\|\fPf
\fIi\|\fP 画面分スキップし、画面いっぱいに表示します。
.PP
.IP "q または Q"
現在のファイルの読み込みを終了し、(もしあるなら) 次のファイルに移ります。
.PP
.IP "e または q"
プロンプト \-\-続ける\-\-(次のファイル: \fIfile\fP)  が表示されているとき、このコマンドは bzmore を終了させます。
.PP
.IP s
プロンプト \-\-続ける\-\-(次のファイル: \fIfile\fP)  が表示されているとき、このコマンドは bzmore を次のファイルに
スキップさせ続行させます。
.PP
.IP =
現在の行番号を表示します。
.PP
.IP \fIi\|\fP/expr
正規表現 \fIexpr\fP の \fIi\|\fP 番目の場所を検索します。 パターンが見つからない場合、 \fIbzmore\fP は (もしあるなら)
次のファイルに移ります。 見つかった場合は、正規表現が見つかった場所の 2 行前から始まる 1 画面分を表示します。
削除文字やキル文字を正規表現を編集するために使用してもよいでしょう。 最初の桁を越えて削除すると、検索コマンドはキャンセルされます。
.PP
.IP \fIi\|\fPn
前に打ち込んだ正規表現の \fIi\|\fP 番目の場所を検索します。
.PP
.IP !command
\fIcommand\|\fP でシェルを起動します。 "command" 内の `!' という文字は、前のシェルコマンドで置き換えられます。 "\e!"
という文字列は "!" で置き換えられます。
.PP
.IP ":q または :Q"
現在のファイルの読み込みを終了し、(もしあるなら) 次のファイルに移ります。 (q または Q と同じ)。
.PP
.IP .
(ドット) 前のコマンドを繰り返します。
.PP
コマンドはすぐに影響を及ぼします。 つまりキャリッジリターンを打つ必要はありまｓん。 ユーザーはコマンド文字そのものを打つ前に、
数値の引数の入力をキャンセルするために、 キル文字を打ち込むことができます。 さらに、ユーザーは \-\-続ける\-\- というメッセージを
もう一度表示させるために、削除文字を打ち込むことができます。
.PP
出力が端末に送られるどの時点でも、ユーザーは終了キー (通常は control\-\e) を 打ち込むことができます。 \fIbzmore\fP
は出力を送るのを止めて、通常の \-\-続ける\-\- プロンプトを表示します。 その後、ユーザーは上のコマンドを普通の方法で打ち込むことができます。
終了キーを打った場合に、運悪く出力が失われることがあります。 それは、終了シグナルが起きたときに、端末の出力キューで待っていた
すべての文字がフラッシュされてしまったためです。
.PP
このプログラムは出力を連続的なものにするために、端末を \fInoecho\fP モードにします。/ と !
コマンドを除いて、打ち込まれた文字は端末上に見えません。
.PP
標準出力がテレタイプでない場合、 \fIbzmore\fP は \fIbzcat\fP のように動作します。 ただし、ヘッダが各ファイルの前に表示されます。
.SH ファイル
.DT
/etc/termcap		端末データベース
.SH 関連項目
more(1), less(1), bzip2(1), bzdiff(1), bzgrep(1)
