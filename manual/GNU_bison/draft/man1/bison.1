.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.48.4.
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" To be translated for 3.8.2, 2022-03-11
.\"
.TH BISON 1 2021/09 "GNU Bison 3.8.2" ユーザーコマンド
.SH 名前
bison \- GNU プロジェクトのパーサージェネレーター (yacc 互換)
.SH 書式
\fBbison\fP [\fI\,OPTION\/\fP]... \fI\,FILE\/\fP
.SH 説明
\fIBison\fP は \fIyacc\fP(1) 風のパーサージェネレーターです。 \fIyacc\fP 用に生成された入力ファイルと、 上位互換性を有しています。
.PP
入力ファイル名は \fIyacc\fP の慣例に従って \fB.y\fP で終わるものとします。 \fIyacc\fP とは違って、
生成されるファイルの名前は固定されず、 入力ファイル名を先頭につけたものとなります。 さらに入力ファイル内に \fIC++\fP
コードを加える必要がある場合、 そのファイル名には C++ 流の拡張子 (.ypp や .y++) をつけます。 こうしておくと bison は、
その拡張子に従って出力ファイル名を定めます (.cpp や .c++)。 たとえば文法を記述するファイルが \fBparse.yxx\fP であるとすると、
生成されるパーサー用のファイルは \fBparse.tab.cxx\fP となります。 これが \fIyacc\fP であれば \fBy.tab.c\fP であり、
古いバージョンの \fIBison\fP では \fBparse.tab.c\fP となります。
.PP
\fIbison\fP に対して与えられるここでのオプション説明は、 \fBbison.texi\fP マニュアルにおけるノード \fBInvocation\fP
から抜粋されたものであり、 そのマニュアルが正となります。
.PP
\fIBison\fP は従来からの単一英字によるオプションと、 長い名前のオプションの両方をサポートします。 長いオプション名は \fB\-\fP ではなく
\fB\-\-\fP をつけます。 オプション名は、 それが唯一のものと特定できるのであれば、 短く省略して指定することができます。
\fB\-\-file\-prefix\fP などのように長いオプションが引数を取る場合、 オプション名と引数値の間には \fB=\fP を記述します。
.PP
LALR(1), IELR(1), あるいは正規 LR(1) パーサーテーブルを用いて、 決定的 LR (deterministic LR) パーサー、
または一般化 LR (generated LR; GLR) パーサーを生成します。
.PP
長いオプションに必須の引数は短いオプションにも必須です.  オプションの引数についても同様です。
.SS 操作モード
.TP 
\fB\-h\fP, \fB\-\-help\fP
ヘルプを表示して終了します。
.TP 
\fB\-V\fP, \fB\-\-version\fP
バージョン情報を表示して終了します。
.TP 
\fB\-\-print\-localedir\fP
ローケル依存データがあるディレクトリを表示して終了します。
.TP 
\fB\-\-print\-datadir\fP
スケルトンと XSLT があるディレクトリを表示して終了します。
.TP 
\fB\-u\fP, \fB\-\-update\fP
ソース文法ファイルに修正を適用して終了します。
.TP 
\fB\-f\fP, \fB\-\-feature\fP[=\fI\,FEATURES\/\fP]
さまざまな機能を有効にします。
.SS "FEATURES は、 以下の単語をカンマ (,) で区切ったリストです。"
.TP 
caret, diagnostics\-show\-caret
^ をつけてエラーを表示します。
.TP 
fixit, diagnostics\-parseable\-fixits
マシン読み込み用の修正を表示します。
.TP 
syntax\-only
ファイル生成を行いません。
.TP 
all
上記すべてを有効にします。
.TP 
none
上記すべてを無効にします。
.SS 診断
.TP 
\fB\-W\fP, \fB\-\-warnings\fP[=\fI\,CATEGORY\/\fP]
CATEGORY に属する警告を表示します。
.TP 
\fB\-\-color\fP[=\fI\,WHEN\/\fP]
診断結果への色のつけ方を指示します。
.TP 
\fB\-\-style\fP=\fI\,FILE\/\fP
診断結果に色をつける CSS ファイル FILE を指定します。
.SS 警告カテゴリには以下があります。
.TP 
conflicts\-sr
S/R 競合 (デフォルトで有効)。
.TP 
conflicts\-rr
R/R 競合 (デフォルトで有効)。
.TP 
counterexamples, cex
競合の反例を生成します。
.TP 
dangling\-alias
文字列エイリアスとシンボルが対応していません。
.TP 
deprecated
かつての構造。
.TP 
empty\-rule
%empty がない空の規則。
.TP 
midrule\-values
midrule 値が設定されていない、 または使われていません。
.TP 
precedence
意味のない precedence と associativity。
.TP 
yacc
POSIX Yacc と非互換。
.TP 
other
その他の警告すべて (デフォルトで有効)。
.TP 
all
\&'counterexamples' と 'dangling\-alias' と 'yacc' 以外の警告すべて。
.TP 
no\-CATEGORY
CATEGORY の警告をオフにします。
.TP 
none
すべての警告をオフにします。
.TP 
error[=CATEGORY]
警告をエラー扱いにします。
.SS "WHEN は、 以下のいずれかです。"
.TP 
always, yes
出力に色をつけます。
.TP 
never, no
出力に色をつけません。
.TP 
auto, tty
出力デバイスが tty の時だけ色をつけます。
.SS パーサーの調整
.TP 
\fB\-L\fP, \fB\-\-language\fP=\fI\,LANGUAGE\/\fP
出力するプログラミング言語を指定します。
.TP 
\fB\-S\fP, \fB\-\-skeleton\fP=\fI\,FILE\/\fP
利用するスケルトンを指定します。
.TP 
\fB\-t\fP, \fB\-\-debug\fP
パーサーをトレースモードにします。 '\-Dparse.trace' と同じです。
.TP 
\fB\-\-locations\fP
計算結果位置サポートを有効にします。
.TP 
\fB\-D\fP, \fB\-\-define=NAME\fP[=\fI\,VALUE\/\fP]
\&'%define NAME VALUE' と同様です。
.TP 
\fB\-F\fP, \fB\-\-force\-define=NAME\fP[=\fI\,VALUE\/\fP]
\&'%define NAME VALUE' を上書きします。
.TP 
\fB\-p\fP, \fB\-\-name\-prefix\fP=\fI\,PREFIX\/\fP
\&'\-Dapi.prefix={PREFIX}' によって古くなった外部シンボルに PREFIX をつけます。
.TP 
\fB\-l\fP, \fB\-\-no\-lines\fP
\&'#line' ディレクティブを生成しません。
.TP 
\fB\-k\fP, \fB\-\-token\-table\fP
トークン名のテーブルを含めます。
.TP 
\fB\-y\fP, \fB\-\-yacc\fP
POSIX の Yacc をエミュレートします。
.SS 出力ファイル
.TP 
\fB\-H\fP, \fB\-\-header\fP=\fI\,[FILE]\/\fP
ヘッダーファイルも生成します。
.TP 
\fB\-d\fP
同様ですが FILE の指定はできません (POSIX Yacc の場合)。
.TP 
\fB\-r\fP, \fB\-\-report\fP=\fI\,THINGS\/\fP
オートマトン上に詳細の生成も行います。
.TP 
\fB\-\-report\-file\fP=\fI\,FILE\/\fP
レポートを FILE に書き出します。
.TP 
\fB\-v\fP, \fB\-\-verbose\fP
\&'\-\-report=state' と同様です。
.TP 
\fB\-b\fP, \fB\-\-file\-prefix\fP=\fI\,PREFIX\/\fP
出力ファイルのプレフィックスを指定します。
.TP 
\fB\-o\fP, \fB\-\-output\fP=\fI\,FILE\/\fP
出力結果を FILE に保存します。
.TP 
\fB\-g\fP, \fB\-\-graph\fP[=\fI\,FILE\/\fP]
オートマトングラフも出力します。
.TP 
\fB\-\-html\fP[=\fI\,FILE\/\fP]
オートマトンの HTML 報告も出力します。
.TP 
\fB\-x\fP, \fB\-\-xml\fP[=\fI\,FILE\/\fP]
オートマトンの XML 報告も出力します。
.TP 
\fB\-M\fP, \fB\-\-file\-prefix\-map\fP=\fI\,OLD=NEW\/\fP ファイルパスの出力の際に、 出力ファイルのプリフィックス OLD を 
NEW に置き換えます。
.SS "THINGS は、 以下の単語をカンマ (,) で区切ったリストです。"
.TP 
states
状態を説明します。
.TP 
itemsets
クロージャーを呼び出してコアアイテムセットを完成させます。
.TP 
lookaheads
lookahead トークンを明示的にアイテムに結合します。
.TP 
solved
解決しているシフト/還元について説明します。
.TP 
counterexamples, cex
競合の反例を生成します。
.TP 
all
上記の情報をすべて含みます。
.TP 
none
報告を無効にします。
.SH 著者
Robert Corbett と Richard Stallman によって書かれました
.SH バグ報告
バグを発見したら <bug\-bison@gnu.org> まで報告して下さい。
.br
GNU Bison ホームページ: <https://www.gnu.org/software/bison/>.
.br
GNU ソフトウェアの全般的なヘルプ: <https://www.gnu.org/gethelp/>.
.br
完全なドキュメントを見るには info bison を実行してください。
.SH 著作権
Copyright \(co 2021 Free Software Foundation, Inc.
.br
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
.SH 関連項目
\fBlex\fP(1), \fBflex\fP(1), \fByacc\fP(1).
.PP
\fBbison\fP の完全なドキュメントは Texinfo マニュアルとしてメンテナンスされています。 \fBinfo\fP と \fBbison\fP
の両プログラムが適切にインストールされていれば、 以下のコマンド
.IP
\fBinfo bison\fP
.PP
を実行して完全なマニュアルを参照できます。
