.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.3.
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" translated for 2.6.4, 2022-05-05 ribbon <ribbon@users.osdn.me>
.\"
.TH FLEX 1 2017/05 "Flex プロジェクト" プログラミング
.SH 名前
flex \- 高速な字句解析ジェネレーター
.SH 書式
\fBflex\fP [\fI\,OPTIONS\/\fP] [\fI\,FILE\/\fP]...
.SH 説明
対象テキストのパターンマッチングを実現するプログラムを生成します。
.SS テーブル圧縮：
.TP 
\fB\-Ca\fP, \fB\-\-align\fP
より大きなテーブルをあきらめて、メモリ配置を優先します。
.TP 
\fB\-Ce\fP, \fB\-\-ecs\fP
同等クラス (equivalence class) を構築します。
.TP 
\fB\-Cf\fP
テーブルを圧縮しません。\fB\-f\fP を利用してください。
.TP 
\fB\-CF\fP
テーブルを圧縮しません。\fB\-F\fP を利用してください。
.TP 
\fB\-Cm\fP, \fB\-\-meta\-ecs\fP
メタ同等クラス (meta\-equivalence class) を構築します。
.TP 
\fB\-Cr\fP, \fB\-\-read\fP
スキャナーの入力として stdio ではなく read() を用います。
.TP 
\fB\-f\fP, \fB\-\-full\fP
高速で大きなスキャナーを生成します。\fB\-Cfr\fP と同じです。
.TP 
\fB\-F\fP, \fB\-\-fast\fP
代替テーブル表現 (alternate table representation) を用います。\fB\-CFr\fP と同じです。
.TP 
\fB\-Cem\fP
デフォルトの圧縮を用います (\fB\-\-ecs\fP \fB\-\-meta\-ecs\fP と同じです)。
.SS デバッグ
.TP 
\fB\-d\fP, \fB\-\-debug\fP
スキャナーにおいてデバッグモードを有効にします。
.TP 
\fB\-b\fP, \fB\-\-backup\fP
バックアップ情報を lex.backup に出力します。
.TP 
\fB\-p\fP, \fB\-\-perf\-report\fP
性能報告を stderr に出力します。
.TP 
\fB\-s\fP, \fB\-\-nodefault\fP
マッチしなかったテキストを ECHO するデフォルトルールを省略します。
.TP 
\fB\-T\fP, \fB\-\-trace\fP
flex をトレースモードで実行します。
.TP 
\fB\-w\fP, \fB\-\-nowarn\fP
警告メッセージを生成しません。
.TP 
\fB\-v\fP, \fB\-\-verbose\fP
スキャナーの処理統計に関する概要を stdout に出力します。
.TP 
\fB\-\-hex\fP
デバッグ出力において 8 進数ではなく 16 進数を用います。
.SH ファイル
.TP 
\fB\-o\fP, \fB\-\-outfile\fP=\fI\,FILE\/\fP
出力ファイル名を指定します。
.TP 
\fB\-S\fP, \fB\-\-skel\fP=\fI\,FILE\/\fP
スケルトンファイルを指定します。
.TP 
\fB\-t\fP, \fB\-\-stdout\fP
スキャナーを lex.yy.c ではなく stdout に出力します。
.TP 
\fB\-\-yyclass\fP=\fI\,NAME\/\fP
C++ クラス名。
.TP 
\fB\-\-header\-file\fP=\fI\,FILE\/\fP
スキャナーに加えて C ヘッダーファイルを生成します。
.HP
\fB\-\-tables\-file\fP[=\fI\,FILE\/\fP] テーブルを FILE に出力します。
.SS スキャナーの動作
.TP 
\fB\-7\fP, \fB\-\-7bit\fP
7 ビットスキャナーを生成します。
.TP 
\fB\-8\fP, \fB\-\-8bit\fP
8 ビットスキャナーを生成します。
.TP 
\fB\-B\fP, \fB\-\-batch\fP
バッチスキャナー (batch scanner) を生成します (逆は \fB\-I\fP)。
.TP 
\fB\-i\fP, \fB\-\-case\-insensitive\fP
パターンにおいて大文字小文字を区別しません。
.TP 
\fB\-l\fP, \fB\-\-lex\-compat\fP
オリジナルの lex と最大限の互換性を保ちます。
.TP 
\fB\-X\fP, \fB\-\-posix\-compat\fP
POSIX lex と最大限の互換性を保ちます。
.TP 
\fB\-I\fP, \fB\-\-interactive\fP
対話型スキャナー (interactive scanner) を生成します (逆は \fB\-B\fP)。
.TP 
\fB\-\-yylineno\fP
行数カウントを yylinenoe により行います。
.SS 生成コード
.TP 
\-+,  \fB\-\-c\fP++
C++ スキャナークラスを生成します。
.TP 
\fB\-Dmacro\fP[=\fI\,defn\/\fP]
#define マクロを defn とします (デフォルトの defn は '1' です)。
.TP 
\fB\-L\fP,  \fB\-\-noline\fP
スキャナーにおける #line ディレクティブを省略します。
.TP 
\fB\-P\fP,  \fB\-\-prefix\fP=\fI\,STRING\/\fP
プレフィックスに "yy" ではなく STRING を用います。
.TP 
\fB\-R\fP,  \fB\-\-reentrant\fP
リエントラントな (reentrant) C スキャナーを生成します。
.TP 
\fB\-\-bison\-bridge\fP
スキャナーを bison 向けの純粋なパーサーとします。
.TP 
\fB\-\-bison\-locations\fP
yylloc サポートを含めます。
.TP 
\fB\-\-stdinit\fP
yyin/yyout を stdin/stdout に初期化します。
.TP 
\fB\-\-nounistd\fP
<unistd.h> をインクルードしません。
.TP 
\fB\-\-noFUNCTION\fP
特定の FUNCTION を生成しません。
.SS その他
.TP 
\fB\-c\fP
POSIX オプションを処理しません。
.TP 
\fB\-n\fP
POSIX オプションを処理しません。
.HP
\-?
.TP 
\fB\-h\fP, \fB\-\-help\fP
ヘルプメッセージを表示します。
.TP 
\fB\-V\fP, \fB\-\-version\fP
flex のバージョンを表示します。
.SH 関連項目
\fBflex\fP の完全なドキュメントは Texinfo マニュアルとしてメンテナンスされています。\fBinfo\fP と \fBflex\fP
の両プログラムが適切にインストールされていれば、以下のコマンド
.IP
\fBinfo flex\fP
.PP
を実行して完全なマニュアルを参照できます。
