.\" cfdisk.8 -- man page for cfdisk
.\" Copyright 1994 Kevin E. Martin (martin@cs.unc.edu)
.\" Copyright (C) 2014 Karel Zak <kzak@redhat.com>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Copyright (c) 2001-2020 Yuichi SATO
.\"     and 2020 Yoichi Chonan,
.\"         all rights reserved.
.\" Translated Mon Feb 26 19:13:14 JST 2001
.\"         by Yuichi SATO <sato@complex.eng.hokudai.ac.jp>
.\" Updated & Modified (util-linux 2.35.2) Sun Jul 12 12:41:36 JST 2020
.\"         by Yuichi SATO <ysato444@ybb.ne.jp>
.\"         and Yoichi Chonan <cyoichi@maple.ocn.ne.jp>
.\"
.TH CFDISK 8 "March 2014" util\-linux "System Administration"
.SH 名前
cfdisk \- ディスクパーティションテーブルの表示や操作を行う
.SH 書式
\fBcfdisk\fP [options] [\fIdevice\fP]
.SH 説明
\fBcfdisk\fP は、ブロックデバイスのパーティション操作を行う、curses
ベースのプログラムである。デフォルトのデバイスは \fI/dev/sda\fP である。

まず御承知いただきたいのは、\fBcfdisk\fP
は、パーティション操作の基本的な機能をわかりやすいインターフェースで提供するものだということだ。
より高度な機能が必要なら、代わりに \fBfdisk\fP(8) を使用するとよい。

\fBcfdisk\fP は、バージョン 2.25 以来、MBR (DOS), GPT, SUN, SGI
のディスクラベルをサポートしているが、CHS (シリンダ/ヘッド/セクタ)
によるアドレシングの機能はもはや提供していない。CHS が Linux
にとって重要だったことは一度もなかったし、
このアドレシング方法は、最近のデバイスでは全く無意味なのである。
.IP "[\fB訳注\fP]" 8
util-linux の fdisk
グループのマニュアルでは、「パーティションテーブル」と「ディスクラベル」の両方を、
ほぼ同じ意味で、混ぜて使っている。強いて言えば、Linux や DOS
(GPT や MBR) については「パーティションテーブル」を使い、他の OS
の場合も含めて、より一般的に言うときは「ディスクラベル」を使うようにしているらしいが、
必ずしもそうとは言えないところもある。
.PP
\fBcfdisk\fP は、バージョン 2.25 以来、'print' コマンドももう提供していない。
その機能は、\fBpartx\fP(8) や \fBlsblk\fP(8)
といったユーティリティによって、ごく使いやすく、機能的にも豊富な形で提供されている。

デバイスから古いパーティションテーブルを消去したい場合は、\fBwipefs\fP(8)
を使用するとよい。

.SH オプション
.TP 
\fB\-h\fP,\fB \-\-help\fP
ヘルプテキストを表示して終了する。
.TP 
\fB\-L\fP,\fB \-\-color\fP[\fB=\fP\fIwhen\fP]
出力をカラー表示にする。指定が任意の引き数 \fIwhen\fP には \fBauto\fP,
\fBnever\fP, \fBalways\fP が使える。引き数 \fIwhen\fP
を省略すると、デフォルトの \fBauto\fP になる。カラー表示は無効にすることもできる。
プログラムに埋め込まれた現在のデフォルトが有効か無効かを知りたければ、\fB\-\-help\fP
の出力を見ればよい。「\fBカラー表示\fP」セクションも参照していただきたい。
.TP 
\fB\-V\fP,\fB \-\-version\fP
バージョン情報を表示して終了する。
.TP 
\fB\-z\fP,\fB \-\-zero\fP
メモリ中の 0 で初期化されたパーティションテーブルに対して作業を開始する。
このオプションは、ディスク上のパーティションテーブルを 0 で初期化するわけではない。
そうではなくて、既存のパーティションテーブルを読み込まずに、プログラムを起動するだけである。
このオプションを使用すれば、白紙の状態から新しいパーティションテーブルを作成できるし、
sfdisk 互換のスクリプトを使って新しいパーティションテーブルを作ることもできる。

.SH コマンド
\fBcfdisk\fP のコマンドは、対応するキーを押すことで入力することができる
(コマンドのキーに続けて、\fIEnter\fP を押す必要はない)。
使用できるコマンドのリストを挙げておく。
.TP 
\fBb\fP
選択しているパーティションのブート可能フラグの有効/無効を切り換える。
このコマンドを使えば、ディスクドライブ上のどの基本パーティション
(primary partition) をブート可能にするかを選択できる。
このコマンドは、パーティションのラベルのタイプによっては、使えないかもしれない。
.RS
.IP "[\fB訳注\fP]" 8
パーティションのラベルのタイプ (partition label types)
とは何だろうか。label は衍字であり、"partition types"
と言いたかったのかもしれない。そうだとすれば、(DOS パーティションテーブル流に言えば)
Linux とか Linux swap とか NTFS とか W95 FAT32 (LBA) とか FreeBSD
とかいうことになる。あるいは、partition は disk
の間違いとも考えられる。"disk label type" ならば、GTP, DOS, BSD, SGI
といったものになる。
.RE
.TP 
\fBd\fP
選択しているパーティションを削除する。
このコマンドは、選択しているパーティションを空き領域に変更し、
そのパーティションのすぐ前後に空き領域があれば、それとひとつに結合する。
パーティションにすでに空き領域、あるいは使用不可の指標が付いている場合は、削除できない。
.TP 
\fBh\fP
ヘルプ画面を表示する。
.TP 
\fBn\fP
空き領域から新しいパーティションを作成する。\fBcfdisk\fP
はその際、作成したいパーティションのサイズを問い合わせてくる。
デフォルトのサイズは、現在位置から利用できる空き領域のすべてである。

サイズの後ろには、KiB (=1024), MiB (=1024*1024)
のような乗数を表す接尾辞を付けることができる。GiB, TiB, PiB, EiB, ZiB, YiB
も同様に使える ("iB" を続けるのは任意であり、たとえば、"K" は "KiB"
と同じ意味である)。
.TP 
\fBq\fP
プログラムを中止する。このコマンドは、
ディスクにデータを全く書き込むことなく、プログラムを終了させる。
.TP 
\fBs\fP
パーティションをその開始セクタが昇順になるようにソートする。
パーティションの削除と追加を行っていると、
パーティションの番号が、ディスク上の順番と一致しなくなるということが起きがちである。
このコマンドは、その一致を修復する。
.TP 
\fBt\fP
パーティションのタイプを変更する。デフォルトでは、新規パーティションは \fILinux\fP
パーティション (Linux filesystem) として作成される。
.TP 
\fBu\fP
現在メモリ中にあるパーティションテーブルを
sfdisk 互換のスクリプトファイルにダンプする。
.sp
このスクリプトファイルは、\fBcfdisk\fP, \fBfdisk\fP, \fBsfdisk\fP などの libfdisk
アプリケーション間で互換である。詳細については、\fBsfdisk\fP(8) を参照していただきたい。
.sp
デバイス上にパーティションテーブルが存在しない場合や、\fBcfdisk\fP にコマンドラインオプション
\fB\-\-zero\fP を付けて起動した場合には、sfdisk のスクリプトを
\fBcfdisk\fP にロードすることも可能である。
.TP 
\fBW\fP
パーティションテーブルをディスクに書き込む (大文字の W を入力しなければならない)。
このコマンドは、ディスク上のデータを破壊することになるかもしれないので、
書き込みを承認するか、否認するかを、'yes' または 'no'
と打ち込んで明らかにしなければならない。'yes' と打ち込んだ場合は、\fBcfdisk\fP
はパーティションテーブルをディスクに書き込んでから、
カーネルに対してディスクからパーティションテーブルを再読み込みするように指示を出す。

パーティションテーブルの再読み込みは常に成功するとはかぎらない。
うまく行かなかった場合には、\fBpartprobe\fP(8) や \fBpartx\fP(8)
を使うなり、システムをリブートするなりして、
新しいパーティション情報をカーネルに教えてやる必要がある。
.TP 
\fBx\fP
パーティションについて追加情報の表示/不表示を切り換える。
.TP 
\fI上矢印キー\fP, \fI下矢印キー\fP
カーソルを前の、または次のパーティションに移動する。
ひとつの画面に表示し切れないほどのパーティションがあるときは、画面に表示されている最後の
(最初の) パーティションの位置で、カーソルを下に (上に)
動かせば、パーティションの次の (前の) 一団を表示することができる。
.TP 
\fI左矢印キー\fP, \fI右矢印キー\fP
前の、または次のメニュー項目を選択する。\fIEnter\fP
を押すと、現在選択している項目が実行されることになる。

.PP
すべてのコマンドの入力は、(ディスクに書き込む \fBW\fP を除いて)
大文字でも、小文字でももよい。
サブメニューにいるときや、プロンプトが出ているときは、\fIEsc\fP
キーを押せば、メインメニューに戻ることができる。

.SH カラー表示
自動的なカラー表示は、\fI/etc/terminal\-colors.d/cfdisk.disable\fP
という空ファイルを作ることで無効にできる。

カラー表示の設定についてもっと詳しいことを知りたかったら、\fBterminal\-colors.d\fP(5)
をご覧になるとよい。

\fBcfdisk\fP は、カラースキームファイルによるカラー表示のカスタマイズに対応していない。

.SH 環境変数
.IP CFDISK_DEBUG=all
cfdisk のデバッグ出力を有効にする。
.IP LIBFDISK_DEBUG=all
libfdisk のデバッグ出力を有効にする。
.IP LIBBLKID_DEBUG=all
libblkid のデバッグ出力を有効にする。
.IP LIBSMARTCOLS_DEBUG=all
libsmartcols のデバッグ出力を有効にする。
.IP LIBSMARTCOLS_DEBUG_PADDING=on
目に見える埋め文字 (padding characters) を使用する。LIBSMARTCOLS_DEBUG
を有効にしておく必要がある。

.SH 関連項目
\fBfdisk\fP(8), \fBparted\fP(8), \fBpartprobe\fP(8), \fBpartx\fP(8), \fBsfdisk\fP(8)
.SH 作者
Karel Zak <kzak@redhat.com>
.PP
現在の cfdisk の実装は、Kevin E. Martin (martin@cs.unc.edu)
による最初の cfdisk を元にしている。

.SH 入手方法
この cfdisk コマンドは、util\-linux パッケージの一部であり、以下の URL
から入手できる。https://www.kernel.org/pub/linux/utils/util\-linux/
