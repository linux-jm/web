--- fdisk.8.orig	2020-07-18 08:23:03.895703755 +0900
+++ fdisk.8	2020-07-18 08:25:59.351709531 +0900
@@ -8,6 +8,20 @@
 .\" This file was generated with po4a. Translate the source file.
 .\"
 .\"*******************************************************************
+.\" Japanese Version Copyright (c) 1997-1998 NAKANO Takeo
+.\"   and 2004 Yuichi Sato,
+.\"   and 2020 Chonan Yoichi,
+.\"         all rights reserved.
+.\" Translated Thu Sep 11 1997 by NAKANO Takeo <nakano@apm.seikei.ac.jp>
+.\" Updated & Modified Fri 3 Jul 1998 by NAKANO Takeo
+.\" Updated & Modified Thu 7 Oct 1999 by NAKANO Takeo 
+.\" Updated & Modified Sat 18 Mar 2000 by NAKANO Takeo 
+.\" Updated & Modified Sun 14 May 2000 by NAKANO Takeo 
+.\" Updated & Modified Tue May  4 23:47:43 JST 2004
+.\"         by Yuichi SATO <ysato444@yahoo.co.jp>
+.\" Updated & Modified (util-linux 2.35.2) Sat Jul 18 08:24:05 JST 2020
+.\"         by Chonan Yoichi <cyoichi@maple.ocn.ne.jp>
+.\"
 .TH FDISK 8 "February 2016" util\-linux "System Administration"
 
 .SH 名前
@@ -27,7 +41,13 @@
 1 個以上の論理ディスクに分割することができる。この分割に関する情報は、通常ディスクのセクタ
 0 に存在する\fIパーティションテーブル\fPに記録される。(BSD の世界では、
 「ディスクスライス」とか「ディスクラベル」という言い方をする。)
-
+.IP "[\fB訳注\fP]" 8
+このマニュアルでは、「パーティションテーブル」と「ディスクラベル」の両方を、
+ほぼ同じ意味で、混ぜて使っている。強いて言えば、Linux や DOS
+(GPT や MBR) については「パーティションテーブル」を使い、他の OS
+の場合も含めて、より一般的に言うときは「ディスクラベル」を使うようにしているらしいが、
+必ずしもそうとは言えないところもある。
+.PP
 すべてのパーティション分割は、デフォルトではデバイスの I/O リミット
 (I/O トポロジーとも言う) に基づいて行われる。そのため \fBfdisk\fP
 は、4K\-sector のサイズにふさわしくディスクレイアウトを最適化したり、MBR や GPT
@@ -36,7 +56,14 @@
 \fBfdisk\fP の提示するデフォルトを使うのは、いつだって賢明なことである。
 また、パーティションのサイズを +/\-<size>{M,G,...}
 の表記で指定すれば、必ずデバイスのプロパティに合わせて大きさが調整されることになる。
-
+.IP "[\fB訳注\fP]" 8
+util-linux 所収の \fBblkid\fP(8) の man によれば、\fBblkid \-i\fP
+\fIdevice\fP で「I/O Limits (aka I/O topology)
+の情報を表示する」ことになっている。そこで、それを実行すると、MINIMUM_IO_SIZE,
+PHYSICAL_SECTOR_SIZE, LOGICAL_SECTOR_SIZE が表示された。I/O
+リミットとは、そうしたもののことなのだろう。特に、PHYSICAL_SECTOR_SIZE
+が重要なようだ。「I/O 境界」「I/O 制約」と訳せるかもしれない。
+.PP
 CHS (Cylinder\-Head\-Sector)
 アドレシングは非推奨であり、デフォルトでは使用されない。だから、SSD や 4K\-sector
 のデバイスを使うときは、"fdisk \-S <n> \-H <n>"
@@ -172,7 +199,11 @@
 "Last sector (最終セクタ)"
 という問い合わせに対しては、パーティションサイズをセクタ数でも
 +/\-<size>{K,B,M,G,...} という表記でも指定できる。
-
+.IP "[\fB訳注\fP]" 8
+デフォルトでは、最終セクタ番号を指定するようになっている。
+サイズを、バイト数ではなく、セクタの数で指定する +/-<セクタ数>
+という指定法もある。
+.PP
 サイズの前に '+' を付けると、そのパーティションの最初のセクタからの相対的なサイズと解釈される。
 サイズの前に '\-' を付けた場合は、最大位置
 (そのパーティションのために利用できる最後のセクタ) からのサイズになる。
@@ -209,7 +240,13 @@
 また、パーティションの数に制限がない
 (とは言え、パーティショニングツールの多くでは、パーティション数の上限をたいてい
 128 にしている)。
-
+.IP "[\fB訳注\fP]" 8
+ここで言う「どんなパーティションかを示す名前」は、\fBfdisk -l -o +Name\fP
+を実行すると (存在すれば) 表示される、簡単なパーティションの説明のことだろう。"EFI 
+system partition" とか "Basic data partition" のようなものである。
+\fBsfdisk\fP の \fB\-\-part\-label\fP オプションの説明や、
+「\fB入力の書式\fP」セクションのフィールド名の説明もご覧になっていただきたい。
+.PP
 なお、GPT の仕様では、今でも最初のセクタが \fBprotective MBR\fP
 のために留保されている。MBR 専用のパーティショニングツールが、誤認識して
 GPT ディスクを上書きしてしまうのを防ぐためである。
@@ -357,14 +394,9 @@
 ウェルカムメッセージ。
 
 .SH 作者
-.MT kzak@redhat.com
-Karel Zak
-.ME
-.br
-.MT dave@gnu.org
-Davidlohr Bueso
-.ME
+Karel Zak <kzak@redhat.com>
 .br
+Davidlohr Bueso <dave@gnu.org>
 .PP
 最初のバージョンを書いたのは、Andries E. Brouwer, A. V. Le Blanc,
 その他の人たちだった。
