.\"O .TH "GETOPT" "1" "2021-06-02" "util\-linux 2.37.2" "User Commands"
.\"O .ie \n(.g .ds Aq \(aq
.\"O .el       .ds Aq '
.\"O .ss \n[.ss] 0
.\"O .nh
.\"O .ad l
.\"O .de URL
.\"O \fI\\$2\fP <\\$1>\\$3
.\"O ..
.\"O .als MTO URL
.\"O .if \n[.g] \{\
.\"O .  mso www.tmac
.\"O .  am URL
.\"O .    ad l
.\"O .  .
.\"O .  am MTO
.\"O .    ad l
.\"O .  .
.\"O .  LINKSTYLE blue R < >
.\"O .\}
.TH GETOPT 1 2021\-06\-02 "util\-linux 2.37.2" ユーザーコマンド
.ie  \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de  URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if  \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.\"O ----------------------------------------
.\"O .SH "NAME"
.\"O getopt \- parse command options (enhanced)
.SH 名前
getopt \- コマンドのオプションを解析する (強化版)
.\"O ----------------------------------------
.\"O .SH "SYNOPSIS"
.\"O .sp
.\"O \fBgetopt\fP \fIoptstring\fP \fIparameters\fP
.\"O \fBgetopt\fP [options] [\fB\-\-\fP] \fIoptstring\fP \fIparameters\fP
.\"O \fBgetopt\fP [options] \fB\-o\fP|\fB\-\-options\fP \fIoptstring\fP [options] [\fB\-\-\fP] \fIparameters\fP
.SH 書式
.sp
\fBgetopt\fP \fIoptstring\fP \fIparameters\fP \fBgetopt\fP [options] [\fB\-\-\fP]
\fIoptstring\fP \fIparameters\fP \fBgetopt\fP [options] \fB\-o\fP|\fB\-\-options\fP
\fIoptstring\fP [options] [\fB\-\-\fP] \fIparameters\fP
.\"O ----------------------------------------
.\"O .SH "DESCRIPTION"
.\"O .sp
.\"O \fBgetopt\fP is used to break up (\fIparse\fP) options in command lines for easy parsing by shell procedures, and to check for valid options. It uses the GNU \fBgetopt\fP(3) routines to do this.
.\"O .sp
.\"O The parameters \fBgetopt\fP is called with can be divided into two parts: options which modify the way \fBgetopt\fP will do the parsing (the \fIoptions\fP and the \fIoptstring\fP in the \fBSYNOPSIS\fP), and the parameters which are to be parsed (\fIparameters\fP in the \fBSYNOPSIS\fP). The second part will start at the first non\-option parameter that is not an option argument, or after the first occurrence of \(aq\fB\-\-\fP\(aq. If no \(aq\fB\-o\fP\(aq or \(aq\fB\-\-options\fP\(aq option is found in the first part, the first parameter of the second part is used as the short options string.
.\"O .sp
.\"O If the environment variable \fBGETOPT_COMPATIBLE\fP is set, or if the first \fIparameter\fP is not an option (does not start with a \(aq\fB\-\fP\(aq, the first format in the \fBSYNOPSIS\fP), \fBgetopt\fP will generate output that is compatible with that of other versions of \fBgetopt\fP(1). It will still do parameter shuffling and recognize optional arguments (see section \fBCOMPATIBILITY\fP for more information).
.\"O .sp
.\"O Traditional implementations of \fBgetopt\fP(1) are unable to cope with whitespace and other (shell\-specific) special characters in arguments and non\-option parameters. To solve this problem, this implementation can generate quoted output which must once again be interpreted by the shell (usually by using the \fBeval\fP command). This has the effect of preserving those characters, but you must call \fBgetopt\fP in a way that is no longer compatible with other versions (the second or third format in the \fBSYNOPSIS\fP). To determine whether this enhanced version of \fBgetopt\fP(1) is installed, a special test option (\fB\-T\fP) can be used.
.SH 説明
.sp
\fBgetopt\fP は、コマンドラインのオプションを分解 (\fI構文解析\fP) して、シェル上の手続きによる解析作業を容易にしたり、
オプションが有効かどうかをチェックしたりするために使用する。 \fBgetopt\fP は、そうしたことを行うのに GNU \fBgetopt\fP(3)
のルーティンを使っている。
.sp
\fBgetopt\fP を呼び出すときに使用するパラメーターは、2 つの部分に分けることができる。 すなわち、\fBgetopt\fP
が解析を行うときの動作を変更するオプション部分 (上記「\fB書式\fP」の \fIoptions\fP と \fIopstring\fP)
と、解析の対象になるパラメーター部分 (上記「\fB書式\fP」の \fIparameters\fP) の 2 つである。2 番目の部分は、
オプションではない最初のパラメーターで、オプションの引数でもないものから始まるか、 あるいは、'\fB\-\-\fP'
が最初に現れた位置の直後から始まる。なお、1 番目の部分に \(aq\fB\-o\fP\(aq や \(aq\fB\-\-options\fP\(aq
オプションが存在しない場合は、 2 番目の部分の最初のパラメーターが、 解析の対象となるショートオプションを 1 つにまとめたショートオプション文字列
(すなわち \fIoptsting\fP) として使用される。
.sp
環境変数 \fBGETOPT_COMPATIBLE\fP が設定されている場合や、最初のパラメーターがオプションではない場合 (\(aq\fB\-\fP\(aq
で始まっていない場合であり、「\fB書式\fP」セクションの第 1 の書式)、この \fBgetopt\fP は他のバージョンの \fBgetopt\fP(1)
と互換性のある出力を生成する。 なお、その場合でもやはりパラメーターの並べ替えは行うし、指定が任意の引数の認識もする
(詳細については、「\fB互換性\fP」セクションを参照のこと)。
.sp
従来の \fBgetopt\fP(1) の実装では、引数などのオプションではないパラメーターの中に、ホワイトスペースや (シェル固有の)
特殊文字などがあると、 それに対処することができなかった。 この問題を解決するために、この実装では、クォートした出力を生成できるようになっているが、
そうした出力は、シェルによってもう一度解釈される必要がある (たいていは、そのために \fBeval\fP コマンドを使用する)。
この出力形式を使えば、ホワイトスペースや特殊文字を保護することにはなるが、それには \fBgetopt\fP
を他のバージョンともはや互換性のない形で呼び出さなければならない (すなわち、「\fB書式\fP」セクションの第 2 や 第 3
の書式だ)。御使用のシステムに \fBgetopt\fP(1) のこの強化版がインストールされているかどうかを知るには、 専用のテストオプション
(\fB\-T\fP) を使用すればよい。
.\"O ----------------------------------------
.\"O .SH "OPTIONS"
.\"O .sp
.\"O \fB\-a\fP, \fB\-\-alternative\fP
.SH オプション
.sp
\fB\-a\fP, \fB\-\-alternative\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O Allow long options to start with a single \(aq\fB\-\fP\(aq.
.RS 4
ロングオプションを 1 個の \(aq\fB\-\fP\(aq で始めることができるようにする。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB\-h\fP, \fB\-\-help\fP
.RE
.sp
\fB\-h\fP, \fB\-\-help\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O Display help text and exit. No other output is generated.
.RS 4
ヘルプを表示して終了する。 それ以上何も出力しない。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB\-l\fP, \fB\-\-longoptions\fP \fIlongopts\fP
.RE
.sp
\fB\-l\fP, \fB\-\-longoptions\fP \fIlongopts\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O The long (multi\-character) options to be recognized. More than one option name may be specified at once, by separating the names with commas. This option may be given more than once, the \fIlongopts\fP are cumulative. Each long option name in \fIlongopts\fP may be followed by one colon to indicate it has a required argument, and by two colons to indicate it has an optional argument.
.RS 4
認識すべきロングオプション (複数の文字からなる) を指定する。 2 個以上のオプション名を、コンマで区切って一度に指定することができる。
このオプションは複数回指定することもでき、その場合も \fIlongopts\fP が追加されていく。 \fIlongouts\fP
中の各ロングオプション名の後ろには、コロンを続けることができる。 コロンが 1 個のときは、 引数が必須だということであり、2 個のときは、
引数は任意、すなわち、あってもなくてもよいということである。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB\-n\fP, \fB\-\-name\fP \fIprogname\fP
.RE
.sp
\fB\-n\fP, \fB\-\-name\fP \fIprogname\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O The name that will be used by the \fBgetopt\fP(3) routines when it reports errors. Note that errors of \fBgetopt\fP(1) are still reported as coming from getopt.
.RS 4
\fBgetopt\fP(3) ルーティンが、エラーを通知する際に使用するプログラム名を指定する。 \fBgetopt\fP(1) のエラーも、やはり getopt
コマンドから発生するエラーとして報告されることに注意すること。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB\-o\fP, \fB\-\-options\fP \fIshortopts\fP
.RE
.sp
\fB\-o\fP, \fB\-\-options\fP \fIshortopts\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O The short (one\-character) options to be recognized. If this option is not found, the first parameter of \fBgetopt\fP that does not start with a \(aq\fB\-\fP\(aq (and is not an option argument) is used as the short options string. Each short option character in \fIshortopts\fP may be followed by one colon to indicate it has a required argument, and by two colons to indicate it has an optional argument. The first character of shortopts may be \(aq\fB+\fP\(aq or \(aq\fB\-\fP\(aq to influence the way options are parsed and output is generated (see section \fBSCANNING MODES\fP for details).
.RS 4
認識すべきショート (1 文字からなる) オプション群を指定する。 このオプションが指定されていない場合は、\(aq\fB\-\fP\(aq で始まらない
(そして、オプションの引数でもない) \fBgetopt\fP の最初のパラメーターが、
ショートオプションを一つにまとめたショートオプション文字列として使用される。 \fIshortopts\fP
中のショートオプション各文字の後ろには、コロンを続けることができる。コロンが 1 個のときは、引数が必須だということであり、2
個のときは、引数は任意、すなわち、あってもなくてもよいということである。 また、\fIshortopts\fP の先頭に \(aq\fB+\fP\(aq や
\(aq\fB\-\fP\(aq という文字を付ければ、オプションの解析の仕方や、出力の生成の仕方を変更することができる
(詳細については、「\fBスキャンモード\fP」セクションを参照すること)。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB\-q\fP, \fB\-\-quiet\fP
.RE
.sp
\fB\-q\fP, \fB\-\-quiet\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O Disable error reporting by \fBgetopt\fP(3).
.RS 4
\fBgetopt\fP(3) の出すエラーメッセージを表示しない。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB\-Q\fP, \fB\-\-quiet\-output\fP
.RE
.sp
\fB\-Q\fP, \fB\-\-quiet\-output\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O Do not generate normal output. Errors are still reported by \fBgetopt\fP(3), unless you also use \fB\-q\fP.
.RS 4
通常の出力を生成しない。 それでも、 \fB\-q\fP を同時に指定しないかぎり、 \fBgetopt\fP(3) によるエラー報告は行われる。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB\-s\fP, \fB\-\-shell\fP \fIshell\fP
.RE
.sp
\fB\-s\fP, \fB\-\-shell\fP \fIshell\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O Set quoting conventions to those of \fIshell\fP. If the \fB\-s\fP option is not given, the BASH conventions are used. Valid arguments are currently \(aq\fBsh\fP\(aq \(aq\fBbash\fP\(aq, \(aq\fBcsh\fP\(aq, and \(aq\fBtcsh\fP\(aq.
.RS 4
クォート方式を \fIshell\fP のものにする。 \fB\-s\fP オプションが指定されていない場合は、 BASH のクォート方式が使われる。
指定可能な引数は、現在のところ \(aq\fBsh\fP\(aq, \(aq\fBbash\fP\(aq, \(aq\fBcsh\fP\(aq,
\(aq\fBtcsh\fP\(aq である。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB\-T\fP, \fB\-\-test\fP
.RE
.sp
\fB\-T\fP, \fB\-\-test\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O Test if your \fBgetopt\fP(1) is this enhanced version or an old version. This generates no output, and sets the error status to 4. Other implementations of \fBgetopt\fP(1), and this version if the environment variable \fBGETOPT_COMPATIBLE\fP is set, will return \(aq\fB\-\-\fP\(aq and error status 0.
.RS 4
現在使っている \fBgetopt\fP(1)  が、強化バージョンか古いバージョンかをテストする。 このオプションは何も出力しないが、エラーステータスを 4
にする。 \fBgetopt(1)\fP の他の実装や、このバージョンでも環境変数 \fBGETOPT_COMPATIBLE\fP が設定されている場合は、
\(aq\fB\-\-\fP\(aq を返して、エラーステータスを 0 にする。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB\-u\fP, \fB\-\-unquoted\fP
.RE
.sp
\fB\-u\fP, \fB\-\-unquoted\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O Do not quote the output. Note that whitespace and special (shell\-dependent) characters can cause havoc in this mode (like they do with other \fBgetopt\fP(1) implementations).
.RS 4
出力をクォートしない。 このモードでは、ホワイトスペースや (シェル依存の)  特殊文字が、混乱を引き起こすかもしれない点に注意すること (別の
\fBgetopt\fP(1) 実装でも同様)。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB\-V\fP, \fB\-\-version\fP
.RE
.sp
\fB\-V\fP, \fB\-\-version\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O Display version information and exit. No other output is generated.
.RS 4
バージョン情報を表示して、終了する。それ以上何も出力しない。
.\"O ----------------------------------------
.\"O .RE
.RE
.\"O ----------------------------------------
.\"O .SH "PARSING"
.\"O .sp
.\"O This section specifies the format of the second part of the parameters of \fBgetopt\fP (the \fIparameters\fP in the \fBSYNOPSIS\fP). The next section (\fBOUTPUT\fP) describes the output that is generated. These parameters were typically the parameters a shell function was called with. Care must be taken that each parameter the shell function was called with corresponds to exactly one parameter in the parameter list of \fBgetopt\fP (see the \fBEXAMPLES\fP). All parsing is done by the GNU \fBgetopt\fP(3) routines.
.\"O .sp
.\"O The parameters are parsed from left to right. Each parameter is classified as a short option, a long option, an argument to an option, or a non\-option parameter.
.\"O .sp
.\"O A simple short option is a \(aq\fB\-\fP\(aq followed by a short option character. If the option has a required argument, it may be written directly after the option character or as the next parameter (i.e., separated by whitespace on the command line). If the option has an optional argument, it must be written directly after the option character if present.
.\"O .sp
.\"O It is possible to specify several short options after one \(aq\fB\-\fP\(aq, as long as all (except possibly the last) do not have required or optional arguments.
.\"O .sp
.\"O A long option normally begins with \(aq\fB\-\-\fP\(aq followed by the long option name. If the option has a required argument, it may be written directly after the long option name, separated by \(aq\fB=\fP\(aq, or as the next argument (i.e., separated by whitespace on the command line). If the option has an optional argument, it must be written directly after the long option name, separated by \(aq\fB=\fP\(aq, if present (if you add the \(aq\fB=\fP\(aq but nothing behind it, it is interpreted as if no argument was present; this is a slight bug, see the \fBBUGS\fP). Long options may be abbreviated, as long as the abbreviation is not ambiguous.
.\"O .sp
.\"O Each parameter not starting with a \(aq\fB\-\fP\(aq, and not a required argument of a previous option, is a non\-option parameter. Each parameter after a \(aq\fB\-\-\fP\(aq parameter is always interpreted as a non\-option parameter. If the environment variable \fBPOSIXLY_CORRECT\fP is set, or if the short option string started with a \(aq\fB+\fP\(aq, all remaining parameters are interpreted as non\-option parameters as soon as the first non\-option parameter is found.
.SH 構文解析
.sp
このセクションは、\fBgetopt\fP のパラメーターの 2 番目の部分 (「\fB書式\fP」セクションの \fIparameters\fP)
の書式について詳述している。 次のセクション (「\fB出力\fP」) では、生成される出力について説明する。一般に \fBgetopt\fP
は、シェル関数やシェルスクリプトの中で、その引数を解析するために使うものなので、 ここで取り上げるパラメーター群が、元はと言えば、
シェル関数を呼んだときに渡したパラメーターだったというのは、ごく普通のことである。
そこで、気を付けなければならないことがある。シェル関数を呼んだときに渡す各パラメーターは、 \fBgetopt\fP
に渡されるパラメーターリスト中のパラメーターと 1 対 1 で対応していなければならないのだ (「\fB例\fP」セクションを参照)。 すべての解析は、GNU
\fBgetopt\fP(3) のルーティンによって行われる。
.sp
パラメーター群は左から右へ解析される。各パラメーターは、ショートオプション、ロングオプション、
オプションの引数、オプションとは無関係なパラメーターに分割分類される。
.sp
単純なショートオプションは、1 個の \(aq\fB\-\fP\(aq に 1 個のショートオプション文字が続くものである。
オプションが引数を必須にしている場合は、オプション文字の直後に続けてもよく、 次のパラメーターとして
(すなわち、コマンドライン上でホワイトスペースを間に置いて) 書いてもよい。オプションの引数が任意の場合は、それが存在するなら、
オプション文字の直後に続けなければならない。
.sp
1 個の \(aq\fB\-\fP\(aq の後ろに数個のショートオプションをまとめて指定することもできる。
ただし、最後のオプション以外のすべてのオプションが、 必須や任意の引数を取らないという条件がある
(例外として、最後のオプションは引数を取ることができる)。
.sp
ロングオプションは、通常 \(aq\fB\-\-\fP\(aq で始まり、ロングオプション名がそれに続く。
オプションが引数を必須にしている場合は、ロングオプション名の直後に \(aq\fB=\fP\(aq で区切って続けてもよく、次の引数として
(すなわち、コマンドライン上でホワイトスペースを間に置いて) 書いてもよい。
オプションの引数が任意の場合は、それが存在するなら、ロングオプション名の直後に \(aq\fB=\fP\(aq で区切って続けなければならない
(\(aq\fB=\fP\(aq を続けたものの、その後に何も指定しない場合は、引数が存在しないかのように解釈される。
これはちょっとしたバグである。「\fBバグ\fP」セクションを参照)。 ロングオプションは、短縮しても他のオプションと区別が付くかぎり、短縮できる。
.sp
\(aq\fB\-\fP\(aq で始まっていないパラメーターで、直前のオプションの必須の引数でもないものは、
いずれもオプションとは無関係なパラメーターである。 また、\(aq\fB\-\-\fP\(aq というパラメーターの後にあるパラメーターは、
常にオプションとは無関係なパラメーターと解釈される。 環境変数 \fBPOSIXLY_CORRECT\fP が設定されている場合や、ショートオプション文字列が
\(aq\fB+\fP\(aq で始まっている場合は、オプションとは無関係な最初のパラメーターが見つかった時点で、
残りのすべてのパラメーターは、オプションとは無関係なパラメーターと解釈される。
.\"O ----------------------------------------
.\"O .SH "OUTPUT"
.\"O .sp
.\"O Output is generated for each element described in the previous section. Output is done in the same order as the elements are specified in the input, except for non\-option parameters. Output can be done in \fIcompatible\fP (\fIunquoted\fP) mode, or in such way that whitespace and other special characters within arguments and non\-option parameters are preserved (see \fBQUOTING\fP). When the output is processed in the shell script, it will seem to be composed of distinct elements that can be processed one by one (by using the shift command in most shell languages). This is imperfect in unquoted mode, as elements can be split at unexpected places if they contain whitespace or special characters.
.\"O .sp
.\"O If there are problems parsing the parameters, for example because a required argument is not found or an option is not recognized, an error will be reported on stderr, there will be no output for the offending element, and a non\-zero error status is returned.
.\"O .sp
.\"O For a short option, a single \(aq\fB\-\fP\(aq and the option character are generated as one parameter. If the option has an argument, the next parameter will be the argument. If the option takes an optional argument, but none was found, the next parameter will be generated but be empty in quoting mode, but no second parameter will be generated in unquoted (compatible) mode. Note that many other \fBgetopt\fP(1) implementations do not support optional arguments.
.\"O .sp
.\"O If several short options were specified after a single \(aq\fB\-\fP\(aq, each will be present in the output as a separate parameter.
.\"O .sp
.\"O For a long option, \(aq\fB\-\-\fP\(aq and the full option name are generated as one parameter. This is done regardless whether the option was abbreviated or specified with a single \(aq\fB\-\fP\(aq in the input. Arguments are handled as with short options.
.\"O .sp
.\"O Normally, no non\-option parameters output is generated until all options and their arguments have been generated. Then \(aq\fB\-\-\fP\(aq is generated as a single parameter, and after it the non\-option parameters in the order they were found, each as a separate parameter. Only if the first character of the short options string was a \(aq\fB\-\fP\(aq, non\-option parameter output is generated at the place they are found in the input (this is not supported if the first format of the \fBSYNOPSIS\fP is used; in that case all preceding occurrences of \(aq\fB\-\fP\(aq and \(aq\fB+\fP\(aq are ignored).
.SH 出力
.sp
出力は、前のセクションで述べた要素のひとつひとつに対して生成される。 出力される順番は、オプションとは無関係なパラメーター以外は、
各要素が入力で指定された順番と同じである。出力は、互換 モード (クォートしないモード) で行うこともできるし、ホワイトスペースなどの特殊文字が、
オプション引数やオプションとは無関係なパラメーター中にある場合に、 そうしたものを保護する形で行うこともできる (「\fBクォート\fP」セクションを参照)。
出力はシェルスクリプト中で処理される際に、出力を構成する各要素が、 それぞれ他と区別されるものとして見えることになるので、(ほとんどのシェル言語で
shift コマンドを使って) ひとつひとつ処理することが可能になる。 ただし、クォートなしのモードでのこの処理は、完全ではない。
要素にホワイトスペースや特殊文字が含まれていると、 思いがけないところで要素が分割されてしまうかもしれないのである。
.sp
たとえば、引数が必須なのに存在しないとか、未知のオプションがあるとかいう理由で、
パラメーターの解析中に問題が起きたときは、エラーメッセージが標準エラーに表示され、 問題を起こした要素については、何も出力されない。
そして、ゼロ以外のエラーステータスが返される。
.sp
ショートオプションに対しては、1 個の \(aq\fB\-\fP\(aq とオプション文字が、ひとつのパラメーターとして生成される。
オプションに引数がある場合は、次のパラメーターはその引数である。 オプションの引数が任意なとき、その引数が見つからなかった場合は、
クォーティングモードでは、次のパラメーターが生成されるが、空のパラメーターになる。 クォートなしのモード (互換モード) では、2
番目のパラメーターは生成されない。 なお、\fBgetopt\fP(1) の他の実装では、任意の引数をサポートしていないことが多い。
.sp
1 個の \(aq\fB\-\fP\(aq の後ろに複数のショートオプションが指定されている場合は、
各オプションがそれぞれ独立したパラメーターとして出力されることになる。
.sp
ロングオプションに対しては、\(aq\fB\-\-\fP\(aq と省略なしのオプション名がひとつのパラメーターとして生成される。
この動作は、入力中でオプションが短縮されているかどうかや、1 個の \(aq\fB\-\fP\(aq とともに指定されているかどうかとは、関係がない。
引数の処理は、ショートオプションの場合と同じである。
.sp
通常、オプションとは無関係なパラメーターの出力が生成されるのは、 すべてのオプションとその引数が生成されてからである。
それから、\(aq\fB\-\-\fP\(aq が 1 個のパラメーターとして生成され、 その後で、オプションとは無関係なパラメーターが、
見つかった順序で、それぞれ独立したパラメーターとして生成される。 ただし、ショートオプション文字列の最初の文字が \(aq\fB\-\fP\(aq
のときだけは別で、その場合は、オプションとは無関係なパラメーターの出力は、 入力中のそれが見つかった位置で生成される
(この動作は、「\fB書式\fP」セクションの第 1 の書式が使用されている場合には、サポートされない。 その場合は、ショートオプション文字列の前にある
\(aq\fB\-\fP\(aq や \(aq\fB+\fP\(aq は、すべて無視される)。
.\"O ----------------------------------------
.\"O .SH "QUOTING"
.\"O .sp
.\"O In compatibility mode, whitespace or \(aqspecial\(aq characters in arguments or non\-option parameters are not handled correctly. As the output is fed to the shell script, the script does not know how it is supposed to break the output into separate parameters. To circumvent this problem, this implementation offers quoting. The idea is that output is generated with quotes around each parameter. When this output is once again fed to the shell (usually by a shell \fBeval\fP command), it is split correctly into separate parameters.
.\"O .sp
.\"O Quoting is not enabled if the environment variable \fBGETOPT_COMPATIBLE\fP is set, if the first form of the \fBSYNOPSIS\fP is used, or if the option \(aq\fB\-u\fP\(aq is found.
.\"O .sp
.\"O Different shells use different quoting conventions. You can use the \(aq\fB\-s\fP\(aq option to select the shell you are using. The following shells are currently supported: \(aq\fBsh\fP\(aq, \(aq\fBbash\fP\(aq, \(aq\fBcsh\fP\(aq and \(aq\fBtcsh\fP\(aq. Actually, only two \(aqflavors\(aq are distinguished: sh\-like quoting conventions and csh\-like quoting conventions. Chances are that if you use another shell script language, one of these flavors can still be used.
.SH クォート
.sp
互換モードでは、オプションの引数やオプションとは無関係なパラメーター中に、 ホワイトスペースや特殊文字があると、それを適切に処理できない。
そのため、互換モードの出力を渡されたシェルスクリプトは、
その出力をどのように個々のパラメーターに分割することが期待されているのか、わからないことになる。 この問題を回避するために、\fBgetopt\fP
のこの実装では、クォートによる保護を提供している。 要するに、出力を生成するとき、パラメーターをひとつひとつ引用符で囲んでやるのである。この出力を
(たいていは、シェルの \fBeval\fP コマンドを使って) もう一度シェルに渡してやれば、別々のパラメーターに適切に分割されることになる。
.sp
次の場合には、引用符による保護が行われない。環境変数 \fBGETOPT_COMPATIBLE\fP が設定されている場合、「\fB書式\fP」セクションの第 1
の書式が使われている場合、\(aq\fB\-u\fP\(aq オプションが指定されている場合。
.sp
クォート方式はシェルごとに異なる。自分が使用しているシェルの方式を選ぶには、\(aq\fB\-s\fP\(aq オプションを使えばよい。
現在サポートしているシェルは、\(aq\fBsh\fP\(aq, \(aq\fBbash\fP\(aq, \(aq\fBcsh\fP\(aq,
\(aq\fBtcsh\fP\(aq である。 実のところ、sh 風のクォート方式と csh 風のクォート方式という、2 つの系統しか区別していない。
別のシェルスクリプト言語を使用している場合でも、この 2 つの系統のどちらかが多分使えるだろう。
.\"O ----------------------------------------
.\"O .SH "SCANNING MODES"
.\"O .sp
.\"O The first character of the short options string may be a \(aq\fB\-\fP\(aq or a \(aq\fB+\fP\(aq to indicate a special scanning mode. If the first calling form in the \fBSYNOPSIS\fP is used they are ignored; the environment variable \fBPOSIXLY_CORRECT\fP is still examined, though.
.\"O .sp
.\"O If the first character is \(aq\fB+\fP\(aq, or if the environment variable \fBPOSIXLY_CORRECT\fP is set, parsing stops as soon as the first non\-option parameter (i.e., a parameter that does not start with a \(aq\fB\-\fP\(aq) is found that is not an option argument. The remaining parameters are all interpreted as non\-option parameters.
.\"O .sp
.\"O If the first character is a \(aq\fB\-\fP\(aq, non\-option parameters are outputted at the place where they are found; in normal operation, they are all collected at the end of output after a \(aq\fB\-\-\fP\(aq parameter has been generated. Note that this \(aq\fB\-\-\fP\(aq parameter is still generated, but it will always be the last parameter in this mode.
.SH スキャンモード
.sp
ショートオプション文字列の先頭には、1 個の \(aq\fB\-\fP\(aq または \(aq\fB+\fP\(aq
を付けて、特別なスキャンモードを指示することができる。 「\fB書式\fP」セクションの第 1 の呼び出し形式が使用されている場合には、
こうしたプラスやマイナス記号は無視されるが、そのときでも、環境変数 \fBPOSIXLY_CORRECT\fP が設定されているかどうかは確認される。
.sp
先頭文字が \(aq\fB+\fP\(aq の場合や、環境変数 \fBPOSIXLY_CORRECT\fP が設定されている場合は、オプションではないパラメーターで
(すなわち、\(aq\fB\-\fP\(aq で始まっていないパラメーターで)、かつオプションの引数でもないものが最初に見つかった時点で、 解析はストップする。
残りのパラメーターはすべて、オプションとは無関係なパラメータと見なされる。
.sp
先頭文字が \(aq\fB\-\fP\(aq の場合、オプションとは無関係なパラメーターは、 それが見つかった位置に出力される。それに対して、通常の動作では、
そうしたパラメーターは、1 個の \(aq\fB\-\-\fP\(aq というパラメーターが生成された後で、 出力の末尾に全部まとめて置かれるのである。
なお、このモードでも、\(aq\fB\-\-\fP\(aq というパラメーターはやはり生成されるが、必ず最後のパラメーターになる。
.\"O ----------------------------------------
.\"O .SH "COMPATIBILITY"
.\"O .sp
.\"O This version of \fBgetopt\fP(1) is written to be as compatible as possible to other versions. Usually you can just replace them with this version without any modifications, and with some advantages.
.\"O .sp
.\"O If the first character of the first parameter of getopt is not a \(aq\fB\-\fP\(aq, \fBgetopt\fP goes into compatibility mode. It will interpret its first parameter as the string of short options, and all other arguments will be parsed. It will still do parameter shuffling (i.e., all non\-option parameters are output at the end), unless the environment variable \fBPOSIXLY_CORRECT\fP is set, in which case, \fBgetopt\fP will prepend a \(aq\fB+\fP\(aq before short options automatically.
.\"O .sp
.\"O The environment variable \fBGETOPT_COMPATIBLE\fP forces \fBgetopt\fP into compatibility mode. Setting both this environment variable and \fBPOSIXLY_CORRECT\fP offers 100% compatibility for \(aqdifficult\(aq programs. Usually, though, neither is needed.
.\"O .sp
.\"O In compatibility mode, leading \(aq\fB\-\fP\(aq and \(aq\fB+\fP\(aq characters in the short options string are ignored.
.SH 互換性
.sp
このバージョンの \fBgetopt\fP(1) は、できるだけ他のバージョンと互換性があるように書かれている。 たいていの場合、他のバージョンの
\fBgetopt\fP をこのバージョンで置き換えるだけでよく、 既存のシェルスクリプトなどに手を入れる必要はない。さらに、いくつかの利点もある。
.sp
getopt の最初のパラメーターの最初の文字が \(aq\fB\-\fP\(aq でない場合、getopt は互換モードになる。
最初のパラメーターは、ショートオプションをひとつにまとめた文字列と見なされ、 他のすべての引数は、解析の対象になる。 この場合でも、環境変数
\fBPOSIXLY_CORRECT\fP が設定されていないかぎり、パラメーターの並べ替えは行う。
(すなわち、オプションとは無関係なすべてのパラメーターは、最後に出力される)。その場合には \fBgetopt\fP が、 ショートオプションの先頭に自動的に
\(aq\fB+\fP\(aq を付与する。
.sp
環境変数 \fBGETOPT_COMPATIBLE\fP は \fBgetopt\fP を強制的に互換モードにする。この環境変数と
\fBPOSIXLY_CORRECT\fP の両方を設定すると、「気難しい」プログラムのために 100% の互換性が得られる。
しかし、通常はどちらも設定する必要はない。
.sp
互換モードでは、 ショートオプションの文字列先頭に付く \(aq\fB\-\fP\(aq や \(aq\fB+\fP\(aq は無視される。
.\"O ----------------------------------------
.\"O .SH "RETURN CODES"
.\"O .sp
.\"O \fBgetopt\fP returns error code \fB0\fP for successful parsing, \fB1\fP if \fBgetopt\fP(3) returns errors, \fB2\fP if it does not understand its own parameters, \fB3\fP if an internal error occurs like out\-of\-memory, and \fB4\fP if it is called with \fB\-T\fP.
.SH 返り値
.sp
\fBgetopt\fP は、解析に成功した場合は、エラーコード \fB0\fP を返す。 \fBgetopt\fP(3) がエラーを返した場合は \fB1\fP を返す。
自分自身に対して与えられたパラメーターが理解できなかった場合は \fB2\fP を返す。メモリが足りない (out\-of\-memory)
といった内部エラーが起きた場合は \fB3\fP を返す。\fB\-T\fP オプションを付けて呼び出された場合は \fB4\fP を返す。
.\"O ----------------------------------------
.\"O .SH "EXAMPLES"
.\"O .sp
.\"O Example scripts for (ba)sh and (t)csh are provided with the \fBgetopt\fP(1) distribution, and are installed in \fI/usr/share/doc/util\-linux\fP directory.
.SH 例
.sp
\fBgetopt\fP(1)  の配布では、(ba)sh と (t)csh 用のスクリプトの見本を提供している。インストール場所は
\fI/usr/share/doc/util\-linux/\fP である。
.\"O ----------------------------------------
.\"O .SH "ENVIRONMENT"
.\"O .sp
.\"O \fBPOSIXLY_CORRECT\fP
.SH 環境変数
.sp
\fBPOSIXLY_CORRECT\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O This environment variable is examined by the \fBgetopt\fP(3) routines. If it is set, parsing stops as soon as a parameter is found that is not an option or an option argument. All remaining parameters are also interpreted as non\-option parameters, regardless whether they start with a \(aq\fB\-\fP\(aq.
.RS 4
この環境変数は \fBgetopt\fP(3) ルーティンによって調べられる。これが設定されている場合、
オプションでもオプションの引数でもないパラメーターが見つかった時点で、解析は停止する。 それ以降のすべてのパラメーターは、\(aq\fB\-\fP\(aq
で始まっているかどうかに関係なく、オプションとは無関係なパラメーターとして解釈される。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fBGETOPT_COMPATIBLE\fP
.RE
.sp
\fBGETOPT_COMPATIBLE\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O Forces \fBgetopt\fP to use the first calling format as specified in the \fBSYNOPSIS\fP.
.RS 4
\fBgetopt\fP に対して強制的に「\fB書式\fP」セクションの第 1 の呼び出し形式を使わせる。
.\"O ----------------------------------------
.\"O .RE
.RE
.\"O ----------------------------------------
.\"O .SH "BUGS"
.\"O .sp
.\"O \fBgetopt\fP(3) can parse long options with optional arguments that are given an empty optional argument (but cannot do this for short options). This \fBgetopt\fP(1) treats optional arguments that are empty as if they were not present.
.\"O .sp
.\"O The syntax if you do not want any short option variables at all is not very intuitive (you have to set them explicitly to the empty string).
.SH バグ
.sp
\fBgetopt\fP(3) 関数は、引数が任意のロングオプションが空の任意引数を渡された場合、それを解析できる
(だが、ショートオプションに対しては、それができない)。一方、この \fBgetopt\fP(1)
コマンドは、空の任意引数を、引数が存在しないかのように処理している。
.sp
ショートオプションを全く使いたくない場合の \fBgetopt\fP コマンドの構文は、あまり直感的ではない
(ショートオプション文字列を明示的に空文字列にしなければならないのだ)。
.\"O ----------------------------------------
.\"O .SH "AUTHOR"
.\"O .sp
.\"O .MTO "frodo\(atfrodo.looijaard.name" "Frodo Looijaard" ""
.SH 作者
.sp
.MTO frodo\(atfrodo.looijaard.name "Frodo Looijaard" ""
.\"O ----------------------------------------
.\"O .SH "SEE ALSO"
.\"O .sp
.\"O \fBbash\fP(1),
.\"O \fBtcsh\fP(1),
.\"O \fBgetopt\fP(3)
.SH 関連項目
.sp
\fBbash\fP(1), \fBtcsh\fP(1), \fBgetopt\fP(3)
.\"O ----------------------------------------
.\"O .SH "REPORTING BUGS"
.\"O .sp
.\"O For bug reports, use the issue tracker at \c
.\"O .URL "https://github.com/karelzak/util\-linux/issues" "" "."
.SH バグ報告
.sp
バグ報告は、 以下にある issue トラッカーを利用すること。
.URL https://github.com/karelzak/util\-linux/issues "" .
.\"O ----------------------------------------
.\"O .SH "AVAILABILITY"
.\"O .sp
.\"O The \fBgetopt\fP command is part of the util\-linux package which can be downloaded from \c
.\"O .URL "https://www.kernel.org/pub/linux/utils/util\-linux/" "Linux Kernel Archive" "."
.SH 入手方法
.sp
\fBgetopt\fP コマンドは util\-linux パッケージの一部であり、 以下からダウンロードできる。
.URL https://www.kernel.org/pub/linux/utils/util\-linux/ "Linux Kernel Archive" .
.\"O ----------------------------------------
