.\"O .TH "HEXDUMP" "1" "2021-06-02" "util\-linux 2.37.2" "User Commands"
.\"O .ie \n(.g .ds Aq \(aq
.\"O .el       .ds Aq '
.\"O .ss \n[.ss] 0
.\"O .nh
.\"O .ad l
.\"O .de URL
.\"O \fI\\$2\fP <\\$1>\\$3
.\"O ..
.\"O .als MTO URL
.\"O .if \n[.g] \{\
.\"O .  mso www.tmac
.\"O .  am URL
.\"O .    ad l
.\"O .  .
.\"O .  am MTO
.\"O .    ad l
.\"O .  .
.\"O .  LINKSTYLE blue R < >
.\"O .\}
.TH HEXDUMP 1 2021\-06\-02 "util\-linux 2.37.2" ユーザーコマンド
.ie  \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de  URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if  \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.\"O ----------------------------------------
.\"O .SH "NAME"
.\"O hexdump \- display file contents in hexadecimal, decimal, octal, or ascii
.\"O .sp
.\"O \fBhexdump\fP \fIoptions file\fP ...
.\"O .sp
.\"O \fBhd\fP \fIoptions file\fP ...
.SH 名前
hexdump \- ファイルの内容を 16 進数、10 進数、8 進数、ASCII 文字で表示する
.sp
\fBhexdump\fP \fIoptions file\fP ...
.sp
\fBhd\fP \fIoptions file\fP ...
.\"O ----------------------------------------
.\"O .SH "DESCRIPTION"
.\"O .sp
.\"O The \fBhexdump\fP utility is a filter which displays the specified files, or standard input if no files are specified, in a user\-specified format.
.SH 説明
.sp
\fBhexdump\fP ユーティリティは、指定されたファイルをユーザーが指定したフォーマットで表示するフィルターである。
ファイルが指定されていない場合は、標準入力を処理の対象にする。
.\"O ----------------------------------------
.\"O .SH "OPTIONS"
.\"O .sp
.\"O Below, the \fIlength\fP and \fIoffset\fP arguments may be followed by the multiplicative suffixes KiB (=1024), MiB (=1024*1024), and so on for GiB, TiB, PiB, EiB, ZiB and YiB (the "iB" is optional, e.g., "K" has the same meaning as "KiB"), or the suffixes KB (=1000), MB (=1000*1000), and so on for GB, TB, PB, EB, ZB and YB.
.\"O .sp
.\"O \fB\-b\fP, \fB\-\-one\-byte\-octal\fP
.SH オプション
.sp
以下で使用する引数 \fIlength\fP や \fIoffset\fP の後ろには、KiB (=1024), MiB (=1024*1024)
のような乗数を表す接尾辞を付けることができる。GiB, TiB, PiB, EiB, ZiB, YiB も同様に使える ("iB"
を続けるのは任意であり、たとえば、"K" は "KiB" と同じ意味だ)。また、KB (=1000), MB (=1000*1000)
のような接尾辞を付けてもよい。GB, TB, PB, EB, ZB, YB も同様に使える。
.sp
\fB\-b\fP, \fB\-\-one\-byte\-octal\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O \fIOne\-byte octal display\fP. Display the input offset in hexadecimal, followed by sixteen space\-separated, three\-column, zero\-filled bytes of input data, in octal, per line.
.RS 4
\fI1 バイト単位の 8 進数表示\fP。 入力オフセットを 16 進数で表示し、その後に、入力データを 1 バイトずつ 0 で字詰めした 3 桁の 8
進数で表現し、それを 1 行当たり 16 個、空白で区切って表示する。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB\-c\fP, \fB\-\-one\-byte\-char\fP
.RE
.sp
\fB\-c\fP, \fB\-\-one\-byte\-char\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O \fIOne\-byte character display\fP. Display the input offset in hexadecimal, followed by sixteen space\-separated, three\-column, space\-filled characters of input data per line.
.RS 4
\fI1 バイト単位の ASCII 文字表示\fP。 入力オフセットを 16 進数で表示し、その後に、入力データを 1 キャラクタずつ、空白で字詰めした 3
桁の ASCII 文字で表現し、それを 1 行当たり 16 個、空白で区切って表示する。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB\-C\fP, \fB\-\-canonical\fP
.RE
.sp
\fB\-C\fP, \fB\-\-canonical\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O \fICanonical hex+ASCII display\fP. Display the input offset in hexadecimal, followed by sixteen space\-separated, two\-column, hexadecimal bytes, followed by the same sixteen bytes in \fB%_p\fP format enclosed in \(aq\fB|\fP\(aq characters. Invoking the program as \fBhd\fP implies this option.
.RS 4
\fI標準的な 16 進数 + ASCII での表示\fP。 入力オフセットを 16 進数で表示し、その後に、入力データを 1 バイトずつ 2 桁の 16
進数で表現し、それを 1 行当たり 16 個、空白で区切って表示する。 その後に、2 つの \(aq\fB|\fP\(aq で囲まれた中に同じ 16 バイトを
\fB%_p\fP フォーマットで表示する。本プログラムを \fBhd\fP として起動した場合には、 本オプションを暗に含む。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB\-d\fP, \fB\-\-two\-bytes\-decimal\fP
.RE
.sp
\fB\-d\fP, \fB\-\-two\-bytes\-decimal\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O \fITwo\-byte decimal display\fP. Display the input offset in hexadecimal, followed by eight space\-separated, five\-column, zero\-filled, two\-byte units of input data, in unsigned decimal, per line.
.RS 4
\fI2 バイト単位の 10 進数表示\fP。 入力オフセットを 16 進数で表示し、その後に、入力データを 2 バイトずつ 0 で字詰めした 5
桁の符号なし 10 進数で表現し、それを 1 行当たり 8 個、空白で区切って表示する。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB\-e\fP, \fB\-\-format\fP \fIformat_string\fP
.RE
.sp
\fB\-e\fP, \fB\-\-format\fP \fIformat_string\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O Specify a format string to be used for displaying data.
.RS 4
データを表示するために使われるフォーマット文字列を指定する。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB\-f\fP, \fB\-\-format\-file\fP \fIfile\fP
.RE
.sp
\fB\-f\fP, \fB\-\-format\-file\fP \fIfile\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O Specify a file that contains one or more newline\-separated format strings. Empty lines and lines whose first non\-blank character is a hash mark (#) are ignored.
.RS 4
1 個以上のフォーマット文字列を、 改行で区切って書き込んだファイルを指定する。 空行や、空白を除いた最初の文字がハッシュマーク (#)
である行は無視される
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB\-L\fP, \fB\-\-color\fP[=\fIwhen\fP]
.RE
.sp
\fB\-L\fP, \fB\-\-color\fP[=\fIwhen\fP]
.\"O ----------------------------------------
.\"O .RS 4
.\"O Accept color units for the output. The optional argument \fIwhen\fP can be \fBauto\fP, \fBnever\fP or \fBalways\fP. If the \fIwhen\fP argument is omitted, it defaults to \fBauto\fP. The colors can be disabled; for the current built\-in default see the \fB\-\-help\fP output. See also the \fBColors\fP subsection and the \fBCOLORS\fP section below.
.RS 4
フォーマット中のカラー指定単位 (color unit) を出力に使用する。 指定が任意の引数 \fIwhen\fP は、\fBauto\fP, \fBnever\fP,
\fBalways\fP のいずれかである。 引数 \fIwhen\fP を省略すると、デフォルトの \fBauto\fP になる。
カラー表示は、無効にすることもできる。 プログラムに埋め込まれた現在のデフォルトが有効か無効かは、 \fB\-\-help\fP の出力を見ればわかる。
後述の「\fBカラー指定\fP」サブセクションと「\fBカラー表示\fP」セクションも参照のこと。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB\-n\fP, \fB\-\-length\fP \fIlength\fP
.RE
.sp
\fB\-n\fP, \fB\-\-length\fP \fIlength\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O Interpret only \fIlength\fP bytes of input.
.RS 4
入力の \fIlength\fP バイト分だけを処理する。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB\-o\fP, \fB\-\-two\-bytes\-octal\fP
.RE
.sp
\fB\-o\fP, \fB\-\-two\-bytes\-octal\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O \fITwo\-byte octal display\fP. Display the input offset in hexadecimal, followed by eight space\-separated, six\-column, zero\-filled, two\-byte quantities of input data, in octal, per line.
.RS 4
\fI2 バイト単位の 8 進数表示\fP。 入力オフセットを 16 進数で表示し、その後に、入力データを 2 バイトずつ 0 で字詰めした 6 桁の 8
進数で表現し、それを 1 行当たり 8 個、空白で区切って表示する。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB\-s\fP, \fB\-\-skip\fP \fIoffset\fP
.RE
.sp
\fB\-s\fP, \fB\-\-skip\fP \fIoffset\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O Skip \fIoffset\fP bytes from the beginning of the input.
.RS 4
入力の先頭から \fIoffset\fP バイトを読み飛ばす。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB\-v\fP, \fB\-\-no\-squeezing\fP
.RE
.sp
\fB\-v\fP, \fB\-\-no\-squeezing\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O The \fB\-v\fP option causes \fBhexdump\fP to display all input data. Without the \fB\-v\fP option, any number of groups of output lines which would be identical to the immediately preceding group of output lines (except for the input offsets), are replaced with a line comprised of a single asterisk.
.RS 4
\fB\-v\fP オプションを指定すると、\fBhexdump\fP は、入力データをすべて表示するようになる。 \fB\-v\fP
オプションを指定しない場合は、直前の出力行と (入力オフセット以外が) 同じ内容の行は、何行であっても、ただ 1 個のアスタリスクからなる 1
行に置き換えられる。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB\-x\fP, \fB\-\-two\-bytes\-hex\fP
.RE
.sp
\fB\-x\fP, \fB\-\-two\-bytes\-hex\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O \fITwo\-byte hexadecimal display\fP. Display the input offset in hexadecimal, followed by eight space\-separated, four\-column, zero\-filled, two\-byte quantities of input data, in hexadecimal, per line.
.RS 4
\fI2 バイト単位の 16 進数表示\fP。 入力オフセットを 16 進数で表示し、その後に、入力データを 2 バイトずつ 0 で字詰めした 4 桁の 16
進数で表現し、それを 1 行当たり 8 個、空白で区切って表示する。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB\-V\fP, \fB\-\-version\fP
.RE
.sp
\fB\-V\fP, \fB\-\-version\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O Display version information and exit.
.RS 4
バージョン情報を表示して終了する。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB\-h\fP, \fB\-\-help\fP
.RE
.sp
\fB\-h\fP, \fB\-\-help\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O Display help text and exit.
.RS 4
ヘルプを表示して終了する。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O For each input file, \fBhexdump\fP sequentially copies the input to standard output, transforming the data according to the format strings specified by the \fB\-e\fP and \fB\-f\fP options, in the order that they were specified.
.RE
.sp
各入力ファイルに対して、\fBhexdump\fP は、入力を \fB\-e\fP や \fB\-f\fP オプションで指定されたフォーマット文字列に従い、
フォーマット文字列が指定された順序でデータを変換しながら、標準出力に順次書き出していく。
.\"O ----------------------------------------
.\"O .SH "FORMATS"
.\"O .sp
.\"O A format string contains any number of format units, separated by whitespace. A format unit contains up to three items: an iteration count, a byte count, and a format.
.\"O .sp
.\"O The iteration count is an optional positive integer, which defaults to one. Each format is applied iteration count times.
.\"O .sp
.\"O The byte count is an optional positive integer. If specified it defines the number of bytes to be interpreted by each iteration of the format.
.\"O .sp
.\"O If an iteration count and/or a byte count is specified, a single slash must be placed after the iteration count and/or before the byte count to disambiguate them. Any whitespace before or after the slash is ignored.
.\"O .sp
.\"O The format is required and must be surrounded by double quote (" ") marks. It is interpreted as a fprintf\-style format string (see \fBfprintf\fP(3), with the following exceptions:
.\"O .sp
.\"O 1.
.SH フォーマット
.sp
フォーマット文字列は、空白 (またはタブ) で区切られた任意の数のフォーマット単位から構成される。1 つのフォーマット単位は、最大で 3
個の要素、すなわち、繰り返し回数、バイト数、フォーマットを含んでいる。
.sp
繰り返し回数は、省略可能な正の整数であり、 デフォルトは 1 である。 各フォーマットは繰り返し回数だけ適用される。
.sp
バイト数も、指定が任意の正の整数である。これが指定されている場合は、そのフォーマットを 1 回適用するごとに処理するバイト数を示している。
.sp
繰り返し回数やバイト数を指定する場合、どちらの数字か区別できるように、 繰り返し回数の後や、バイト数の前にスラッシュを 1 個置かなければならない。
スラッシュの前後に空白があっても、無視される。
.sp
フォーマットは必須であり、 ダブルクォート (" ") で囲まなければならない。 このフォーマットは、 fprintf 形式のフォーマット文字列
(\fBfprintf\fP(3) を参照) として解釈されるが、 以下のような例外がある。
.sp
1.
.\"O ----------------------------------------
.\"O .RS 4
.\"O An asterisk (*) may not be used as a field width or precision.
.RS 4
フィールドの幅や精度としてアスタリスク (*) を使えない。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O 2.
.RE
.sp
2.
.\"O ----------------------------------------
.\"O .RS 4
.\"O A byte count or field precision \fIis\fP required for each \fBs\fP conversion character (unlike the fprintf3 default which prints the entire string if the precision is unspecified).
.RS 4
変換文字 \fBs\fP のそれぞれについて、バイト数かフィールド精度が必要である。 (その点が、精度が指定されていない場合に全ての文字列を表示する
fprintf3 のデフォルトとは異なる)。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O 3.
.RE
.sp
3.
.\"O ----------------------------------------
.\"O .RS 4
.\"O The conversion characters \fBh\fP, \fBl\fP, \fBn\fP, \fBp\fP, and \fBq\fP are not supported.
.RS 4
変換文字 \fBh\fP, \fBl\fP, \fBn\fP, \fBp\fP, \fBq\fP がサポートされていない。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O 4.
.RE
.sp
4.
.\"O ----------------------------------------
.\"O .RS 4
.\"O The single character escape sequences described in the C standard are supported:
.RS 4
C 言語の規格に書かれている 1 文字のエスケープシーケンスがサポートされている:
.\"O ----------------------------------------
.\"O .RE
.RE
.\"O ----------------------------------------
.\"O .RS 3
.\"O .ll -.6i
.\"O .TS
.\"O allbox tab(:);
.\"O lt lt.
.\"O T{
.\"O .sp
.\"O NULL
.\"O T}:T{
.\"O .sp
.\"O \(rs0
.\"O T}
.\"O T{
.\"O .sp
.\"O <alert character>
.\"O T}:T{
.\"O .sp
.\"O \(rsa
.\"O T}
.\"O T{
.\"O .sp
.\"O <backspace>
.\"O T}:T{
.\"O .sp
.\"O \(rsb
.\"O T}
.\"O T{
.\"O .sp
.\"O <form\-feed>
.\"O T}:T{
.\"O .sp
.\"O \(rsf
.\"O T}
.\"O T{
.\"O .sp
.\"O <newline>
.\"O T}:T{
.\"O .sp
.\"O \(rsn
.\"O T}
.\"O T{
.\"O .sp
.\"O <carriage return>
.\"O T}:T{
.\"O .sp
.\"O \(rsr
.\"O T}
.\"O T{
.\"O .sp
.\"O <tab>
.\"O T}:T{
.\"O .sp
.\"O \(rst
.\"O T}
.\"O T{
.\"O .sp
.\"O <vertical tab>
.\"O T}:T{
.\"O .sp
.\"O \(rsv
.\"O T}
.\"O .TE
.\"O .sp
.\"O .br
.RS 3
.ll -.6i
.TS
allbox tab(:);
lt lt.
T{
.sp
NULL
T}:T{
.sp
\(rs0
T}
T{
.sp
<アラート文字>
T}:T{
.sp
\(rsa
T}
T{
.sp
バックスペース
T}:T{
.sp
\(rsb
T}
T{
.sp
フォームフィード
T}:T{
.sp
\(rsf
T}
T{
.sp
改行
T}:T{
.sp
\(rsn
T}
T{
.sp
復帰
T}:T{
.sp
\(rsr
T}
T{
.sp
タブ
T}:T{
.sp
\(rst
T}
T{
.sp
垂直タブ
T}:T{
.sp
\(rsv
T}
.TE
.sp
.br
.\"O ----------------------------------------
.\"O .RE
.\"O .ll
.RE
.ll
.\"O ----------------------------------------
.\"O .SS "Conversion strings"
.\"O .sp
.\"O The \fBhexdump\fP utility also supports the following additional conversion strings.
.\"O .sp
.\"O \fB_a[dox]\fP
.SS 変換文字列
.sp
\fBhexdump\fP ユーティリティは、さらに以下の変換文字列もサポートしている:
.sp
\fB_a[dox]\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O Display the input offset, cumulative across input files, of the next byte to be displayed. The appended characters \fBd\fP, \fBo\fP, and \fBx\fP specify the display base as decimal, octal or hexadecimal respectively.
.RS 4
次に表示されるバイトの入力オフセット (複数の入力ファイルで通算した値) を表示する。 文字 \fBd\fP, \fBo\fP, \fBx\fP
を後ろに付けると、オフセットの表示がそれぞれ 10, 8, 16 進数になる。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB_A[dox]\fP
.RE
.sp
\fB_A[dox]\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O Identical to the \fB_a\fP conversion string except that it is only performed once, when all of the input data has been processed.
.RS 4
変換文字列 \fB_a\fP とほぼ同じ。 ただし、この変換は全ての入力データが処理された後で 1 回だけ実行される。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB_c\fP
.RE
.sp
\fB_c\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O Output characters in the default character set. Non\-printing characters are displayed in three\-character, zero\-padded octal, except for those representable by standard escape notation (see above), which are displayed as two\-character strings.
.RS 4
デフォルト文字セットの文字で出力する。表示不能な文字は、0 で字詰めした 3 桁の 8 進数で表示される。ただし、標準エスケープ表記で表現できる文字
(上記を参照) は、その 2 文字の文字列で表示される。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB_p\fP
.RE
.sp
\fB_p\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O Output characters in the default character set. Non\-printing characters are displayed as a single \(aq\fB.\fP\(aq.
.RS 4
デフォルト文字セットの文字で出力する。 表示不能な文字は、1 つの \(aq\fB.\fP\(aq として表示される。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB_u\fP
.RE
.sp
\fB_u\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O Output US ASCII characters, with the exception that control characters are displayed using the following, lower\-case, names. Characters greater than 0xff, hexadecimal, are displayed as hexadecimal strings.
.RS 4
US ASCII 文字で出力する。 ただし、制御文字は以下のような小文字の名前を使って表示される。 16 進数で 0xff より大きい文字は、16
進数の文字列として表示される。
.\"O ----------------------------------------
.\"O .RE
.RE
.\"O ----------------------------------------
.\"O .RS 3
.\"O .ll -.6i
.\"O .TS
.\"O allbox tab(:);
.\"O lt lt lt lt lt lt.
.\"O T{
.\"O .sp
.\"O 000 nul
.\"O T}:T{
.\"O .sp
.\"O 001 soh
.\"O T}:T{
.\"O .sp
.\"O 002 stx
.\"O T}:T{
.\"O .sp
.\"O 003 etx
.\"O T}:T{
.\"O .sp
.\"O 004 eot
.\"O T}:T{
.\"O .sp
.\"O 005 enq
.\"O T}
.\"O T{
.\"O .sp
.\"O 006 ack
.\"O T}:T{
.\"O .sp
.\"O 007 bel
.\"O T}:T{
.\"O .sp
.\"O 008 bs
.\"O T}:T{
.\"O .sp
.\"O 009 ht
.\"O T}:T{
.\"O .sp
.\"O 00A lf
.\"O T}:T{
.\"O .sp
.\"O 00B vt
.\"O T}
.\"O T{
.\"O .sp
.\"O 00C ff
.\"O T}:T{
.\"O .sp
.\"O 00D cr
.\"O T}:T{
.\"O .sp
.\"O 00E so
.\"O T}:T{
.\"O .sp
.\"O 00F si
.\"O T}:T{
.\"O .sp
.\"O 010 dle
.\"O T}:T{
.\"O .sp
.\"O 011 dc1
.\"O T}
.\"O T{
.\"O .sp
.\"O 012 dc2
.\"O T}:T{
.\"O .sp
.\"O 013 dc3
.\"O T}:T{
.\"O .sp
.\"O 014 dc4
.\"O T}:T{
.\"O .sp
.\"O 015 nak
.\"O T}:T{
.\"O .sp
.\"O 016 syn
.\"O T}:T{
.\"O .sp
.\"O 017 etb
.\"O T}
.\"O T{
.\"O .sp
.\"O 018 can
.\"O T}:T{
.\"O .sp
.\"O 019 em
.\"O T}:T{
.\"O .sp
.\"O 01A sub
.\"O T}:T{
.\"O .sp
.\"O 01B esc
.\"O T}:T{
.\"O .sp
.\"O 01C fs
.\"O T}:T{
.\"O .sp
.\"O 01D gs
.\"O T}
.\"O T{
.\"O .sp
.\"O 01E rs
.\"O T}:T{
.\"O .sp
.\"O 01F us
.\"O T}:T{
.\"O .sp
.\"O 0FF del
.\"O T}:T{
.\"O .sp
.RS 3
.ll -.6i
.TS
allbox tab(:);
lt lt lt lt lt lt.
T{
.sp
000 nul
T}:T{
.sp
001 soh
T}:T{
.sp
002 stx
T}:T{
.sp
003 etx
T}:T{
.sp
004 eot
T}:T{
.sp
005 enq
T}
T{
.sp
006 ack
T}:T{
.sp
007 bel
T}:T{
.sp
008 bs
T}:T{
.sp
009 ht
T}:T{
.sp
00A lf
T}:T{
.sp
00B vt
T}
T{
.sp
00C ff
T}:T{
.sp
00D cr
T}:T{
.sp
00E so
T}:T{
.sp
00F si
T}:T{
.sp
010 dle
T}:T{
.sp
011 dc1
T}
T{
.sp
012 dc2
T}:T{
.sp
013 dc3
T}:T{
.sp
014 dc4
T}:T{
.sp
015 nak
T}:T{
.sp
016 syn
T}:T{
.sp
017 etb
T}
T{
.sp
018 can
T}:T{
.sp
019 em
T}:T{
.sp
01A sub
T}:T{
.sp
01B esc
T}:T{
.sp
01C fs
T}:T{
.sp
01D gs
T}
T{
.sp
01E rs
T}:T{
.sp
01F us
T}:T{
.sp
0FF del
T}:T{
.sp
.\"O ----------------------------------------
.\"O 
.\"O T}:T{
.\"O .sp

T}:T{
.sp
.\"O ----------------------------------------
.\"O 
.\"O T}:T{
.\"O .sp

T}:T{
.sp
.\"O ----------------------------------------
.\"O 
.\"O T}
.\"O .TE
.\"O .sp
.\"O .br

T}
.TE
.sp
.br
.\"O ----------------------------------------
.\"O .RE
.\"O .ll
.RE
.ll
.\"O ----------------------------------------
.\"O .SS "Colors"
.\"O .sp
.\"O When put at the end of a format specifier, hexdump highlights the respective string with the color specified. Conditions, if present, are evaluated prior to highlighting.
.\"O .sp
.\"O \fB_L[color_unit_1,color_unit_2,...,color_unit_n]\fP
.\"O .sp
.\"O The full syntax of a color unit is as follows:
.\"O .sp
.\"O \fB[!]COLOR[:VALUE][@OFFSET_START[\-END]]\fP
.\"O .sp
.\"O \fB!\fP
.SS カラー指定
.sp
フォーマット指定子の末尾にカラー指定を追加すると、 hexdump は、 対応する文字列を指定された色でハイライトする。
条件が存在する場合は、ハイライトする前に評価される。
.sp
\fB_L[color_unit_1,color_unit_2,...,color_unit_n]\fP
.sp
カラー指定単位 (color unit) の完全な書式は以下のとおりである:
.sp
\fB[!]COLOR[:VALUE][@OFFSET_START[\-END]]\fP
.sp
\fB!\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O Negate the condition. Please note that it only makes sense to negate a unit if both a value/string and an offset are specified. In that case the respective output string will be highlighted if and only if the value/string does not match the one at the offset.
.RS 4
条件を否定する。 注意していただきたいが、あるカラー指定単位について否定することに意味があるのは、
値/文字列と、オフセットの両方を指定したときだけである。 その場合は、値/文字列がそのオフセットにあるものとマッチしなかったときにのみ、
対応する出力文字列がハイライトされることになる。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fBCOLOR\fP
.RE
.sp
\fBCOLOR\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O One of the 8 basic shell colors.
.RS 4
シェルで使われる 8 種の基本色の 1 つ。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fBVALUE\fP
.RE
.sp
\fBVALUE\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O A value to be matched specified in hexadecimal, or octal base, or as a string. Please note that the usual C escape sequences are not interpreted by hexdump inside the color_units.
.RS 4
マッチすべき値。 16 進数、8 進数、または文字列で指定する。 hexdump はカラー指定単位の中では、通常の C
言語のエスケープシーケンスを解釈しないことに注意していただきたい。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fBOFFSET\fP
.RE
.sp
\fBOFFSET\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O An offset or an offset range at which to check for a match. Please note that lone OFFSET_START uses the same value as END offset.
.RS 4
マッチするか否かをチェックするオフセット、またはオフセットの範囲。 OFFSET_START だけ指定すると、 END
オフセットが同じ値になることに注意していただきたい。
.\"O ----------------------------------------
.\"O .RE
.RE
.\"O ----------------------------------------
.\"O .SS "Counters"
.\"O .sp
.\"O The default and supported byte counts for the conversion characters are as follows:
.\"O .sp
.\"O \fB%_c\fP, \fB%_p\fP, \fB%_u\fP, \fB%c\fP
.SS 処理されるバイト数
.sp
変換文字で使われるデフォルトのバイト数とサポートされるバイト数は、以下の通りである。
.sp
\fB%_c\fP, \fB%_p\fP, \fB%_u\fP, \fB%c\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O One byte counts only.
.RS 4
1 バイトのみ。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB%d\fP, \fB%i\fP, \fB%o\fP, \fB%u\fP, \fB%X\fP, \fB%x\fP
.RE
.sp
\fB%d\fP, \fB%i\fP, \fB%o\fP, \fB%u\fP, \fB%X\fP, \fB%x\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O Four byte default, one, two and four byte counts supported.
.RS 4
4 バイトがデフォルト。 1, 2, 4 バイトがサポートされている。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O \fB%E\fP, \fB%e\fP, \fB%f\fP, \fB%G\fP, \fB%g\fP
.RE
.sp
\fB%E\fP, \fB%e\fP, \fB%f\fP, \fB%G\fP, \fB%g\fP
.\"O ----------------------------------------
.\"O .RS 4
.\"O Eight byte default, four byte counts supported.
.RS 4
8 バイトがデフォルト。 4 バイトがサポートされている。
.\"O ----------------------------------------
.\"O .RE
.\"O .sp
.\"O The amount of data interpreted by each format string is the sum of the data required by each format unit, which is the iteration count times the byte count, or the iteration count times the number of bytes required by the format if the byte count is not specified.
.\"O .sp
.\"O The input is manipulated in \fIblocks\fP, where a block is defined as the largest amount of data specified by any format string. Format strings interpreting less than an input block\(cqs worth of data, whose last format unit both interprets some number of bytes and does not have a specified iteration count, have the iteration count incremented until the entire input block has been processed or there is not enough data remaining in the block to satisfy the format string.
.\"O .sp
.\"O If, either as a result of user specification or \fBhexdump\fP modifying the iteration count as described above, an iteration count is greater than one, no trailing whitespace characters are output during the last iteration.
.\"O .sp
.\"O It is an error to specify a byte count as well as multiple conversion characters or strings unless all but one of the conversion characters or strings is \fB_a\fP or \fB_A\fP.
.\"O .sp
.\"O If, as a result of the specification of the \fB\-n\fP option or end\-of\-file being reached, input data only partially satisfies a format string, the input block is zero\-padded sufficiently to display all available data (i.e., any format units overlapping the end of data will display some number of the zero bytes).
.\"O .sp
.\"O Further output by such format strings is replaced by an equivalent number of spaces. An equivalent number of spaces is defined as the number of spaces output by an \fBs\fP conversion character with the same field width and precision as the original conversion character or conversion string but with any \(aq\fB+\fP\(aq, \(aq \(aq, \(aq\fB#\fP\(aq conversion flag characters removed, and referencing a NULL string.
.\"O .sp
.\"O If no format strings are specified, the default display is very similar to the \fB\-x\fP output format (the \fB\-x\fP option causes more space to be used between format units than in the default output).
.RE
.sp
各フォーマット文字列によって解釈・変換されるデータの量は、 各フォーマット単位が要求するデータの合計である。
各フォーマット単位が要求するデータは、(繰り返し回数) x (バイト数) である。 バイト数が指定されていない場合は、 (繰り返し回数) x
(そのフォーマットが要求するバイト数) になる。
.sp
入力は \fIブロック\fP 単位で処理される。ここで言うブロックとは、 フォーマット文字列のいずれかによって指定されるデータの量のうちで、
最大のもののことである 入力ブロック 1 個分のデータより少ないバイト数しか解釈しないフォーマット文字列については、
\fIその最後のフォーマット単位\fPが、何バイトかを解釈、変換するものであり、 しかも繰り返し回数が\fI指定されていない\fPならば、
その繰り返し回数を増加させて、入力ブロック全体の処理が済むか、
あるいは、フォーマット文字列の要求を満たすだけのデータがブロックになくなるまで、処理を続ける。
.sp
ユーザーの指定によって、あるいは、上述のように \fBhexdump\fP が繰り返し回数を変更していることによって、繰り返し回数が 2
回以上になっている場合は、 最後の繰り返しにおける末尾の空白は出力されない。
.sp
フォーマット単位で、バイト数とともに複数の変換文字や変換文字列を指定するのは誤用である。 ただし、変換文字や変換文字列の 1 つ以外のすべてが、
\fB_a\fP や \fB_A\fP であるときは、問題がない。
.sp
\fB\-n\fP オプションを指定したり、ファイルの終わりに達したために、 入力データがフォーマット文字列の一部しか満たさなかった場合、
その入力ブロックには、利用できるすべてのデータを表示するのに足りるだけのゼロバイト (ASCII NUL) が補われる
(換言すると、フォーマット単位が、データの末尾からはみ出している場合、 そのフォーマット単位は、いくつかのゼロバイトを表示することになる)。
.sp
そうしたフォーマット文字列による追加の出力は、相当する数の空白で置き換えられる。 相当する数の空白というのは、\fBs\fP
変換文字が、実際に指定されている変換文字や変換文字列と同じフィールド幅と精度を持ち、 \(aq\fB+\fP\(aq, \\(aq \\(aq,
\(aq\fB#\fP\(aq といった変換フラグが付いていれば、それを取り除いたときに、 NULL 文字列に対して出力する数の空白のことである。
.sp
フォーマット文字列が指定されていない場合、デフォルトの表示は、\fB\-x\fP オプションの出力形式とよく似たものになる (ただし、\fB\-x\fP
オプションを付けた方が、フォーマット単位間のスペースがデフォルトの出力より広くなる)。
.\"O ----------------------------------------
.\"O .SH "EXIT STATUS"
.\"O .sp
.\"O \fBhexdump\fP exits 0 on success and > 0 if an error occurred.
.SH 終了ステータス
.sp
\fBhexdump\fP は成功すると 0 を返して終了する。 エラーが起きた場合は、1 以上を返して終了する。
.\"O ----------------------------------------
.\"O .SH "CONFORMING TO"
.\"O .sp
.\"O The \fBhexdump\fP utility is expected to be IEEE Std 1003.2 ("POSIX.2") compatible.
.SH 準拠
.sp
\fBhexdump\fP ユーティリティは IEEE Std 1003.2 ("POSIX.2") に適合しているはずである。
.\"O ----------------------------------------
.\"O .SH "EXAMPLES"
.\"O .sp
.\"O Display the input in perusal format:
.\"O .sp
.\"O .if n .RS 4
.\"O .nf
.\"O .fam C
.\"O    "%06.6_ao "  12/1 "%3_u "
.\"O    "\(rst" "%_p "
.\"O    "\(rsn"
.\"O .fam
.\"O .fi
.\"O .if n .RE
.\"O .sp
.\"O Implement the \fB\-x\fP option:
.\"O .sp
.\"O .if n .RS 4
.\"O .nf
.\"O .fam C
.\"O    "%07.7_Ax\(rsn"
.\"O    "%07.7_ax  " 8/2 "%04x " "\(rsn"
.\"O .fam
.\"O .fi
.\"O .if n .RE
.\"O .sp
.\"O MBR Boot Signature example: Highlight the addresses cyan and the bytes at offsets 510 and 511 green if their value is 0xAA55, red otherwise.
.\"O .sp
.\"O .if n .RS 4
.\"O .nf
.\"O .fam C
.\"O    "%07.7_Ax_L[cyan]\(rsn"
.\"O    "%07.7_ax_L[cyan]  " 8/2 "   %04x_L[green:0xAA55@510\-511,!red:0xAA55@510\-511] " "\(rsn"
.\"O .fam
.\"O .fi
.\"O .if n .RE
.SH 例
.sp
入力を「ためつすがめつ見直し」フォーマットで表示する:
.sp
.if  n .RS 4
.nf
.fam C
   "%06.6_ao "  12/1 "%3_u "
   "\(rst" "%_p "
   "\(rsn"
.fam
.fi
.if  n .RE
.sp
\fB\-x\fP オプションを実装する:
.sp
.if  n .RS 4
.nf
.fam C
   "%07.7_Ax\(rsn"
   "%07.7_ax  " 8/2 "%04x " "\(rsn"
.fam
.fi
.if  n .RE
.sp
MBR ブートシグネチャの例: アドレスをシアンで、オフセット 510 と 511 にあるバイトの値が 0xAA55
の場合は緑、その他の場合は赤でハイライトする。
.sp
.if  n .RS 4
.nf
.fam C
   "%07.7_Ax_L[cyan]\(rsn"
   "%07.7_ax_L[cyan]  " 8/2 "   %04x_L[green:0xAA55@510\-511,!red:0xAA55@510\-511] " "\(rsn"
.fam
.fi
.if  n .RE
.\"O ----------------------------------------
.\"O .SH "COLORS"
.\"O .sp
.\"O Implicit coloring can be disabled by an empty file \fI/etc/terminal\-colors.d/hexdump.disable\fP.
.\"O .sp
.\"O See \fBterminal\-colors.d\fP(5) for more details about colorization configuration.
.SH カラー表示
.sp
空ファイル \fI/etc/terminal\-colors.d/hexdump.disable\fP を置くことで、暗黙のカラー表示を無効化できる。
.sp
カラー設定の詳細は \fBterminal\-colors.d\fP(5) を参照のこと。
.\"O ----------------------------------------
.\"O .SH "REPORTING BUGS"
.\"O .sp
.\"O For bug reports, use the issue tracker at \c
.\"O .URL "https://github.com/karelzak/util\-linux/issues" "" "."
.SH バグ報告
.sp
バグ報告は、 以下にある issue トラッカーを利用すること。
.URL https://github.com/karelzak/util\-linux/issues "" .
.\"O ----------------------------------------
.\"O .SH "AVAILABILITY"
.\"O .sp
.\"O The \fBhexdump\fP command is part of the util\-linux package which can be downloaded from \c
.\"O .URL "https://www.kernel.org/pub/linux/utils/util\-linux/" "Linux Kernel Archive" "."
.SH 入手方法
.sp
\fBhexdump\fP コマンドは util\-linux パッケージの一部であり、 以下からダウンロードできる。
.URL https://www.kernel.org/pub/linux/utils/util\-linux/ "Linux Kernel Archive" .
.\"O ----------------------------------------
