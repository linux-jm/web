.\" Copyright (c) 1985, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     from: @(#)ping.8	6.7 (Berkeley) 3/16/91
.\"	$Id: ping.8,v 1.1.1.1 2000/10/19 08:22:16 ysato Exp $
.\"
.\" Japanese version copyright (c) 1999 Tatsuo SEKINE <tsekine@isoternet.org>
.\"	all rights reserved
.\"
.\" Translated on Tue Dec 07 16:28:28 JST 1999
.\"	by Tatsuo SEKINE <tsekine@isoternet.org>
.\" Updated Sun Jan 14 20:51:42 JST 2001
.\"	by Yuichi SATO <sato@complex.eng.hokudai.ac.jp>
.\"
.\"WORD: Time To Live	寿命時間
.\"WORD: round-trip	往復
.\"WORD: path	経路
.\"WORD: Berkeley Unix System	BSD Unix システム
.\"
.Dd August 30, 1996
.Dt PING 8
.Os "Linux NetKit (0.17)"
.Sh 名前
.Nm ping
.Nd
.Tn ICMP ECHO_REQUEST
パケットをネットワーク上のホストに送る
.Sh 書式
.Nm ping
.Op Fl LRdfnqrv
.Op Fl c Ar count
.Op Fl i Ar wait
.Op Fl l Ar preload
.Op Fl p Ar pattern
.Op Fl s Ar packetsize
.Op Fl t Ar ttl
.Op Fl w Ar waittime
.Op Fl I Ar interface address
.Sh 説明
.Nm ping
は
.Tn ICMP
の
.Tn ECHO_REQUEST
データグラムを用いて、指定したホストやゲートウェイからの
.Tn ICMP ECHO_RESPONSE
を引き出す。
.Tn ECHO_REQUEST
データグラム (``pings'') は IP と
.Tn ICMP
ヘッダを持ち、それに
.Dq struct timeval
が続き、そして、パケットの残りを埋めるために任意個の ``pad'' バイトがある。
オプションは以下の通り:
その他のオプションは:
.Bl -tag -width Ds
.It Fl c Ar count
.Ar count
個のパケットを送った (そしてその応答を受け取った) 後、停止する。
パケットが送られた後、
.Nm ping
は応答を受け取るまで 10 秒間待ち、終了する。
.It Fl d
使用するソケットに
.Dv SO_DEBUG
オプションを設定する。
.It Fl f
flood ping (ping の洪水)。パケットが戻ってくるとすぐ、
もしくは、1 秒間に 100 回の、いずれか多い回数だけパケットを送る。
.Tn ECHO_REQUEST
が送られるたびにピリオド ``.'' が表示され、
.Tn ECHO_REPLY
を受け取るごとに、バックスペースが表示される
(訳注: すなわち ``.'' が消去される)。
これにより、どのくらいのパケットが取りこぼされるかを、
すばやく表示することができる。スーパーユーザーだけがこのオプションを使える。
.Bf -emphasis
これは、ネットワークに非常に負荷をかけるので、注意して使うべきである。
.Ef
.It Fl i Ar wait
個々のパケットの間に
.Ar wait
秒待つ。
デフォルトでは、個々のパケットの間に 1 秒待つ。このオプションは
.Fl f
オプションとは同時に指定できない。
.It Fl l Ar preload
指定した
.Ar preload
の値だけ
.Tn ECHO_REQUEST
パケットを出来るだけ速く送信し、通常の動作に戻る。
スーパーユーザーだけがこのオプションを使用できる。
.It Fl n
数値出力のみ。
ホストのアドレスから、ホスト名の検索を試みない。
.It Fl p Ar pattern
送出するパケットを埋めるための 16 個までの ``pad'' バイトを指定できる。
これはネットワークでの、データに依存した問題の診断に有用である。
たとえば
.Dq Li \-p ff
は全て 1 で埋められたパケットを送る。
.It Fl q
静かな出力。
開始と終了時の要約以外は、何も表示しない。
.It Fl R
経路を記録。
.Tn ECHO_REQUEST
パケットに
.Tn RECORD_ROUTE
オプションを設定し、返ってきたパケットの経路バッファ
(route buffer) を表示する。
IP ヘッダは 9 つの経路分の大きさしかないことに注意せよ。
また、多くのホストはこのオプションを無視するか、破棄してしまう。
.It Fl r
通常のルーティングを無視し、接続されたネットワークのホストに直接送る。
もし、ホストが直に接続されたネットワークになければ、エラーが返る。
経路情報を持たないインタフェースを通して、
ローカルなホストへと ping するのに使われる。(例えば、インタフェースが
.Xr routed 8
に落された場合)。
.It Fl s Ar packetsize
何バイトのデータが送られるかを指定する。デフォルトは 56 で、
.Tn ICMP
ヘッダの 8 バイトを加えて、
64 バイトの
.Tn ICMP
データになる。
スーパーユーザーだけがこのオプションを使用できる。
.It Fl v
詳細な出力。
受け取った
.Tn ECHO_RESPONSE
以外の
.Tn ICMP
パケットを表示する。
.It Fl w Ar waittime
どのような場合でも関係なく、
.Nm ping
を
.Ar waittime
秒後に終了させる。
.El
.Pp
以下のオプションに関する記述は、
.Nm
のソース、ならびに FreeBSD の man ページを参考に
日本語訳に際して追加された。
.Bl -tag -width indent
.It Fl I Ar interface
与えられたインタフェースから、マルチキャストパケットを送る。
.It Fl L
マルチキャストパケットのループバックを抑制する。
.It Fl t Ar ttl
マルチキャストパケットの IP 寿命時間 (Time To Live) を設定する。
.El
.Pp
問題の切り分けのために
.Nm ping
を用いる場合、そのネットワークインタフェースが up かつ running である
ことを確認するために、まずローカルホスト上で実行するべきである。
その後により遠くのホストやゲートウェイに
.Dq ping
する。
往復時間 (round-trip time) と消失パケットの統計が計算される。
重複した応答メッセージを受け取った場合、
それらはパケットの損失の計算には使われないが、
それにもかかわらずそうしたパケットの往復時間は、
その最小値・平均値・最大値の計算に用いられる。
指定した数のパケットが送られた (そしてその応答を受け取った) か、プログラムが
.Dv SIGINT
で終了させられた場合は、簡単な要約が表示される。
.Pp
もし
.Nm ping
が全く応答パケットを受け取らなかった場合には、終了コード 1 で終了する。
エラーがあればコード 2 で終了する。それ以外の場合はコード 0 で終了する。
これにより、終了コードで、あるホストが動いているかどうかを判断すること
ができる。
.Pp
このプログラムはネットワークのテスト・計測・管理についての使用を意図している。
このプログラムがネットワークに強いる負荷を考えれば、
.Nm ping
をトラブルのないときや自動スクリプトから実行することは奨められない。
.Sh ICMP パケットの詳細
オプションなしの IP ヘッダは 20 バイトである。
.Tn ICMP
.Tn ECHO_REQUEST
パケットは、さらなる 8 バイトの
.Tn ICMP
ヘッダとそれに続く任意の量のデータからなる。
.Ar packetsize
が与えられた時には、それは付加的なデータ部分のサイズ (デフォルトは 56) を示す。
よって
.Tn ICMP
.Tn ECHO_REPLY
パケットの IP パケット内で受け取るデータの量は、
要求されたデータ領域より 8 バイト
.Ns ( Tn ICMP
ヘッダの分) 多い。
.Pp
もしデータ領域が 8 バイトよりも大きければ、
.Nm ping
はその領域の先頭 8 バイトを、往復時間を計算するのに使うタイムスタンプを
含めるために使用する。
もし 8 バイトよりも少なければ、往復時間は得られない。
.Sh 重複パケットと障害パケット
.Nm ping
は、重複パケットと障害パケットについて報告する。
重複パケットは (ユニキャストアドレスに対しては) 起きるはずはないが、
不適切なリンク層での再送によって引き起こされるように思われる。
重複は様々な状況で起こる可能性がある。低いレベルの重複の存在は
必ずしも警告にはならないかもしれないが、よい兆候ではない。
.Pp
障害を受けたパケットは、明らかに深刻な警告であり、多くの場合
.Nm ping
パケットの経路上 (ネットワーク内、もしくはそのホスト内) のどこかに
壊れたハードウェアがあることを示す。
.Sh 異なるデータパターンの試行
(インター) ネットワーク層は、決してデータ部分に含まれるデータによって
パケットの扱いを変えたりしない。
不幸にも、データに依存した問題がネットワークへと侵入し、
長い時間発見されないままとなってしまう可能性が知られている。
問題のあるパケットの特定のパターンは多くの場合、
全てが 0 または全てが 1 のようなもの、
あるいは右端以外が殆んど 0 のような、
十分な ``遷移 (transitions)'' を持たないものである。
コマンドラインで (例えば) 全て 0 というデータパターンを指定することは、
必ずしも十分ではない。
なぜならば、その関心のあるのはデータリンク層におけるパターンであり、
あなたが入力したものと、コントローラーが送信するものとの関係は
複雑だからである。
.Pp
これは、もしあなたがデータ依存性の問題を抱えているなら、
それを発見するためには
何回ものテストをしなければならないかもしれないことを意味する。
もし運が良ければ、ネットワークを通して送ることのできないファイルか、
同じような長さのファイルより、転送にずっと時間のかかるファイルを
発見することができるかもしれない。
そうしたら、そのファイルを調べ繰り返し現われるパターンを
.Nm ping
の
.Fl p
オプションを使ってテストできる。
.Sh TTL の詳細
IP パケットの
.Tn TTL
という値は、パケットが破棄される前に通過することができる
IP ルータの最大値を示す。
現在の慣例から、インターネットの各ルータは
.Tn TTL
フィールドを正確に 1 減らすことを期待できる。
.Pp
.Tn TCP/IP
規格は、
.Tn TCP
パケットの
.Tn TTL
フィールドは 60 に設定されるべきであるとしているが、多くのシステムは
もっと小さな値を使用している (4.3
.Tn BSD
は 30、4.2 は 15)。
.Pp
このフィールドの設定可能な最大値は 255 で、殆んどの Unix システムは
.Tn ICMP ECHO_REQUEST
の
.Tn TTL
フィールドを 255 に設定している。
これは、あるホストでは ``ping'' が通るのに、
.Xr telnet 1
や
.Xr ftp 1
ではそのホストに届かない理由 (の一つ) である。
.Pp
ping の通常の操作では、受け取ったパケットの ttl の値が表示される。
リモートのシステムが ping パケットを受け取った時、その応答における
.Tn TTL
フィールドには以下の 3 つのうちの 1 つを取ることができる。
.Bl -bullet
.It
変更しない; これは
.Bx 4.3 tahoe
リリース以前の BSD Unix システムが行っていたものである。
この場合、受け取ったパケットの
.Tn TTL
の値は、255 から往復経路上のルータの数を引いたものになる。
.It
255 にセットする; これは現在の BSD Unix が行っているものである。
(訳注: Linux もこれにあたる)。
この場合、受け取るパケットの
.Tn TTL
の値は、リモートシステム
.Xr から
.Nm ping
を行ったホストへの経路上のルータの数を、255 から引いたものである。
.It
その他の値にセットする。いくつかのマシンは、例えば 30 または 60 のような
.Tn TCP
パケットの値と同じものを
.Tn ICMP
パケットに用いる。また全く異なる値を用いるマシンもあるかも知れない。
.El
.Sh バグ
多くのホストとゲートウェイは
.Tn RECORD_ROUTE
オプションを無視する。
.Pp
.Tn RECORD_ROUTE
を完全に有効にするには、IP ヘッダの最大長は短過ぎる。
しかし、これについてできることは多くない。
.Pp
flood ping は一般的には推奨されないし、ブロードキャストアドレスへの
flood ping は、きちんと条件を整えた場合においてのみ使用されるべきである。
.Pp
日本語訳に際し、いくつかのオプションに関する記述を加えたが、正しいかど
うか分からない。
.Sh 関連項目
.Xr netstat 1 ,
.Xr ifconfig 8
.Sh 履歴
.Nm
コマンドは
.Bx 4.3
から登場した。
