.\" Copyright (c) 1995, 1996 Free Software Foundation              -*-Text-*-
.\" See section COPYING for conditions for redistribution
.\" FIXME: no info here on predefines.  Should there be?  extra for F77...
.\"
.\" Japanese Version Copyright (c) 1997 Kazuyoshi Furutaka &
.\"                                     Masaharu Tanabashi
.\"         all rights reserved.
.\" Translated Fri Feb 14 22:50:00 JST 1997
.\"         by Kazuyoshi Furutaka <furutaka@Flux.tokai.jaeri.go.jp> &
.\"            Masaharu Tanabashi <tanabash@tuhep.phys.tohoku.ac.jp>
.\"
.TH G77 1 "1996-03-01" "GNU Tools" "GNU Tools"
.de BP
.sp
.ti \-.2i
\(**
..
.SH 名前
g77 \- GNU プロジェクトの F77 コンパイラ (v0.5.18)
.SH 書式
.RB g77 " [" \c
.IR option " | " "filename " ].\|.\|.
.SH 警告
このman pageに含まれている情報はGNU Fortranコンパイラの完全な文書
からの抜粋であり、オプションの意味のみに限定したものである。
.PP
このman pageはボランティアが維持したいと考えたとき以外は最新には保たれて
いない。
man pageとソフトウエアとの間に差異が認められた場合は、
Infoファイルを参照してほしい。Infoファイルは正式な文書である。
.PP
このman page中の古い記述が著しい混乱や不満を引き起こすと我々が判断した場
合は、このman pageの配布を中止する。 
GNU Fortranの他の維持作業に時間を取られるので、この逆のこと、
つまり、Infoファイルを更新するのにあわせてman pageも更新する
ことは実際的でない。
man pageは旧式のものであり、man pageの維持によって他の
仕事に費やす時間を減らすべきではないとGNUプロジェクトでは考えている。
.PP
完全で最新の文書としては、Infoファイル`\|\c
.B g77\c
\&\|' 若しくはマニュアル
.I
Using and Porting GNU Fortran (for version 0.5.18)\c
 \- GNU Fortran の使用と移植(バージョン0.5.18) \-
を参照のこと。両者ともTexinfoのソースファイル
.BR g77.texi 
から作成される。
.PP
使用しているシステムに `\|\c
.B info\c
\&\|' コマンドがインストールされていれば、
.B g77
が正しくインストールされていない場合以外は
コマンド `\|\c
.B info g77\c
\&\|' が機能するはずである。
使用しているシステムに `\|\c
.B info\c
\&\|' が備わっていないか、若しくはさしあたってその使用を避けたい場合は、
.B g77
が正しくインストールされていない場合以外は
コマンド `\|\c
.B more /usr/info/g77.info*\c
\&\|' が機能するはずである。
.PP
もし
.B g77
が正しくインストールされておらず
Infoファイルに容易にアクセス出来ない場合は、
システム管理者、若しくは
(もし誰だか知っている場合には)
.B g77
のインストールを行った者に問題の修正を依頼すること。 
.SH 説明
CコンパイラとF77コンパイラは統合されている。
つまり、
.B g77
は
.B F77を認識させるためのオプションを付けてgccを起動する
ためのプログラムである。
.B gcc
は４つの段階、つまり、
前処理、コンパイル、アセンブル及びリンクの各段階
のうちのひとつまたはそれ以上の段階を通して入力ファイルを処理する。
このman pageは、いくつかの一般的なオプションの要約をも含んではいるが、
F77に特有の側面について
.I のみ
詳細な記述がなされている。
このコンパイラのより詳しい説明は
.BR gcc ( 1 )
を参照のこと。

GNU Fortranの完全な文書を読むには
.BR info g77
と入力せよ。

F77のソースファイルには接尾辞 `\|\c
.B .f\c
\&\|'を用いる。
.BR cpp ( 1 )
によって前処理を施されるF77ファイルには
接尾辞`\|\c
.B .F\c
\&\|'を用いる。
.SH オプション
多くのコマンドラインオプションがあり、その中には
最適化や警告、コード生成を詳細に制御するものが含まれている。
これらのオプションは
.B gcc
及び
.B g77\c
に共通である。
全てのオプションについて完全な情報を得るには
.BR gcc ( 1 )
を参照せよ。

個々のオプションは分離されていなくてはならない。 
つまり、`\|\c
.B \-dr\c
\&\|' は `\|\c
.B \-d \-r
\&\|' とは全く異なったものである。

たいていの `\|\c
.B \-f\c
\&\|' 及び `\|\c
.B \-W\c
\&\|' オプションには、例えば
.BI \-f name
と
.BI \-fno\- name\c
\& (あるいは
.BI \-W name
と
.BI \-Wno\- name\c
\&)のような、ふたつの逆の書式がある。
ここではディフォルトではない方の書式のみを示す。

.TP
.B \-c
ソースファイルをコンパイルまたはアセンブルするが、リンクは行わない。
コンパイラの出力は個々のソースファイルに対するオブジェクトファイルである。
.TP
.BI \-D macro
マクロ \c
.I macro\c
を、その値を文字列`\|\c
.B 1\c
\&\|'として定義する。
.TP
.BI \-D macro = defn
マクロ\c
.I macro\c
\& の値を \c
.I defn\c
\& と定義する。
.TP
.BI \-\-driver= command
.RB ` g77 '
に
.RB ` gcc '
の代わりに
.IR command
を起動して仕事をさせるように指示する。
例: GNU Fortran を作成した後の(しかしインストールを行なっている必要はない)
gcc作成ディレクトリ内で、
.nf
  ./g77 \-\-driver=./xgcc -B./ foo.f
.fi
.TP
.B \-E
前処理段階終了後停止し、本来の意味でのコンパイラは起動しない。
この出力は前処理が行われたソースコードであり、これは標準出力に送られる。
.TP
.B \-g
オペレーティングシステム固有の形式で(DBX又はSDBまたはDWARF用に)
デバッグ用の情報を生成する。
GDBもまたこのデバッグ用情報を用いることが出来る。
DBX形式を用いる大抵のシステムでは、`\|\c
.B \-g\c\
\&\|' 
オプションを指定するとGDBのみが用いることが出来る特別なデバッグ情報が
使用可能となる。

他のほとんどのFortranコンパイラとは異なり、GNU Fortranは `\|\c
.B \-g\c
\&\|' を
`\|\c
.B \-O\c
\&\|' と同時に用いることが出来る。
最適化されたコードのとる近道の実行経路は時折驚くべきものとなるかもしれない。
つまり、
宣言した変数が全く存在しないかも知れないし、
制御の流れが予期もせぬところに一時的に移動してしまうかも知れない。
あるいは、計算結果が定数であったり既に値が得られていたりするために
全く実行されない文があるかも知れないし、
ループから外に取り出されたために異なった場所で実行される文もあるかも知
れない。 

しかしながら、最適化された出力コードのデバッグは可能である
ことが判明している。
バグのある可能性のあるプログラムに最適化を行うことは合理的なことである。
.\" <--
.TP
.BI "\-I" "dir"\c
\&
ディレクトリ \c
.I dir\c
\& をインクルードファイルを探索するディレクトリのリストに追加する。
.TP
.BI "\-L" "dir"\c
\&
ディレクトリ \c
.I dir \c
\& を
`\|\c
.B \-l\c
\&\|' の探索ディレクトリのリストに追加する。
.TP
.BI \-l library\c
\&
リンク時に \c
.I library\c
\& という名前のライブラリを用いる。
.TP
.B \-nostdinc
ヘッダーファイルを通常のシステムディレクトリからは探索しない。
.B \-I
オプションで指定したディレクトリ(及び、適切ならばカレントディレクトリ)
のみを探索する。
.TP
.B \-O
最適化を行う。
最適化を施したコンパイルには幾分か時間が余計にかかるとともに、
大きな関数に対しては多くのメモリを余分に消費する。
より詳細な最適化オプションについてはGCCドキュメンテーションを参照せよ。
特にループの展開(loop unrolling)の項目は、典型的なFortran数値計算プログ
ラムにとって調べて見る価値があるだろう。 
.TP
.BI "\-o " file\c
\&
出力を \c
.I file \c
\& という名のファイルに保存する。
.TP
.B \-S
本来の意味でのコンパイルの段階の後で停止する。アセンブルは行わない。
出力は指定した各非アセンブラ入力ファイルに対するアセンブラコードファイル
である。
.TP
.BI \-U macro
マクロ \c
.I macro\c
\& を未定義にする。
.TP
.B \-v
各コンパイル段階を実行するためのコマンドを(標準エラー出力に)表示する。
また、コンパイラドライバプログラム及び前処理プログラム及びコンパイラ本体
のバージョン番号を出力する。
g77自身のバージョン番号と、それが基づいているGCC配布物の
バージョン番号は別のものである。
.RB ` gcc '
の実際の起動を行なわせないためには、(
.RB ` true '
は単に成功の状態変数を返すだけのUNIXコマンドの名前であるから)
.RB ` \-\-driver=true '
を用いる。
コマンド
.RB ` "gcc -v" '
はg77及びGCCのバージョン番号をはっきりさせるのに適切なコマンドである。
ただし、このコマンドは
.RB ` ld '
からの無関係なエラーメッセージを表示するだろう。
.TP
.B \-Wall
マクロに関連したものを含めて、避けるべきであると推奨され且つ、
簡単に避けることが出来ると考えられる用いられ方がなされた際に、警告を発する。
.PP

.SH ファイル
.ta \w'LIBDIR/g77\-include 'u
file.h    C ヘッダー (前処理プログラム) ファイル
.br
file.f    Fortran ソースファイル
.br
file.for  Fortran ソースファイル
.br
file.F    前処理されるFortranソースファイル
.br
file.fpp  前処理されるFortranソースファイル
.br
file.s    アセンブリ言語ファイル
.br
file.o    オブジェクトファイル
.br
a.out     リンク編集後の出力
.br
\fITMPDIR\fR/cc\(**	テンポラリファイル
.br
\fILIBDIR\fR/cpp	前処理プログラム
.br
\fILIBDIR\fR/f771	コンパイラ
.br
\fILIBDIR\fR/libf2c.a	Fortranランタイムライブラリ
.br
\fILIBDIR\fR/libgcc.a	GCCサブルーチンライブラリ
.br
/lib/crt[01n].o	スタートアップルーチン
.br
/lib/libc.a	標準Cライブラリ、
.IR intro (3)
を参照。
.br
/usr/include	
.B #include
ファイルの標準ディレクトリ
.br
\fILIBDIR\fR/include	gccの
.B #include
ファイルの標準ディレクトリ
.I LIBDIR
は通常
.B /usr/local/lib/\c
.IR machine / version
である。
.br
.I TMPDIR
は通常は環境変数
.B TMPDIR
によって決められている
(ディフォルトは
.B /usr/tmp
が使用可能であればこのディレクトリ、そうでなければ
.B /tmp\c
\&)。
.SH "関連項目"
.\" <--
gcc(1), cpp(1), as(1), ld(1), gdb(1), adb(1), dbx(1), sdb(1).
.br
.B info\c
ファイルの
.RB "`\|" g77 "\|', `\|" gcc "\|', `\|" cpp \|',
.RB `\| as \|', `\| ld \|',
及び
.RB `\| gdb \|'
エントリ。
.br
.I
Using and Porting GNU Fortran (for version 0.5.18)\c
 \- GNU Fortranの使用と移植 (バージョン0.5.18用) \-\c
, James Craig Burley;
.I
Using and Porting GNU CC (for version 2.0)\c
 \- GNU CCの使用と移植 (バージョン2.0用) \-\c
, Richard M. Stallman;
.I
The C Preprocessor\c
 \- C 前処理プログラム \-\c
, Richard M. Stallman;
.I
Debugging with GDB: the GNU Source-Level Debugger\c
 \- GDBを用いたデバッグ: GNUソースレベルデバッガ \-\c
, Richard M. Stallman and Roland H. Pesch;
.I
Using as: the GNU Assembler\c
 \- asの使用法: GNUアセンブラ \-\c
, Dean Elsner, Jay Fenlason & friends;
.I
gld: the GNU linker\c
 \- gld: GNU リンカ \-\c
.\" <--
, Steve Chamberlain and Roland Pesch.

.SH バグ
バグの報告の仕方に関する説明は、g77配布物中の
.B DOC
ファイルを参照せよ。

.SH 著作権
Copyright (c) 1991, 1992, 1993, 1994, 1995, 1996 Free Software Foundation, Inc.
.PP
Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.
.PP
Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the
entire resulting derived work is distributed under the terms of a
permission notice identical to this one.
.PP
Permission is granted to copy and distribute translations of this
manual into another language, under the above conditions for modified
versions, except that this permission notice may be included in
translations approved by the Free Software Foundation instead of in
the original English.
.SH 著者
GNU CCのコントリビュータに関してはGNU CCのマニュアルを参照のこと。
GNU Fortranのコントリビュータに関してはGNU Fortranのマニュアルを参照のこと。

.SH 翻訳者
古高和禎 <furutaka@Flux.tokai.jaeri.go.jp>
.br
棚橋誠治 <tanabash@tuhep.phys.tohoku.ac.jp>

