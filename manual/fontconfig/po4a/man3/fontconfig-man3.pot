# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-04-02 14:02+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#: original/man3/FcAtomicCreate.3:6
#, no-wrap
msgid "FcAtomicCreate"
msgstr ""

#. type: TH
#: original/man3/FcAtomicCreate.3:6 original/man3/FcAtomicDeleteNew.3:6
#: original/man3/FcAtomicDestroy.3:6 original/man3/FcAtomicLock.3:6
#: original/man3/FcAtomicNewFile.3:6 original/man3/FcAtomicOrigFile.3:6
#: original/man3/FcAtomicReplaceOrig.3:6 original/man3/FcAtomicUnlock.3:6
#: original/man3/FcBlanksAdd.3:6 original/man3/FcBlanksCreate.3:6
#: original/man3/FcBlanksDestroy.3:6 original/man3/FcBlanksIsMember.3:6
#: original/man3/FcCacheCopySet.3:6 original/man3/FcCacheCreateTagFile.3:6
#: original/man3/FcCacheDir.3:6 original/man3/FcCacheNumFont.3:6
#: original/man3/FcCacheNumSubdir.3:6 original/man3/FcCacheSubdir.3:6
#: original/man3/FcCharSetAddChar.3:6 original/man3/FcCharSetCopy.3:6
#: original/man3/FcCharSetCount.3:6 original/man3/FcCharSetCoverage.3:6
#: original/man3/FcCharSetCreate.3:6 original/man3/FcCharSetDelChar.3:6
#: original/man3/FcCharSetDestroy.3:6 original/man3/FcCharSetEqual.3:6
#: original/man3/FcCharSetFirstPage.3:6 original/man3/FcCharSetHasChar.3:6
#: original/man3/FcCharSetIntersect.3:6
#: original/man3/FcCharSetIntersectCount.3:6
#: original/man3/FcCharSetIsSubset.3:6 original/man3/FcCharSetMerge.3:6
#: original/man3/FcCharSetNew.3:6 original/man3/FcCharSetNextPage.3:6
#: original/man3/FcCharSetSubtract.3:6 original/man3/FcCharSetSubtractCount.3:6
#: original/man3/FcCharSetUnion.3:6 original/man3/FcConfigAppFontAddDir.3:6
#: original/man3/FcConfigAppFontAddFile.3:6
#: original/man3/FcConfigAppFontClear.3:6 original/man3/FcConfigBuildFonts.3:6
#: original/man3/FcConfigCreate.3:6 original/man3/FcConfigDestroy.3:6
#: original/man3/FcConfigEnableHome.3:6
#: original/man3/FcConfigFileInfoIterGet.3:6
#: original/man3/FcConfigFileInfoIterInit.3:6
#: original/man3/FcConfigFileInfoIterNext.3:6
#: original/man3/FcConfigFilename.3:6 original/man3/FcConfigGetBlanks.3:6
#: original/man3/FcConfigGetCache.3:6 original/man3/FcConfigGetCacheDirs.3:6
#: original/man3/FcConfigGetConfigDirs.3:6
#: original/man3/FcConfigGetConfigFiles.3:6
#: original/man3/FcConfigGetCurrent.3:6 original/man3/FcConfigGetFilename.3:6
#: original/man3/FcConfigGetFontDirs.3:6 original/man3/FcConfigGetFonts.3:6
#: original/man3/FcConfigGetRescanInterval.3:6
#: original/man3/FcConfigGetSysRoot.3:6 original/man3/FcConfigHome.3:6
#: original/man3/FcConfigParseAndLoad.3:6
#: original/man3/FcConfigParseAndLoadFromMemory.3:6
#: original/man3/FcConfigReference.3:6 original/man3/FcConfigSetCurrent.3:6
#: original/man3/FcConfigSetRescanInterval.3:6
#: original/man3/FcConfigSetSysRoot.3:6 original/man3/FcConfigSubstitute.3:6
#: original/man3/FcConfigSubstituteWithPat.3:6
#: original/man3/FcConfigUptoDate.3:6 original/man3/FcDefaultSubstitute.3:6
#: original/man3/FcDirCacheClean.3:6 original/man3/FcDirCacheCreateUUID.3:6
#: original/man3/FcDirCacheDeleteUUID.3:6 original/man3/FcDirCacheLoad.3:6
#: original/man3/FcDirCacheLoadFile.3:6 original/man3/FcDirCacheRead.3:6
#: original/man3/FcDirCacheRescan.3:6 original/man3/FcDirCacheUnlink.3:6
#: original/man3/FcDirCacheUnload.3:6 original/man3/FcDirCacheValid.3:6
#: original/man3/FcDirSave.3:6 original/man3/FcDirScan.3:6
#: original/man3/FcFileIsDir.3:6 original/man3/FcFileScan.3:6
#: original/man3/FcFini.3:6 original/man3/FcFontList.3:6
#: original/man3/FcFontMatch.3:6 original/man3/FcFontRenderPrepare.3:6
#: original/man3/FcFontSetAdd.3:6 original/man3/FcFontSetCreate.3:6
#: original/man3/FcFontSetDestroy.3:6 original/man3/FcFontSetList.3:6
#: original/man3/FcFontSetMatch.3:6 original/man3/FcFontSetPrint.3:6
#: original/man3/FcFontSetSort.3:6 original/man3/FcFontSetSortDestroy.3:6
#: original/man3/FcFontSort.3:6 original/man3/FcFreeTypeCharIndex.3:6
#: original/man3/FcFreeTypeCharSet.3:6
#: original/man3/FcFreeTypeCharSetAndSpacing.3:6
#: original/man3/FcFreeTypeQuery.3:6 original/man3/FcFreeTypeQueryAll.3:6
#: original/man3/FcFreeTypeQueryFace.3:6 original/man3/FcGetDefaultLangs.3:6
#: original/man3/FcGetLangs.3:6 original/man3/FcGetVersion.3:6
#: original/man3/FcInit.3:6 original/man3/FcInitBringUptoDate.3:6
#: original/man3/FcInitLoadConfig.3:6
#: original/man3/FcInitLoadConfigAndFonts.3:6
#: original/man3/FcInitReinitialize.3:6 original/man3/FcIsLower.3:6
#: original/man3/FcIsUpper.3:6 original/man3/FcLangGetCharSet.3:6
#: original/man3/FcLangNormalize.3:6 original/man3/FcLangSetAdd.3:6
#: original/man3/FcLangSetCompare.3:6 original/man3/FcLangSetContains.3:6
#: original/man3/FcLangSetCopy.3:6 original/man3/FcLangSetCreate.3:6
#: original/man3/FcLangSetDel.3:6 original/man3/FcLangSetDestroy.3:6
#: original/man3/FcLangSetEqual.3:6 original/man3/FcLangSetGetLangs.3:6
#: original/man3/FcLangSetHasLang.3:6 original/man3/FcLangSetHash.3:6
#: original/man3/FcLangSetSubtract.3:6 original/man3/FcLangSetUnion.3:6
#: original/man3/FcMatrixCopy.3:6 original/man3/FcMatrixEqual.3:6
#: original/man3/FcMatrixInit.3:6 original/man3/FcMatrixMultiply.3:6
#: original/man3/FcMatrixRotate.3:6 original/man3/FcMatrixScale.3:6
#: original/man3/FcMatrixShear.3:6 original/man3/FcNameConstant.3:6
#: original/man3/FcNameGetConstant.3:6 original/man3/FcNameGetObjectType.3:6
#: original/man3/FcNameParse.3:6 original/man3/FcNameRegisterConstants.3:6
#: original/man3/FcNameRegisterObjectTypes.3:6 original/man3/FcNameUnparse.3:6
#: original/man3/FcNameUnregisterConstants.3:6
#: original/man3/FcNameUnregisterObjectTypes.3:6
#: original/man3/FcObjectSetAdd.3:6 original/man3/FcObjectSetBuild.3:6
#: original/man3/FcObjectSetCreate.3:6 original/man3/FcObjectSetDestroy.3:6
#: original/man3/FcPatternAdd-Type.3:6 original/man3/FcPatternAdd.3:6
#: original/man3/FcPatternAddWeak.3:6 original/man3/FcPatternBuild.3:6
#: original/man3/FcPatternCreate.3:6 original/man3/FcPatternDel.3:6
#: original/man3/FcPatternDestroy.3:6 original/man3/FcPatternDuplicate.3:6
#: original/man3/FcPatternEqual.3:6 original/man3/FcPatternEqualSubset.3:6
#: original/man3/FcPatternFilter.3:6 original/man3/FcPatternFindIter.3:6
#: original/man3/FcPatternFormat.3:6 original/man3/FcPatternGet-Type.3:6
#: original/man3/FcPatternGet.3:6 original/man3/FcPatternGetWithBinding.3:6
#: original/man3/FcPatternHash.3:6 original/man3/FcPatternIterEqual.3:6
#: original/man3/FcPatternIterGetObject.3:6
#: original/man3/FcPatternIterGetValue.3:6
#: original/man3/FcPatternIterIsValid.3:6 original/man3/FcPatternIterNext.3:6
#: original/man3/FcPatternIterStart.3:6
#: original/man3/FcPatternIterValueCount.3:6
#: original/man3/FcPatternObjectCount.3:6 original/man3/FcPatternPrint.3:6
#: original/man3/FcPatternReference.3:6 original/man3/FcPatternRemove.3:6
#: original/man3/FcRangeCopy.3:6 original/man3/FcRangeCreateDouble.3:6
#: original/man3/FcRangeCreateInteger.3:6 original/man3/FcRangeDestroy.3:6
#: original/man3/FcRangeGetDouble.3:6 original/man3/FcStrBasename.3:6
#: original/man3/FcStrBuildFilename.3:6 original/man3/FcStrCmp.3:6
#: original/man3/FcStrCmpIgnoreCase.3:6 original/man3/FcStrCopy.3:6
#: original/man3/FcStrCopyFilename.3:6 original/man3/FcStrDirname.3:6
#: original/man3/FcStrDowncase.3:6 original/man3/FcStrFree.3:6
#: original/man3/FcStrListCreate.3:6 original/man3/FcStrListDone.3:6
#: original/man3/FcStrListFirst.3:6 original/man3/FcStrListNext.3:6
#: original/man3/FcStrPlus.3:6 original/man3/FcStrSetAdd.3:6
#: original/man3/FcStrSetAddFilename.3:6 original/man3/FcStrSetCreate.3:6
#: original/man3/FcStrSetDel.3:6 original/man3/FcStrSetDestroy.3:6
#: original/man3/FcStrSetEqual.3:6 original/man3/FcStrSetMember.3:6
#: original/man3/FcStrStr.3:6 original/man3/FcStrStrIgnoreCase.3:6
#: original/man3/FcToLower.3:6 original/man3/FcUcs4ToUtf8.3:6
#: original/man3/FcUtf16Len.3:6 original/man3/FcUtf16ToUcs4.3:6
#: original/man3/FcUtf8Len.3:6 original/man3/FcUtf8ToUcs4.3:6
#: original/man3/FcValueDestroy.3:6 original/man3/FcValueEqual.3:6
#: original/man3/FcValuePrint.3:6 original/man3/FcValueSave.3:6
#: original/man3/FcWeightFromOpenType.3:6
#: original/man3/FcWeightFromOpenTypeDouble.3:6
#: original/man3/FcWeightToOpenType.3:6
#: original/man3/FcWeightToOpenTypeDouble.3:6
#, no-wrap
msgid "2022/03/31"
msgstr ""

#. type: TH
#: original/man3/FcAtomicCreate.3:6 original/man3/FcAtomicDeleteNew.3:6
#: original/man3/FcAtomicDestroy.3:6 original/man3/FcAtomicLock.3:6
#: original/man3/FcAtomicNewFile.3:6 original/man3/FcAtomicOrigFile.3:6
#: original/man3/FcAtomicReplaceOrig.3:6 original/man3/FcAtomicUnlock.3:6
#: original/man3/FcBlanksAdd.3:6 original/man3/FcBlanksCreate.3:6
#: original/man3/FcBlanksDestroy.3:6 original/man3/FcBlanksIsMember.3:6
#: original/man3/FcCacheCopySet.3:6 original/man3/FcCacheCreateTagFile.3:6
#: original/man3/FcCacheDir.3:6 original/man3/FcCacheNumFont.3:6
#: original/man3/FcCacheNumSubdir.3:6 original/man3/FcCacheSubdir.3:6
#: original/man3/FcCharSetAddChar.3:6 original/man3/FcCharSetCopy.3:6
#: original/man3/FcCharSetCount.3:6 original/man3/FcCharSetCoverage.3:6
#: original/man3/FcCharSetCreate.3:6 original/man3/FcCharSetDelChar.3:6
#: original/man3/FcCharSetDestroy.3:6 original/man3/FcCharSetEqual.3:6
#: original/man3/FcCharSetFirstPage.3:6 original/man3/FcCharSetHasChar.3:6
#: original/man3/FcCharSetIntersect.3:6
#: original/man3/FcCharSetIntersectCount.3:6
#: original/man3/FcCharSetIsSubset.3:6 original/man3/FcCharSetMerge.3:6
#: original/man3/FcCharSetNew.3:6 original/man3/FcCharSetNextPage.3:6
#: original/man3/FcCharSetSubtract.3:6 original/man3/FcCharSetSubtractCount.3:6
#: original/man3/FcCharSetUnion.3:6 original/man3/FcConfigAppFontAddDir.3:6
#: original/man3/FcConfigAppFontAddFile.3:6
#: original/man3/FcConfigAppFontClear.3:6 original/man3/FcConfigBuildFonts.3:6
#: original/man3/FcConfigCreate.3:6 original/man3/FcConfigDestroy.3:6
#: original/man3/FcConfigEnableHome.3:6
#: original/man3/FcConfigFileInfoIterGet.3:6
#: original/man3/FcConfigFileInfoIterInit.3:6
#: original/man3/FcConfigFileInfoIterNext.3:6
#: original/man3/FcConfigFilename.3:6 original/man3/FcConfigGetBlanks.3:6
#: original/man3/FcConfigGetCache.3:6 original/man3/FcConfigGetCacheDirs.3:6
#: original/man3/FcConfigGetConfigDirs.3:6
#: original/man3/FcConfigGetConfigFiles.3:6
#: original/man3/FcConfigGetCurrent.3:6 original/man3/FcConfigGetFilename.3:6
#: original/man3/FcConfigGetFontDirs.3:6 original/man3/FcConfigGetFonts.3:6
#: original/man3/FcConfigGetRescanInterval.3:6
#: original/man3/FcConfigGetSysRoot.3:6 original/man3/FcConfigHome.3:6
#: original/man3/FcConfigParseAndLoad.3:6
#: original/man3/FcConfigParseAndLoadFromMemory.3:6
#: original/man3/FcConfigReference.3:6 original/man3/FcConfigSetCurrent.3:6
#: original/man3/FcConfigSetRescanInterval.3:6
#: original/man3/FcConfigSetSysRoot.3:6 original/man3/FcConfigSubstitute.3:6
#: original/man3/FcConfigSubstituteWithPat.3:6
#: original/man3/FcConfigUptoDate.3:6 original/man3/FcDefaultSubstitute.3:6
#: original/man3/FcDirCacheClean.3:6 original/man3/FcDirCacheCreateUUID.3:6
#: original/man3/FcDirCacheDeleteUUID.3:6 original/man3/FcDirCacheLoad.3:6
#: original/man3/FcDirCacheLoadFile.3:6 original/man3/FcDirCacheRead.3:6
#: original/man3/FcDirCacheRescan.3:6 original/man3/FcDirCacheUnlink.3:6
#: original/man3/FcDirCacheUnload.3:6 original/man3/FcDirCacheValid.3:6
#: original/man3/FcDirSave.3:6 original/man3/FcDirScan.3:6
#: original/man3/FcFileIsDir.3:6 original/man3/FcFileScan.3:6
#: original/man3/FcFini.3:6 original/man3/FcFontList.3:6
#: original/man3/FcFontMatch.3:6 original/man3/FcFontRenderPrepare.3:6
#: original/man3/FcFontSetAdd.3:6 original/man3/FcFontSetCreate.3:6
#: original/man3/FcFontSetDestroy.3:6 original/man3/FcFontSetList.3:6
#: original/man3/FcFontSetMatch.3:6 original/man3/FcFontSetPrint.3:6
#: original/man3/FcFontSetSort.3:6 original/man3/FcFontSetSortDestroy.3:6
#: original/man3/FcFontSort.3:6 original/man3/FcFreeTypeCharIndex.3:6
#: original/man3/FcFreeTypeCharSet.3:6
#: original/man3/FcFreeTypeCharSetAndSpacing.3:6
#: original/man3/FcFreeTypeQuery.3:6 original/man3/FcFreeTypeQueryAll.3:6
#: original/man3/FcFreeTypeQueryFace.3:6 original/man3/FcGetDefaultLangs.3:6
#: original/man3/FcGetLangs.3:6 original/man3/FcGetVersion.3:6
#: original/man3/FcInit.3:6 original/man3/FcInitBringUptoDate.3:6
#: original/man3/FcInitLoadConfig.3:6
#: original/man3/FcInitLoadConfigAndFonts.3:6
#: original/man3/FcInitReinitialize.3:6 original/man3/FcIsLower.3:6
#: original/man3/FcIsUpper.3:6 original/man3/FcLangGetCharSet.3:6
#: original/man3/FcLangNormalize.3:6 original/man3/FcLangSetAdd.3:6
#: original/man3/FcLangSetCompare.3:6 original/man3/FcLangSetContains.3:6
#: original/man3/FcLangSetCopy.3:6 original/man3/FcLangSetCreate.3:6
#: original/man3/FcLangSetDel.3:6 original/man3/FcLangSetDestroy.3:6
#: original/man3/FcLangSetEqual.3:6 original/man3/FcLangSetGetLangs.3:6
#: original/man3/FcLangSetHasLang.3:6 original/man3/FcLangSetHash.3:6
#: original/man3/FcLangSetSubtract.3:6 original/man3/FcLangSetUnion.3:6
#: original/man3/FcMatrixCopy.3:6 original/man3/FcMatrixEqual.3:6
#: original/man3/FcMatrixInit.3:6 original/man3/FcMatrixMultiply.3:6
#: original/man3/FcMatrixRotate.3:6 original/man3/FcMatrixScale.3:6
#: original/man3/FcMatrixShear.3:6 original/man3/FcNameConstant.3:6
#: original/man3/FcNameGetConstant.3:6 original/man3/FcNameGetObjectType.3:6
#: original/man3/FcNameParse.3:6 original/man3/FcNameRegisterConstants.3:6
#: original/man3/FcNameRegisterObjectTypes.3:6 original/man3/FcNameUnparse.3:6
#: original/man3/FcNameUnregisterConstants.3:6
#: original/man3/FcNameUnregisterObjectTypes.3:6
#: original/man3/FcObjectSetAdd.3:6 original/man3/FcObjectSetBuild.3:6
#: original/man3/FcObjectSetCreate.3:6 original/man3/FcObjectSetDestroy.3:6
#: original/man3/FcPatternAdd-Type.3:6 original/man3/FcPatternAdd.3:6
#: original/man3/FcPatternAddWeak.3:6 original/man3/FcPatternBuild.3:6
#: original/man3/FcPatternCreate.3:6 original/man3/FcPatternDel.3:6
#: original/man3/FcPatternDestroy.3:6 original/man3/FcPatternDuplicate.3:6
#: original/man3/FcPatternEqual.3:6 original/man3/FcPatternEqualSubset.3:6
#: original/man3/FcPatternFilter.3:6 original/man3/FcPatternFindIter.3:6
#: original/man3/FcPatternFormat.3:6 original/man3/FcPatternGet-Type.3:6
#: original/man3/FcPatternGet.3:6 original/man3/FcPatternGetWithBinding.3:6
#: original/man3/FcPatternHash.3:6 original/man3/FcPatternIterEqual.3:6
#: original/man3/FcPatternIterGetObject.3:6
#: original/man3/FcPatternIterGetValue.3:6
#: original/man3/FcPatternIterIsValid.3:6 original/man3/FcPatternIterNext.3:6
#: original/man3/FcPatternIterStart.3:6
#: original/man3/FcPatternIterValueCount.3:6
#: original/man3/FcPatternObjectCount.3:6 original/man3/FcPatternPrint.3:6
#: original/man3/FcPatternReference.3:6 original/man3/FcPatternRemove.3:6
#: original/man3/FcRangeCopy.3:6 original/man3/FcRangeCreateDouble.3:6
#: original/man3/FcRangeCreateInteger.3:6 original/man3/FcRangeDestroy.3:6
#: original/man3/FcRangeGetDouble.3:6 original/man3/FcStrBasename.3:6
#: original/man3/FcStrBuildFilename.3:6 original/man3/FcStrCmp.3:6
#: original/man3/FcStrCmpIgnoreCase.3:6 original/man3/FcStrCopy.3:6
#: original/man3/FcStrCopyFilename.3:6 original/man3/FcStrDirname.3:6
#: original/man3/FcStrDowncase.3:6 original/man3/FcStrFree.3:6
#: original/man3/FcStrListCreate.3:6 original/man3/FcStrListDone.3:6
#: original/man3/FcStrListFirst.3:6 original/man3/FcStrListNext.3:6
#: original/man3/FcStrPlus.3:6 original/man3/FcStrSetAdd.3:6
#: original/man3/FcStrSetAddFilename.3:6 original/man3/FcStrSetCreate.3:6
#: original/man3/FcStrSetDel.3:6 original/man3/FcStrSetDestroy.3:6
#: original/man3/FcStrSetEqual.3:6 original/man3/FcStrSetMember.3:6
#: original/man3/FcStrStr.3:6 original/man3/FcStrStrIgnoreCase.3:6
#: original/man3/FcToLower.3:6 original/man3/FcUcs4ToUtf8.3:6
#: original/man3/FcUtf16Len.3:6 original/man3/FcUtf16ToUcs4.3:6
#: original/man3/FcUtf8Len.3:6 original/man3/FcUtf8ToUcs4.3:6
#: original/man3/FcValueDestroy.3:6 original/man3/FcValueEqual.3:6
#: original/man3/FcValuePrint.3:6 original/man3/FcValueSave.3:6
#: original/man3/FcWeightFromOpenType.3:6
#: original/man3/FcWeightFromOpenTypeDouble.3:6
#: original/man3/FcWeightToOpenType.3:6
#: original/man3/FcWeightToOpenTypeDouble.3:6
#, no-wrap
msgid "Fontconfig 2.14.0"
msgstr ""

#. type: SH
#: original/man3/FcAtomicCreate.3:8 original/man3/FcAtomicDeleteNew.3:8
#: original/man3/FcAtomicDestroy.3:8 original/man3/FcAtomicLock.3:8
#: original/man3/FcAtomicNewFile.3:8 original/man3/FcAtomicOrigFile.3:8
#: original/man3/FcAtomicReplaceOrig.3:8 original/man3/FcAtomicUnlock.3:8
#: original/man3/FcBlanksAdd.3:8 original/man3/FcBlanksCreate.3:8
#: original/man3/FcBlanksDestroy.3:8 original/man3/FcBlanksIsMember.3:8
#: original/man3/FcCacheCopySet.3:8 original/man3/FcCacheCreateTagFile.3:8
#: original/man3/FcCacheDir.3:8 original/man3/FcCacheNumFont.3:8
#: original/man3/FcCacheNumSubdir.3:8 original/man3/FcCacheSubdir.3:8
#: original/man3/FcCharSetAddChar.3:8 original/man3/FcCharSetCopy.3:8
#: original/man3/FcCharSetCount.3:8 original/man3/FcCharSetCoverage.3:8
#: original/man3/FcCharSetCreate.3:8 original/man3/FcCharSetDelChar.3:8
#: original/man3/FcCharSetDestroy.3:8 original/man3/FcCharSetEqual.3:8
#: original/man3/FcCharSetFirstPage.3:8 original/man3/FcCharSetHasChar.3:8
#: original/man3/FcCharSetIntersect.3:8
#: original/man3/FcCharSetIntersectCount.3:8
#: original/man3/FcCharSetIsSubset.3:8 original/man3/FcCharSetMerge.3:8
#: original/man3/FcCharSetNew.3:8 original/man3/FcCharSetNextPage.3:8
#: original/man3/FcCharSetSubtract.3:8 original/man3/FcCharSetSubtractCount.3:8
#: original/man3/FcCharSetUnion.3:8 original/man3/FcConfigAppFontAddDir.3:8
#: original/man3/FcConfigAppFontAddFile.3:8
#: original/man3/FcConfigAppFontClear.3:8 original/man3/FcConfigBuildFonts.3:8
#: original/man3/FcConfigCreate.3:8 original/man3/FcConfigDestroy.3:8
#: original/man3/FcConfigEnableHome.3:8
#: original/man3/FcConfigFileInfoIterGet.3:8
#: original/man3/FcConfigFileInfoIterInit.3:8
#: original/man3/FcConfigFileInfoIterNext.3:8
#: original/man3/FcConfigFilename.3:8 original/man3/FcConfigGetBlanks.3:8
#: original/man3/FcConfigGetCache.3:8 original/man3/FcConfigGetCacheDirs.3:8
#: original/man3/FcConfigGetConfigDirs.3:8
#: original/man3/FcConfigGetConfigFiles.3:8
#: original/man3/FcConfigGetCurrent.3:8 original/man3/FcConfigGetFilename.3:8
#: original/man3/FcConfigGetFontDirs.3:8 original/man3/FcConfigGetFonts.3:8
#: original/man3/FcConfigGetRescanInterval.3:8
#: original/man3/FcConfigGetSysRoot.3:8 original/man3/FcConfigHome.3:8
#: original/man3/FcConfigParseAndLoad.3:8
#: original/man3/FcConfigParseAndLoadFromMemory.3:8
#: original/man3/FcConfigReference.3:8 original/man3/FcConfigSetCurrent.3:8
#: original/man3/FcConfigSetRescanInterval.3:8
#: original/man3/FcConfigSetSysRoot.3:8 original/man3/FcConfigSubstitute.3:8
#: original/man3/FcConfigSubstituteWithPat.3:8
#: original/man3/FcConfigUptoDate.3:8 original/man3/FcDefaultSubstitute.3:8
#: original/man3/FcDirCacheClean.3:8 original/man3/FcDirCacheCreateUUID.3:8
#: original/man3/FcDirCacheDeleteUUID.3:8 original/man3/FcDirCacheLoad.3:8
#: original/man3/FcDirCacheLoadFile.3:8 original/man3/FcDirCacheRead.3:8
#: original/man3/FcDirCacheRescan.3:8 original/man3/FcDirCacheUnlink.3:8
#: original/man3/FcDirCacheUnload.3:8 original/man3/FcDirCacheValid.3:8
#: original/man3/FcDirSave.3:8 original/man3/FcDirScan.3:8
#: original/man3/FcFileIsDir.3:8 original/man3/FcFileScan.3:8
#: original/man3/FcFini.3:8 original/man3/FcFontList.3:8
#: original/man3/FcFontMatch.3:8 original/man3/FcFontRenderPrepare.3:8
#: original/man3/FcFontSetAdd.3:8 original/man3/FcFontSetCreate.3:8
#: original/man3/FcFontSetDestroy.3:8 original/man3/FcFontSetList.3:8
#: original/man3/FcFontSetMatch.3:8 original/man3/FcFontSetPrint.3:8
#: original/man3/FcFontSetSort.3:8 original/man3/FcFontSetSortDestroy.3:8
#: original/man3/FcFontSort.3:8 original/man3/FcFreeTypeCharIndex.3:8
#: original/man3/FcFreeTypeCharSet.3:8
#: original/man3/FcFreeTypeCharSetAndSpacing.3:8
#: original/man3/FcFreeTypeQuery.3:8 original/man3/FcFreeTypeQueryAll.3:8
#: original/man3/FcFreeTypeQueryFace.3:8 original/man3/FcGetDefaultLangs.3:8
#: original/man3/FcGetLangs.3:8 original/man3/FcGetVersion.3:8
#: original/man3/FcInit.3:8 original/man3/FcInitBringUptoDate.3:8
#: original/man3/FcInitLoadConfig.3:8
#: original/man3/FcInitLoadConfigAndFonts.3:8
#: original/man3/FcInitReinitialize.3:8 original/man3/FcIsLower.3:8
#: original/man3/FcIsUpper.3:8 original/man3/FcLangGetCharSet.3:8
#: original/man3/FcLangNormalize.3:8 original/man3/FcLangSetAdd.3:8
#: original/man3/FcLangSetCompare.3:8 original/man3/FcLangSetContains.3:8
#: original/man3/FcLangSetCopy.3:8 original/man3/FcLangSetCreate.3:8
#: original/man3/FcLangSetDel.3:8 original/man3/FcLangSetDestroy.3:8
#: original/man3/FcLangSetEqual.3:8 original/man3/FcLangSetGetLangs.3:8
#: original/man3/FcLangSetHasLang.3:8 original/man3/FcLangSetHash.3:8
#: original/man3/FcLangSetSubtract.3:8 original/man3/FcLangSetUnion.3:8
#: original/man3/FcMatrixCopy.3:8 original/man3/FcMatrixEqual.3:8
#: original/man3/FcMatrixInit.3:8 original/man3/FcMatrixMultiply.3:8
#: original/man3/FcMatrixRotate.3:8 original/man3/FcMatrixScale.3:8
#: original/man3/FcMatrixShear.3:8 original/man3/FcNameConstant.3:8
#: original/man3/FcNameGetConstant.3:8 original/man3/FcNameGetObjectType.3:8
#: original/man3/FcNameParse.3:8 original/man3/FcNameRegisterConstants.3:8
#: original/man3/FcNameRegisterObjectTypes.3:8 original/man3/FcNameUnparse.3:8
#: original/man3/FcNameUnregisterConstants.3:8
#: original/man3/FcNameUnregisterObjectTypes.3:8
#: original/man3/FcObjectSetAdd.3:8 original/man3/FcObjectSetBuild.3:8
#: original/man3/FcObjectSetCreate.3:8 original/man3/FcObjectSetDestroy.3:8
#: original/man3/FcPatternAdd-Type.3:8 original/man3/FcPatternAdd.3:8
#: original/man3/FcPatternAddWeak.3:8 original/man3/FcPatternBuild.3:8
#: original/man3/FcPatternCreate.3:8 original/man3/FcPatternDel.3:8
#: original/man3/FcPatternDestroy.3:8 original/man3/FcPatternDuplicate.3:8
#: original/man3/FcPatternEqual.3:8 original/man3/FcPatternEqualSubset.3:8
#: original/man3/FcPatternFilter.3:8 original/man3/FcPatternFindIter.3:8
#: original/man3/FcPatternFormat.3:8 original/man3/FcPatternGet-Type.3:8
#: original/man3/FcPatternGet.3:8 original/man3/FcPatternGetWithBinding.3:8
#: original/man3/FcPatternHash.3:8 original/man3/FcPatternIterEqual.3:8
#: original/man3/FcPatternIterGetObject.3:8
#: original/man3/FcPatternIterGetValue.3:8
#: original/man3/FcPatternIterIsValid.3:8 original/man3/FcPatternIterNext.3:8
#: original/man3/FcPatternIterStart.3:8
#: original/man3/FcPatternIterValueCount.3:8
#: original/man3/FcPatternObjectCount.3:8 original/man3/FcPatternPrint.3:8
#: original/man3/FcPatternReference.3:8 original/man3/FcPatternRemove.3:8
#: original/man3/FcRangeCopy.3:8 original/man3/FcRangeCreateDouble.3:8
#: original/man3/FcRangeCreateInteger.3:8 original/man3/FcRangeDestroy.3:8
#: original/man3/FcRangeGetDouble.3:8 original/man3/FcStrBasename.3:8
#: original/man3/FcStrBuildFilename.3:8 original/man3/FcStrCmp.3:8
#: original/man3/FcStrCmpIgnoreCase.3:8 original/man3/FcStrCopy.3:8
#: original/man3/FcStrCopyFilename.3:8 original/man3/FcStrDirname.3:8
#: original/man3/FcStrDowncase.3:8 original/man3/FcStrFree.3:8
#: original/man3/FcStrListCreate.3:8 original/man3/FcStrListDone.3:8
#: original/man3/FcStrListFirst.3:8 original/man3/FcStrListNext.3:8
#: original/man3/FcStrPlus.3:8 original/man3/FcStrSetAdd.3:8
#: original/man3/FcStrSetAddFilename.3:8 original/man3/FcStrSetCreate.3:8
#: original/man3/FcStrSetDel.3:8 original/man3/FcStrSetDestroy.3:8
#: original/man3/FcStrSetEqual.3:8 original/man3/FcStrSetMember.3:8
#: original/man3/FcStrStr.3:8 original/man3/FcStrStrIgnoreCase.3:8
#: original/man3/FcToLower.3:8 original/man3/FcUcs4ToUtf8.3:8
#: original/man3/FcUtf16Len.3:8 original/man3/FcUtf16ToUcs4.3:8
#: original/man3/FcUtf8Len.3:8 original/man3/FcUtf8ToUcs4.3:8
#: original/man3/FcValueDestroy.3:8 original/man3/FcValueEqual.3:8
#: original/man3/FcValuePrint.3:8 original/man3/FcValueSave.3:8
#: original/man3/FcWeightFromOpenType.3:8
#: original/man3/FcWeightFromOpenTypeDouble.3:8
#: original/man3/FcWeightToOpenType.3:8
#: original/man3/FcWeightToOpenTypeDouble.3:8
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: original/man3/FcAtomicCreate.3:10
msgid "FcAtomicCreate - create an FcAtomic object"
msgstr ""

#. type: SH
#: original/man3/FcAtomicCreate.3:10 original/man3/FcAtomicDeleteNew.3:10
#: original/man3/FcAtomicDestroy.3:10 original/man3/FcAtomicLock.3:10
#: original/man3/FcAtomicNewFile.3:10 original/man3/FcAtomicOrigFile.3:10
#: original/man3/FcAtomicReplaceOrig.3:10 original/man3/FcAtomicUnlock.3:10
#: original/man3/FcBlanksAdd.3:10 original/man3/FcBlanksCreate.3:10
#: original/man3/FcBlanksDestroy.3:10 original/man3/FcBlanksIsMember.3:10
#: original/man3/FcCacheCopySet.3:10 original/man3/FcCacheCreateTagFile.3:10
#: original/man3/FcCacheDir.3:10 original/man3/FcCacheNumFont.3:10
#: original/man3/FcCacheNumSubdir.3:10 original/man3/FcCacheSubdir.3:10
#: original/man3/FcCharSetAddChar.3:10 original/man3/FcCharSetCopy.3:10
#: original/man3/FcCharSetCount.3:10 original/man3/FcCharSetCoverage.3:10
#: original/man3/FcCharSetCreate.3:10 original/man3/FcCharSetDelChar.3:10
#: original/man3/FcCharSetDestroy.3:10 original/man3/FcCharSetEqual.3:10
#: original/man3/FcCharSetFirstPage.3:10 original/man3/FcCharSetHasChar.3:10
#: original/man3/FcCharSetIntersect.3:10
#: original/man3/FcCharSetIntersectCount.3:10
#: original/man3/FcCharSetIsSubset.3:10 original/man3/FcCharSetMerge.3:10
#: original/man3/FcCharSetNew.3:10 original/man3/FcCharSetNextPage.3:10
#: original/man3/FcCharSetSubtract.3:10
#: original/man3/FcCharSetSubtractCount.3:10 original/man3/FcCharSetUnion.3:10
#: original/man3/FcConfigAppFontAddDir.3:10
#: original/man3/FcConfigAppFontAddFile.3:10
#: original/man3/FcConfigAppFontClear.3:10
#: original/man3/FcConfigBuildFonts.3:10 original/man3/FcConfigCreate.3:10
#: original/man3/FcConfigDestroy.3:10 original/man3/FcConfigEnableHome.3:10
#: original/man3/FcConfigFileInfoIterGet.3:10
#: original/man3/FcConfigFileInfoIterInit.3:10
#: original/man3/FcConfigFileInfoIterNext.3:10
#: original/man3/FcConfigFilename.3:10 original/man3/FcConfigGetBlanks.3:10
#: original/man3/FcConfigGetCache.3:10 original/man3/FcConfigGetCacheDirs.3:10
#: original/man3/FcConfigGetConfigDirs.3:10
#: original/man3/FcConfigGetConfigFiles.3:10
#: original/man3/FcConfigGetCurrent.3:10 original/man3/FcConfigGetFilename.3:10
#: original/man3/FcConfigGetFontDirs.3:10 original/man3/FcConfigGetFonts.3:10
#: original/man3/FcConfigGetRescanInterval.3:10
#: original/man3/FcConfigGetSysRoot.3:10 original/man3/FcConfigHome.3:10
#: original/man3/FcConfigParseAndLoad.3:10
#: original/man3/FcConfigParseAndLoadFromMemory.3:10
#: original/man3/FcConfigReference.3:10 original/man3/FcConfigSetCurrent.3:10
#: original/man3/FcConfigSetRescanInterval.3:10
#: original/man3/FcConfigSetSysRoot.3:10 original/man3/FcConfigSubstitute.3:10
#: original/man3/FcConfigSubstituteWithPat.3:10
#: original/man3/FcConfigUptoDate.3:10 original/man3/FcDefaultSubstitute.3:10
#: original/man3/FcDirCacheClean.3:10 original/man3/FcDirCacheCreateUUID.3:10
#: original/man3/FcDirCacheDeleteUUID.3:10 original/man3/FcDirCacheLoad.3:10
#: original/man3/FcDirCacheLoadFile.3:10 original/man3/FcDirCacheRead.3:10
#: original/man3/FcDirCacheRescan.3:10 original/man3/FcDirCacheUnlink.3:10
#: original/man3/FcDirCacheUnload.3:10 original/man3/FcDirCacheValid.3:10
#: original/man3/FcDirSave.3:10 original/man3/FcDirScan.3:10
#: original/man3/FcFileIsDir.3:10 original/man3/FcFileScan.3:10
#: original/man3/FcFini.3:10 original/man3/FcFontList.3:10
#: original/man3/FcFontMatch.3:10 original/man3/FcFontRenderPrepare.3:10
#: original/man3/FcFontSetAdd.3:10 original/man3/FcFontSetCreate.3:10
#: original/man3/FcFontSetDestroy.3:10 original/man3/FcFontSetList.3:10
#: original/man3/FcFontSetMatch.3:10 original/man3/FcFontSetPrint.3:10
#: original/man3/FcFontSetSort.3:10 original/man3/FcFontSetSortDestroy.3:10
#: original/man3/FcFontSort.3:10 original/man3/FcFreeTypeCharIndex.3:10
#: original/man3/FcFreeTypeCharSet.3:10
#: original/man3/FcFreeTypeCharSetAndSpacing.3:10
#: original/man3/FcFreeTypeQuery.3:10 original/man3/FcFreeTypeQueryAll.3:10
#: original/man3/FcFreeTypeQueryFace.3:10 original/man3/FcGetDefaultLangs.3:10
#: original/man3/FcGetLangs.3:10 original/man3/FcGetVersion.3:10
#: original/man3/FcInit.3:10 original/man3/FcInitBringUptoDate.3:10
#: original/man3/FcInitLoadConfig.3:10
#: original/man3/FcInitLoadConfigAndFonts.3:10
#: original/man3/FcInitReinitialize.3:10 original/man3/FcIsLower.3:10
#: original/man3/FcIsUpper.3:10 original/man3/FcLangGetCharSet.3:10
#: original/man3/FcLangNormalize.3:10 original/man3/FcLangSetAdd.3:10
#: original/man3/FcLangSetCompare.3:10 original/man3/FcLangSetContains.3:10
#: original/man3/FcLangSetCopy.3:10 original/man3/FcLangSetCreate.3:10
#: original/man3/FcLangSetDel.3:10 original/man3/FcLangSetDestroy.3:10
#: original/man3/FcLangSetEqual.3:10 original/man3/FcLangSetGetLangs.3:10
#: original/man3/FcLangSetHasLang.3:10 original/man3/FcLangSetHash.3:10
#: original/man3/FcLangSetSubtract.3:10 original/man3/FcLangSetUnion.3:10
#: original/man3/FcMatrixCopy.3:10 original/man3/FcMatrixEqual.3:10
#: original/man3/FcMatrixInit.3:10 original/man3/FcMatrixMultiply.3:10
#: original/man3/FcMatrixRotate.3:10 original/man3/FcMatrixScale.3:10
#: original/man3/FcMatrixShear.3:10 original/man3/FcNameConstant.3:10
#: original/man3/FcNameGetConstant.3:10 original/man3/FcNameGetObjectType.3:10
#: original/man3/FcNameParse.3:10 original/man3/FcNameRegisterConstants.3:10
#: original/man3/FcNameRegisterObjectTypes.3:10
#: original/man3/FcNameUnparse.3:10
#: original/man3/FcNameUnregisterConstants.3:10
#: original/man3/FcNameUnregisterObjectTypes.3:10
#: original/man3/FcObjectSetAdd.3:10 original/man3/FcObjectSetBuild.3:10
#: original/man3/FcObjectSetCreate.3:10 original/man3/FcObjectSetDestroy.3:10
#: original/man3/FcPatternAdd-Type.3:10 original/man3/FcPatternAdd.3:10
#: original/man3/FcPatternAddWeak.3:10 original/man3/FcPatternBuild.3:10
#: original/man3/FcPatternCreate.3:10 original/man3/FcPatternDel.3:10
#: original/man3/FcPatternDestroy.3:10 original/man3/FcPatternDuplicate.3:10
#: original/man3/FcPatternEqual.3:10 original/man3/FcPatternEqualSubset.3:10
#: original/man3/FcPatternFilter.3:10 original/man3/FcPatternFindIter.3:10
#: original/man3/FcPatternFormat.3:10 original/man3/FcPatternGet-Type.3:10
#: original/man3/FcPatternGet.3:10 original/man3/FcPatternGetWithBinding.3:10
#: original/man3/FcPatternHash.3:10 original/man3/FcPatternIterEqual.3:10
#: original/man3/FcPatternIterGetObject.3:10
#: original/man3/FcPatternIterGetValue.3:10
#: original/man3/FcPatternIterIsValid.3:10 original/man3/FcPatternIterNext.3:10
#: original/man3/FcPatternIterStart.3:10
#: original/man3/FcPatternIterValueCount.3:10
#: original/man3/FcPatternObjectCount.3:10 original/man3/FcPatternPrint.3:10
#: original/man3/FcPatternReference.3:10 original/man3/FcPatternRemove.3:10
#: original/man3/FcRangeCopy.3:10 original/man3/FcRangeCreateDouble.3:10
#: original/man3/FcRangeCreateInteger.3:10 original/man3/FcRangeDestroy.3:10
#: original/man3/FcRangeGetDouble.3:10 original/man3/FcStrBasename.3:10
#: original/man3/FcStrBuildFilename.3:10 original/man3/FcStrCmp.3:10
#: original/man3/FcStrCmpIgnoreCase.3:10 original/man3/FcStrCopy.3:10
#: original/man3/FcStrCopyFilename.3:10 original/man3/FcStrDirname.3:10
#: original/man3/FcStrDowncase.3:10 original/man3/FcStrFree.3:10
#: original/man3/FcStrListCreate.3:10 original/man3/FcStrListDone.3:10
#: original/man3/FcStrListFirst.3:10 original/man3/FcStrListNext.3:10
#: original/man3/FcStrPlus.3:10 original/man3/FcStrSetAdd.3:10
#: original/man3/FcStrSetAddFilename.3:10 original/man3/FcStrSetCreate.3:10
#: original/man3/FcStrSetDel.3:10 original/man3/FcStrSetDestroy.3:10
#: original/man3/FcStrSetEqual.3:10 original/man3/FcStrSetMember.3:10
#: original/man3/FcStrStr.3:10 original/man3/FcStrStrIgnoreCase.3:10
#: original/man3/FcToLower.3:10 original/man3/FcUcs4ToUtf8.3:10
#: original/man3/FcUtf16Len.3:10 original/man3/FcUtf16ToUcs4.3:10
#: original/man3/FcUtf8Len.3:10 original/man3/FcUtf8ToUcs4.3:10
#: original/man3/FcValueDestroy.3:10 original/man3/FcValueEqual.3:10
#: original/man3/FcValuePrint.3:10 original/man3/FcValueSave.3:10
#: original/man3/FcWeightFromOpenType.3:10
#: original/man3/FcWeightFromOpenTypeDouble.3:10
#: original/man3/FcWeightToOpenType.3:10
#: original/man3/FcWeightToOpenTypeDouble.3:10
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: original/man3/FcAtomicCreate.3:13 original/man3/FcAtomicDeleteNew.3:13
#: original/man3/FcAtomicDestroy.3:13 original/man3/FcAtomicLock.3:13
#: original/man3/FcAtomicNewFile.3:13 original/man3/FcAtomicOrigFile.3:13
#: original/man3/FcAtomicReplaceOrig.3:13 original/man3/FcAtomicUnlock.3:13
#: original/man3/FcBlanksAdd.3:13 original/man3/FcBlanksCreate.3:13
#: original/man3/FcBlanksDestroy.3:13 original/man3/FcBlanksIsMember.3:13
#: original/man3/FcCacheCopySet.3:13 original/man3/FcCacheCreateTagFile.3:13
#: original/man3/FcCacheDir.3:13 original/man3/FcCacheNumFont.3:13
#: original/man3/FcCacheNumSubdir.3:13 original/man3/FcCacheSubdir.3:13
#: original/man3/FcCharSetAddChar.3:13 original/man3/FcCharSetCopy.3:13
#: original/man3/FcCharSetCount.3:13 original/man3/FcCharSetCoverage.3:13
#: original/man3/FcCharSetCreate.3:13 original/man3/FcCharSetDelChar.3:13
#: original/man3/FcCharSetDestroy.3:13 original/man3/FcCharSetEqual.3:13
#: original/man3/FcCharSetFirstPage.3:13 original/man3/FcCharSetHasChar.3:13
#: original/man3/FcCharSetIntersect.3:13
#: original/man3/FcCharSetIntersectCount.3:13
#: original/man3/FcCharSetIsSubset.3:13 original/man3/FcCharSetMerge.3:13
#: original/man3/FcCharSetNew.3:13 original/man3/FcCharSetNextPage.3:13
#: original/man3/FcCharSetSubtract.3:13
#: original/man3/FcCharSetSubtractCount.3:13 original/man3/FcCharSetUnion.3:13
#: original/man3/FcConfigAppFontAddDir.3:13
#: original/man3/FcConfigAppFontAddFile.3:13
#: original/man3/FcConfigAppFontClear.3:13
#: original/man3/FcConfigBuildFonts.3:13 original/man3/FcConfigCreate.3:13
#: original/man3/FcConfigDestroy.3:13 original/man3/FcConfigEnableHome.3:13
#: original/man3/FcConfigFileInfoIterGet.3:13
#: original/man3/FcConfigFileInfoIterInit.3:13
#: original/man3/FcConfigFileInfoIterNext.3:13
#: original/man3/FcConfigFilename.3:13 original/man3/FcConfigGetBlanks.3:13
#: original/man3/FcConfigGetCache.3:13 original/man3/FcConfigGetCacheDirs.3:13
#: original/man3/FcConfigGetConfigDirs.3:13
#: original/man3/FcConfigGetConfigFiles.3:13
#: original/man3/FcConfigGetCurrent.3:13 original/man3/FcConfigGetFilename.3:13
#: original/man3/FcConfigGetFontDirs.3:13 original/man3/FcConfigGetFonts.3:13
#: original/man3/FcConfigGetRescanInterval.3:13
#: original/man3/FcConfigGetSysRoot.3:13 original/man3/FcConfigHome.3:13
#: original/man3/FcConfigParseAndLoad.3:13
#: original/man3/FcConfigParseAndLoadFromMemory.3:13
#: original/man3/FcConfigReference.3:13 original/man3/FcConfigSetCurrent.3:13
#: original/man3/FcConfigSetRescanInterval.3:13
#: original/man3/FcConfigSetSysRoot.3:13 original/man3/FcConfigSubstitute.3:13
#: original/man3/FcConfigSubstituteWithPat.3:13
#: original/man3/FcConfigUptoDate.3:13 original/man3/FcDefaultSubstitute.3:13
#: original/man3/FcDirCacheClean.3:13 original/man3/FcDirCacheCreateUUID.3:13
#: original/man3/FcDirCacheDeleteUUID.3:13 original/man3/FcDirCacheLoad.3:13
#: original/man3/FcDirCacheLoadFile.3:13 original/man3/FcDirCacheRead.3:13
#: original/man3/FcDirCacheRescan.3:13 original/man3/FcDirCacheUnlink.3:13
#: original/man3/FcDirCacheUnload.3:13 original/man3/FcDirCacheValid.3:13
#: original/man3/FcDirSave.3:13 original/man3/FcDirScan.3:13
#: original/man3/FcFileIsDir.3:13 original/man3/FcFileScan.3:13
#: original/man3/FcFini.3:13 original/man3/FcFontList.3:13
#: original/man3/FcFontMatch.3:13 original/man3/FcFontRenderPrepare.3:13
#: original/man3/FcFontSetAdd.3:13 original/man3/FcFontSetCreate.3:13
#: original/man3/FcFontSetDestroy.3:13 original/man3/FcFontSetList.3:13
#: original/man3/FcFontSetMatch.3:13 original/man3/FcFontSetPrint.3:13
#: original/man3/FcFontSetSort.3:13 original/man3/FcFontSetSortDestroy.3:13
#: original/man3/FcFontSort.3:13 original/man3/FcGetDefaultLangs.3:13
#: original/man3/FcGetLangs.3:13 original/man3/FcGetVersion.3:13
#: original/man3/FcInit.3:13 original/man3/FcInitBringUptoDate.3:13
#: original/man3/FcInitLoadConfig.3:13
#: original/man3/FcInitLoadConfigAndFonts.3:13
#: original/man3/FcInitReinitialize.3:13 original/man3/FcIsLower.3:13
#: original/man3/FcIsUpper.3:13 original/man3/FcLangGetCharSet.3:13
#: original/man3/FcLangNormalize.3:13 original/man3/FcLangSetAdd.3:13
#: original/man3/FcLangSetCompare.3:13 original/man3/FcLangSetContains.3:13
#: original/man3/FcLangSetCopy.3:13 original/man3/FcLangSetCreate.3:13
#: original/man3/FcLangSetDel.3:13 original/man3/FcLangSetDestroy.3:13
#: original/man3/FcLangSetEqual.3:13 original/man3/FcLangSetGetLangs.3:13
#: original/man3/FcLangSetHasLang.3:13 original/man3/FcLangSetHash.3:13
#: original/man3/FcLangSetSubtract.3:13 original/man3/FcLangSetUnion.3:13
#: original/man3/FcMatrixCopy.3:13 original/man3/FcMatrixEqual.3:13
#: original/man3/FcMatrixInit.3:13 original/man3/FcMatrixMultiply.3:13
#: original/man3/FcMatrixRotate.3:13 original/man3/FcMatrixScale.3:13
#: original/man3/FcMatrixShear.3:13 original/man3/FcNameConstant.3:13
#: original/man3/FcNameGetConstant.3:13 original/man3/FcNameGetObjectType.3:13
#: original/man3/FcNameParse.3:13 original/man3/FcNameRegisterConstants.3:13
#: original/man3/FcNameRegisterObjectTypes.3:13
#: original/man3/FcNameUnparse.3:13
#: original/man3/FcNameUnregisterConstants.3:13
#: original/man3/FcNameUnregisterObjectTypes.3:13
#: original/man3/FcObjectSetAdd.3:13 original/man3/FcObjectSetBuild.3:13
#: original/man3/FcObjectSetCreate.3:13 original/man3/FcObjectSetDestroy.3:13
#: original/man3/FcPatternAdd-Type.3:13 original/man3/FcPatternAdd.3:13
#: original/man3/FcPatternAddWeak.3:13 original/man3/FcPatternBuild.3:13
#: original/man3/FcPatternCreate.3:13 original/man3/FcPatternDel.3:13
#: original/man3/FcPatternDestroy.3:13 original/man3/FcPatternDuplicate.3:13
#: original/man3/FcPatternEqual.3:13 original/man3/FcPatternEqualSubset.3:13
#: original/man3/FcPatternFilter.3:13 original/man3/FcPatternFindIter.3:13
#: original/man3/FcPatternFormat.3:13 original/man3/FcPatternGet-Type.3:13
#: original/man3/FcPatternGet.3:13 original/man3/FcPatternGetWithBinding.3:13
#: original/man3/FcPatternHash.3:13 original/man3/FcPatternIterEqual.3:13
#: original/man3/FcPatternIterGetObject.3:13
#: original/man3/FcPatternIterGetValue.3:13
#: original/man3/FcPatternIterIsValid.3:13 original/man3/FcPatternIterNext.3:13
#: original/man3/FcPatternIterStart.3:13
#: original/man3/FcPatternIterValueCount.3:13
#: original/man3/FcPatternObjectCount.3:13 original/man3/FcPatternPrint.3:13
#: original/man3/FcPatternReference.3:13 original/man3/FcPatternRemove.3:13
#: original/man3/FcRangeCopy.3:13 original/man3/FcRangeCreateDouble.3:13
#: original/man3/FcRangeCreateInteger.3:13 original/man3/FcRangeDestroy.3:13
#: original/man3/FcRangeGetDouble.3:13 original/man3/FcStrBasename.3:13
#: original/man3/FcStrBuildFilename.3:13 original/man3/FcStrCmp.3:13
#: original/man3/FcStrCmpIgnoreCase.3:13 original/man3/FcStrCopy.3:13
#: original/man3/FcStrCopyFilename.3:13 original/man3/FcStrDirname.3:13
#: original/man3/FcStrDowncase.3:13 original/man3/FcStrFree.3:13
#: original/man3/FcStrListCreate.3:13 original/man3/FcStrListDone.3:13
#: original/man3/FcStrListFirst.3:13 original/man3/FcStrListNext.3:13
#: original/man3/FcStrPlus.3:13 original/man3/FcStrSetAdd.3:13
#: original/man3/FcStrSetAddFilename.3:13 original/man3/FcStrSetCreate.3:13
#: original/man3/FcStrSetDel.3:13 original/man3/FcStrSetDestroy.3:13
#: original/man3/FcStrSetEqual.3:13 original/man3/FcStrSetMember.3:13
#: original/man3/FcStrStr.3:13 original/man3/FcStrStrIgnoreCase.3:13
#: original/man3/FcToLower.3:13 original/man3/FcUcs4ToUtf8.3:13
#: original/man3/FcUtf16Len.3:13 original/man3/FcUtf16ToUcs4.3:13
#: original/man3/FcUtf8Len.3:13 original/man3/FcUtf8ToUcs4.3:13
#: original/man3/FcValueDestroy.3:13 original/man3/FcValueEqual.3:13
#: original/man3/FcValuePrint.3:13 original/man3/FcValueSave.3:13
#: original/man3/FcWeightFromOpenType.3:13
#: original/man3/FcWeightFromOpenTypeDouble.3:13
#: original/man3/FcWeightToOpenType.3:13
#: original/man3/FcWeightToOpenTypeDouble.3:13
msgid "B<#include E<lt>fontconfig/fontconfig.hE<gt>>"
msgstr ""

#. type: Plain text
#: original/man3/FcAtomicCreate.3:16
msgid "B<FcAtomic * FcAtomicCreate (const FcChar8 *>I<file>B<);>"
msgstr ""

#. type: SH
#: original/man3/FcAtomicCreate.3:16 original/man3/FcAtomicDeleteNew.3:16
#: original/man3/FcAtomicDestroy.3:16 original/man3/FcAtomicLock.3:16
#: original/man3/FcAtomicNewFile.3:16 original/man3/FcAtomicOrigFile.3:16
#: original/man3/FcAtomicReplaceOrig.3:16 original/man3/FcAtomicUnlock.3:16
#: original/man3/FcBlanksAdd.3:16 original/man3/FcBlanksCreate.3:16
#: original/man3/FcBlanksDestroy.3:16 original/man3/FcBlanksIsMember.3:16
#: original/man3/FcCacheCopySet.3:16 original/man3/FcCacheCreateTagFile.3:16
#: original/man3/FcCacheDir.3:16 original/man3/FcCacheNumFont.3:16
#: original/man3/FcCacheNumSubdir.3:16 original/man3/FcCacheSubdir.3:16
#: original/man3/FcCharSetAddChar.3:16 original/man3/FcCharSetCopy.3:16
#: original/man3/FcCharSetCount.3:16 original/man3/FcCharSetCoverage.3:16
#: original/man3/FcCharSetCreate.3:16 original/man3/FcCharSetDelChar.3:16
#: original/man3/FcCharSetDestroy.3:16 original/man3/FcCharSetEqual.3:16
#: original/man3/FcCharSetFirstPage.3:16 original/man3/FcCharSetHasChar.3:16
#: original/man3/FcCharSetIntersect.3:16
#: original/man3/FcCharSetIntersectCount.3:16
#: original/man3/FcCharSetIsSubset.3:16 original/man3/FcCharSetMerge.3:16
#: original/man3/FcCharSetNew.3:16 original/man3/FcCharSetNextPage.3:16
#: original/man3/FcCharSetSubtract.3:16
#: original/man3/FcCharSetSubtractCount.3:16 original/man3/FcCharSetUnion.3:16
#: original/man3/FcConfigAppFontAddDir.3:16
#: original/man3/FcConfigAppFontAddFile.3:16
#: original/man3/FcConfigAppFontClear.3:16
#: original/man3/FcConfigBuildFonts.3:16 original/man3/FcConfigCreate.3:16
#: original/man3/FcConfigDestroy.3:16 original/man3/FcConfigEnableHome.3:16
#: original/man3/FcConfigFileInfoIterGet.3:16
#: original/man3/FcConfigFileInfoIterInit.3:16
#: original/man3/FcConfigFileInfoIterNext.3:16
#: original/man3/FcConfigFilename.3:16 original/man3/FcConfigGetBlanks.3:16
#: original/man3/FcConfigGetCache.3:16 original/man3/FcConfigGetCacheDirs.3:16
#: original/man3/FcConfigGetConfigDirs.3:16
#: original/man3/FcConfigGetConfigFiles.3:16
#: original/man3/FcConfigGetCurrent.3:16 original/man3/FcConfigGetFilename.3:16
#: original/man3/FcConfigGetFontDirs.3:16 original/man3/FcConfigGetFonts.3:16
#: original/man3/FcConfigGetRescanInterval.3:16
#: original/man3/FcConfigGetSysRoot.3:16 original/man3/FcConfigHome.3:16
#: original/man3/FcConfigParseAndLoad.3:16
#: original/man3/FcConfigParseAndLoadFromMemory.3:16
#: original/man3/FcConfigReference.3:16 original/man3/FcConfigSetCurrent.3:16
#: original/man3/FcConfigSetRescanInterval.3:16
#: original/man3/FcConfigSetSysRoot.3:16 original/man3/FcConfigSubstitute.3:16
#: original/man3/FcConfigSubstituteWithPat.3:16
#: original/man3/FcConfigUptoDate.3:16 original/man3/FcDefaultSubstitute.3:16
#: original/man3/FcDirCacheClean.3:16 original/man3/FcDirCacheCreateUUID.3:16
#: original/man3/FcDirCacheDeleteUUID.3:16 original/man3/FcDirCacheLoad.3:16
#: original/man3/FcDirCacheLoadFile.3:16 original/man3/FcDirCacheRead.3:16
#: original/man3/FcDirCacheRescan.3:16 original/man3/FcDirCacheUnlink.3:16
#: original/man3/FcDirCacheUnload.3:16 original/man3/FcDirCacheValid.3:16
#: original/man3/FcDirSave.3:16 original/man3/FcDirScan.3:16
#: original/man3/FcFileIsDir.3:16 original/man3/FcFileScan.3:16
#: original/man3/FcFini.3:16 original/man3/FcFontList.3:16
#: original/man3/FcFontMatch.3:16 original/man3/FcFontRenderPrepare.3:16
#: original/man3/FcFontSetAdd.3:16 original/man3/FcFontSetCreate.3:16
#: original/man3/FcFontSetDestroy.3:16 original/man3/FcFontSetList.3:16
#: original/man3/FcFontSetMatch.3:16 original/man3/FcFontSetPrint.3:16
#: original/man3/FcFontSetSort.3:16 original/man3/FcFontSetSortDestroy.3:16
#: original/man3/FcFontSort.3:16 original/man3/FcFreeTypeCharIndex.3:17
#: original/man3/FcFreeTypeCharSet.3:17
#: original/man3/FcFreeTypeCharSetAndSpacing.3:17
#: original/man3/FcFreeTypeQuery.3:17 original/man3/FcFreeTypeQueryAll.3:17
#: original/man3/FcFreeTypeQueryFace.3:17 original/man3/FcGetDefaultLangs.3:16
#: original/man3/FcGetLangs.3:16 original/man3/FcGetVersion.3:16
#: original/man3/FcInit.3:16 original/man3/FcInitBringUptoDate.3:16
#: original/man3/FcInitLoadConfig.3:16
#: original/man3/FcInitLoadConfigAndFonts.3:16
#: original/man3/FcInitReinitialize.3:16 original/man3/FcIsLower.3:16
#: original/man3/FcIsUpper.3:16 original/man3/FcLangGetCharSet.3:16
#: original/man3/FcLangNormalize.3:16 original/man3/FcLangSetAdd.3:16
#: original/man3/FcLangSetCompare.3:16 original/man3/FcLangSetContains.3:16
#: original/man3/FcLangSetCopy.3:16 original/man3/FcLangSetCreate.3:16
#: original/man3/FcLangSetDel.3:16 original/man3/FcLangSetDestroy.3:16
#: original/man3/FcLangSetEqual.3:16 original/man3/FcLangSetGetLangs.3:16
#: original/man3/FcLangSetHasLang.3:16 original/man3/FcLangSetHash.3:16
#: original/man3/FcLangSetSubtract.3:16 original/man3/FcLangSetUnion.3:16
#: original/man3/FcMatrixCopy.3:16 original/man3/FcMatrixEqual.3:16
#: original/man3/FcMatrixInit.3:16 original/man3/FcMatrixMultiply.3:16
#: original/man3/FcMatrixRotate.3:16 original/man3/FcMatrixScale.3:16
#: original/man3/FcMatrixShear.3:16 original/man3/FcNameConstant.3:16
#: original/man3/FcNameGetConstant.3:16 original/man3/FcNameGetObjectType.3:16
#: original/man3/FcNameParse.3:16 original/man3/FcNameRegisterConstants.3:16
#: original/man3/FcNameRegisterObjectTypes.3:16
#: original/man3/FcNameUnparse.3:16
#: original/man3/FcNameUnregisterConstants.3:16
#: original/man3/FcNameUnregisterObjectTypes.3:16
#: original/man3/FcObjectSetAdd.3:16 original/man3/FcObjectSetBuild.3:20
#: original/man3/FcObjectSetCreate.3:16 original/man3/FcObjectSetDestroy.3:16
#: original/man3/FcPatternAdd-Type.3:32 original/man3/FcPatternAdd.3:16
#: original/man3/FcPatternAddWeak.3:16 original/man3/FcPatternBuild.3:20
#: original/man3/FcPatternCreate.3:16 original/man3/FcPatternDel.3:16
#: original/man3/FcPatternDestroy.3:16 original/man3/FcPatternDuplicate.3:16
#: original/man3/FcPatternEqual.3:16 original/man3/FcPatternEqualSubset.3:16
#: original/man3/FcPatternFilter.3:16 original/man3/FcPatternFindIter.3:16
#: original/man3/FcPatternFormat.3:16 original/man3/FcPatternGet-Type.3:32
#: original/man3/FcPatternGet.3:16 original/man3/FcPatternGetWithBinding.3:16
#: original/man3/FcPatternHash.3:16 original/man3/FcPatternIterEqual.3:16
#: original/man3/FcPatternIterGetObject.3:16
#: original/man3/FcPatternIterGetValue.3:16
#: original/man3/FcPatternIterIsValid.3:16 original/man3/FcPatternIterNext.3:16
#: original/man3/FcPatternIterStart.3:16
#: original/man3/FcPatternIterValueCount.3:16
#: original/man3/FcPatternObjectCount.3:16 original/man3/FcPatternPrint.3:16
#: original/man3/FcPatternReference.3:16 original/man3/FcPatternRemove.3:16
#: original/man3/FcRangeCopy.3:16 original/man3/FcRangeCreateDouble.3:16
#: original/man3/FcRangeCreateInteger.3:16 original/man3/FcRangeDestroy.3:16
#: original/man3/FcRangeGetDouble.3:16 original/man3/FcStrBasename.3:16
#: original/man3/FcStrBuildFilename.3:16 original/man3/FcStrCmp.3:16
#: original/man3/FcStrCmpIgnoreCase.3:16 original/man3/FcStrCopy.3:16
#: original/man3/FcStrCopyFilename.3:16 original/man3/FcStrDirname.3:16
#: original/man3/FcStrDowncase.3:16 original/man3/FcStrFree.3:16
#: original/man3/FcStrListCreate.3:16 original/man3/FcStrListDone.3:16
#: original/man3/FcStrListFirst.3:16 original/man3/FcStrListNext.3:16
#: original/man3/FcStrPlus.3:16 original/man3/FcStrSetAdd.3:16
#: original/man3/FcStrSetAddFilename.3:16 original/man3/FcStrSetCreate.3:16
#: original/man3/FcStrSetDel.3:16 original/man3/FcStrSetDestroy.3:16
#: original/man3/FcStrSetEqual.3:16 original/man3/FcStrSetMember.3:16
#: original/man3/FcStrStr.3:16 original/man3/FcStrStrIgnoreCase.3:16
#: original/man3/FcToLower.3:16 original/man3/FcUcs4ToUtf8.3:16
#: original/man3/FcUtf16Len.3:16 original/man3/FcUtf16ToUcs4.3:16
#: original/man3/FcUtf8Len.3:16 original/man3/FcUtf8ToUcs4.3:16
#: original/man3/FcValueDestroy.3:16 original/man3/FcValueEqual.3:16
#: original/man3/FcValuePrint.3:16 original/man3/FcValueSave.3:16
#: original/man3/FcWeightFromOpenType.3:16
#: original/man3/FcWeightFromOpenTypeDouble.3:16
#: original/man3/FcWeightToOpenType.3:16
#: original/man3/FcWeightToOpenTypeDouble.3:16
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: original/man3/FcAtomicCreate.3:21
msgid ""
"Creates a data structure containing data needed to control access to "
"I<file>\\&.  Writing is done to a separate file.  Once that file is "
"complete, the original configuration file is atomically replaced so that "
"reading process always see a consistent and complete file without the need "
"to lock for reading."
msgstr ""

#. type: TH
#: original/man3/FcAtomicDeleteNew.3:6
#, no-wrap
msgid "FcAtomicDeleteNew"
msgstr ""

#. type: Plain text
#: original/man3/FcAtomicDeleteNew.3:10
msgid "FcAtomicDeleteNew - delete new file"
msgstr ""

#. type: Plain text
#: original/man3/FcAtomicDeleteNew.3:16
msgid "B<void FcAtomicDeleteNew (FcAtomic *>I<atomic>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcAtomicDeleteNew.3:18
msgid "Deletes the new file.  Used in error recovery to back out changes."
msgstr ""

#. type: TH
#: original/man3/FcAtomicDestroy.3:6
#, no-wrap
msgid "FcAtomicDestroy"
msgstr ""

#. type: Plain text
#: original/man3/FcAtomicDestroy.3:10
msgid "FcAtomicDestroy - destroy an FcAtomic object"
msgstr ""

#. type: Plain text
#: original/man3/FcAtomicDestroy.3:16
msgid "B<void FcAtomicDestroy (FcAtomic *>I<atomic>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcAtomicDestroy.3:18
msgid "Destroys I<atomic>\\&."
msgstr ""

#. type: TH
#: original/man3/FcAtomicLock.3:6
#, no-wrap
msgid "FcAtomicLock"
msgstr ""

#. type: Plain text
#: original/man3/FcAtomicLock.3:10
msgid "FcAtomicLock - lock a file"
msgstr ""

#. type: Plain text
#: original/man3/FcAtomicLock.3:16
msgid "B<FcBool FcAtomicLock (FcAtomic *>I<atomic>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcAtomicLock.3:20
msgid ""
"Attempts to lock the file referenced by I<atomic>\\&.  Returns FcFalse if "
"the file is already locked, else returns FcTrue and leaves the file locked."
msgstr ""

#. type: TH
#: original/man3/FcAtomicNewFile.3:6
#, no-wrap
msgid "FcAtomicNewFile"
msgstr ""

#. type: Plain text
#: original/man3/FcAtomicNewFile.3:10
msgid "FcAtomicNewFile - return new temporary file name"
msgstr ""

#. type: Plain text
#: original/man3/FcAtomicNewFile.3:16
msgid "B<FcChar8 * FcAtomicNewFile (FcAtomic *>I<atomic>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcAtomicNewFile.3:19
msgid ""
"Returns the filename for writing a new version of the file referenced by "
"I<atomic>\\&."
msgstr ""

#. type: TH
#: original/man3/FcAtomicOrigFile.3:6
#, no-wrap
msgid "FcAtomicOrigFile"
msgstr ""

#. type: Plain text
#: original/man3/FcAtomicOrigFile.3:10
msgid "FcAtomicOrigFile - return original file name"
msgstr ""

#. type: Plain text
#: original/man3/FcAtomicOrigFile.3:16
msgid "B<FcChar8 * FcAtomicOrigFile (FcAtomic *>I<atomic>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcAtomicOrigFile.3:18
msgid "Returns the file referenced by I<atomic>\\&."
msgstr ""

#. type: TH
#: original/man3/FcAtomicReplaceOrig.3:6
#, no-wrap
msgid "FcAtomicReplaceOrig"
msgstr ""

#. type: Plain text
#: original/man3/FcAtomicReplaceOrig.3:10
msgid "FcAtomicReplaceOrig - replace original with new"
msgstr ""

#. type: Plain text
#: original/man3/FcAtomicReplaceOrig.3:16
msgid "B<FcBool FcAtomicReplaceOrig (FcAtomic *>I<atomic>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcAtomicReplaceOrig.3:20
msgid ""
"Replaces the original file referenced by I<atomic> with the new "
"file. Returns FcFalse if the file cannot be replaced due to permission "
"issues in the filesystem. Otherwise returns FcTrue."
msgstr ""

#. type: TH
#: original/man3/FcAtomicUnlock.3:6
#, no-wrap
msgid "FcAtomicUnlock"
msgstr ""

#. type: Plain text
#: original/man3/FcAtomicUnlock.3:10
msgid "FcAtomicUnlock - unlock a file"
msgstr ""

#. type: Plain text
#: original/man3/FcAtomicUnlock.3:16
msgid "B<void FcAtomicUnlock (FcAtomic *>I<atomic>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcAtomicUnlock.3:18
msgid "Unlocks the file."
msgstr ""

#. type: TH
#: original/man3/FcBlanksAdd.3:6
#, no-wrap
msgid "FcBlanksAdd"
msgstr ""

#. type: Plain text
#: original/man3/FcBlanksAdd.3:10
msgid "FcBlanksAdd - Add a character to an FcBlanks"
msgstr ""

#. type: Plain text
#: original/man3/FcBlanksAdd.3:16
msgid "B<FcBool FcBlanksAdd (FcBlanks *>I<b>B<, FcChar32 >I<ucs4>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcBlanksAdd.3:19 original/man3/FcBlanksIsMember.3:19
msgid "FcBlanks is deprecated.  This function always returns FALSE."
msgstr ""

#. type: TH
#: original/man3/FcBlanksCreate.3:6
#, no-wrap
msgid "FcBlanksCreate"
msgstr ""

#. type: Plain text
#: original/man3/FcBlanksCreate.3:10
msgid "FcBlanksCreate - Create an FcBlanks"
msgstr ""

#. type: Plain text
#: original/man3/FcBlanksCreate.3:16
msgid "B<FcBlanks * FcBlanksCreate (void>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcBlanksCreate.3:19 original/man3/FcConfigGetBlanks.3:19
msgid "FcBlanks is deprecated.  This function always returns NULL."
msgstr ""

#. type: TH
#: original/man3/FcBlanksDestroy.3:6
#, no-wrap
msgid "FcBlanksDestroy"
msgstr ""

#. type: Plain text
#: original/man3/FcBlanksDestroy.3:10
msgid "FcBlanksDestroy - Destroy and FcBlanks"
msgstr ""

#. type: Plain text
#: original/man3/FcBlanksDestroy.3:16
msgid "B<void FcBlanksDestroy (FcBlanks *>I<b>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcBlanksDestroy.3:19
msgid "FcBlanks is deprecated.  This function does nothing."
msgstr ""

#. type: TH
#: original/man3/FcBlanksIsMember.3:6
#, no-wrap
msgid "FcBlanksIsMember"
msgstr ""

#. type: Plain text
#: original/man3/FcBlanksIsMember.3:10
msgid "FcBlanksIsMember - Query membership in an FcBlanks"
msgstr ""

#. type: Plain text
#: original/man3/FcBlanksIsMember.3:16
msgid "B<FcBool FcBlanksIsMember (FcBlanks *>I<b>B<, FcChar32 >I<ucs4>B<);>"
msgstr ""

#. type: TH
#: original/man3/FcCacheCopySet.3:6
#, no-wrap
msgid "FcCacheCopySet"
msgstr ""

#. type: Plain text
#: original/man3/FcCacheCopySet.3:10
msgid "FcCacheCopySet - Returns a copy of the fontset from cache"
msgstr ""

#. type: Plain text
#: original/man3/FcCacheCopySet.3:16
msgid "B<FcFontSet * FcCacheCopySet (const FcCache *>I<cache>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcCacheCopySet.3:20
msgid ""
"The returned fontset contains each of the font patterns from "
"I<cache>\\&. This fontset may be modified, but the patterns from the cache "
"are read-only."
msgstr ""

#. type: TH
#: original/man3/FcCacheCreateTagFile.3:6
#, no-wrap
msgid "FcCacheCreateTagFile"
msgstr ""

#. type: Plain text
#: original/man3/FcCacheCreateTagFile.3:10
msgid "FcCacheCreateTagFile - Create CACHEDIR.TAG at cache directory."
msgstr ""

#. type: Plain text
#: original/man3/FcCacheCreateTagFile.3:16
msgid "B<void FcCacheCreateTagFile (const FcConfig *>I<config>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcCacheCreateTagFile.3:20
msgid ""
"This tries to create CACHEDIR.TAG file at the cache directory registered to "
"I<config>\\&."
msgstr ""

#. type: SH
#: original/man3/FcCacheCreateTagFile.3:20 original/man3/FcCharSetDelChar.3:21
#: original/man3/FcConfigFileInfoIterGet.3:25
#: original/man3/FcConfigFileInfoIterInit.3:26
#: original/man3/FcConfigFileInfoIterNext.3:24
#: original/man3/FcConfigGetSysRoot.3:25
#: original/man3/FcConfigParseAndLoadFromMemory.3:24
#: original/man3/FcConfigSetSysRoot.3:25 original/man3/FcDirCacheClean.3:20
#: original/man3/FcDirCacheCreateUUID.3:19
#: original/man3/FcDirCacheDeleteUUID.3:20 original/man3/FcDirCacheRescan.3:20
#: original/man3/FcFreeTypeQueryAll.3:26 original/man3/FcGetDefaultLangs.3:21
#: original/man3/FcLangNormalize.3:19 original/man3/FcLangSetDel.3:22
#: original/man3/FcLangSetSubtract.3:19 original/man3/FcLangSetUnion.3:19
#: original/man3/FcPatternFindIter.3:20 original/man3/FcPatternFormat.3:209
#: original/man3/FcPatternGetWithBinding.3:23
#: original/man3/FcPatternIterEqual.3:20
#: original/man3/FcPatternIterGetObject.3:21
#: original/man3/FcPatternIterGetValue.3:23
#: original/man3/FcPatternIterIsValid.3:20 original/man3/FcPatternIterNext.3:21
#: original/man3/FcPatternIterStart.3:21
#: original/man3/FcPatternIterValueCount.3:20
#: original/man3/FcPatternObjectCount.3:19 original/man3/FcRangeCopy.3:20
#: original/man3/FcRangeCreateDouble.3:20
#: original/man3/FcRangeCreateInteger.3:20 original/man3/FcRangeDestroy.3:20
#: original/man3/FcRangeGetDouble.3:19 original/man3/FcStrListFirst.3:19
#: original/man3/FcWeightFromOpenType.3:21
#: original/man3/FcWeightFromOpenTypeDouble.3:25
#: original/man3/FcWeightToOpenType.3:21
#: original/man3/FcWeightToOpenTypeDouble.3:22
#, no-wrap
msgid "SINCE"
msgstr ""

#. type: Plain text
#: original/man3/FcCacheCreateTagFile.3:22 original/man3/FcDirCacheClean.3:22
#: original/man3/FcGetDefaultLangs.3:23
msgid "version 2.9.91"
msgstr ""

#. type: TH
#: original/man3/FcCacheDir.3:6
#, no-wrap
msgid "FcCacheDir"
msgstr ""

#. type: Plain text
#: original/man3/FcCacheDir.3:10
msgid "FcCacheDir - Return directory of cache"
msgstr ""

#. type: Plain text
#: original/man3/FcCacheDir.3:16
msgid "B<const FcChar8 * FcCacheDir (const FcCache *>I<cache>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcCacheDir.3:18
msgid "This function returns the directory from which the cache was constructed."
msgstr ""

#. type: TH
#: original/man3/FcCacheNumFont.3:6
#, no-wrap
msgid "FcCacheNumFont"
msgstr ""

#. type: Plain text
#: original/man3/FcCacheNumFont.3:10
msgid "FcCacheNumFont - Returns the number of fonts in cache."
msgstr ""

#. type: Plain text
#: original/man3/FcCacheNumFont.3:16
msgid "B<int FcCacheNumFont (const FcCache *>I<cache>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcCacheNumFont.3:19
msgid ""
"This returns the number of fonts which would be included in the return from "
"FcCacheCopySet."
msgstr ""

#. type: TH
#: original/man3/FcCacheNumSubdir.3:6
#, no-wrap
msgid "FcCacheNumSubdir"
msgstr ""

#. type: Plain text
#: original/man3/FcCacheNumSubdir.3:10
msgid "FcCacheNumSubdir - Return the number of subdirectories in cache."
msgstr ""

#. type: Plain text
#: original/man3/FcCacheNumSubdir.3:16
msgid "B<int FcCacheNumSubdir (const FcCache *>I<cache>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcCacheNumSubdir.3:18
msgid "This returns the total number of subdirectories in the cache."
msgstr ""

#. type: TH
#: original/man3/FcCacheSubdir.3:6
#, no-wrap
msgid "FcCacheSubdir"
msgstr ""

#. type: Plain text
#: original/man3/FcCacheSubdir.3:10
msgid "FcCacheSubdir - Return the i'th subdirectory."
msgstr ""

#. type: Plain text
#: original/man3/FcCacheSubdir.3:16
msgid "B<const FcChar8 * FcCacheSubdir (const FcCache *>I<cache>B<, int>I<i>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcCacheSubdir.3:21
msgid ""
"The set of subdirectories stored in a cache file are indexed by this "
"function, I<i> should range from 0 to I<n>-1, where I<n> is the return value "
"from FcCacheNumSubdir."
msgstr ""

#. type: TH
#: original/man3/FcCharSetAddChar.3:6
#, no-wrap
msgid "FcCharSetAddChar"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetAddChar.3:10
msgid "FcCharSetAddChar - Add a character to a charset"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetAddChar.3:16
msgid "B<FcBool FcCharSetAddChar (FcCharSet *>I<fcs>B<, FcChar32 >I<ucs4>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetAddChar.3:20
msgid ""
"B<FcCharSetAddChar> adds a single Unicode char to the set, returning FcFalse "
"on failure, either as a result of a constant set or from running out of "
"memory."
msgstr ""

#. type: TH
#: original/man3/FcCharSetCopy.3:6
#, no-wrap
msgid "FcCharSetCopy"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetCopy.3:10
msgid "FcCharSetCopy - Copy a charset"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetCopy.3:16
msgid "B<FcCharSet * FcCharSetCopy (FcCharSet *>I<src>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetCopy.3:19
msgid ""
"Makes a copy of I<src>; note that this may not actually do anything more "
"than increment the reference count on I<src>\\&."
msgstr ""

#. type: TH
#: original/man3/FcCharSetCount.3:6
#, no-wrap
msgid "FcCharSetCount"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetCount.3:10
msgid "FcCharSetCount - Count entries in a charset"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetCount.3:16
msgid "B<FcChar32 FcCharSetCount (const FcCharSet *>I<a>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetCount.3:18
msgid "Returns the total number of Unicode chars in I<a>\\&."
msgstr ""

#. type: TH
#: original/man3/FcCharSetCoverage.3:6
#, no-wrap
msgid "FcCharSetCoverage"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetCoverage.3:10
msgid "FcCharSetCoverage - DEPRECATED return coverage for a Unicode page"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetCoverage.3:16
msgid ""
"B<FcChar32 FcCharSetCoverage (const FcCharSet *>I<a>B<, FcChar32>I<page>B<, "
"FcChar32[8]>I<result>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetCoverage.3:23
msgid ""
"DEPRECATED This function returns a bitmask in I<result> which indicates "
"which code points in I<page> are included in I<a>\\&.  B<FcCharSetCoverage> "
"returns the next page in the charset which has any coverage."
msgstr ""

#. type: TH
#: original/man3/FcCharSetCreate.3:6
#, no-wrap
msgid "FcCharSetCreate"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetCreate.3:10
msgid "FcCharSetCreate - Create an empty character set"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetCreate.3:16
msgid "B<FcCharSet * FcCharSetCreate (void>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetCreate.3:19
msgid ""
"B<FcCharSetCreate> allocates and initializes a new empty character set "
"object."
msgstr ""

#. type: TH
#: original/man3/FcCharSetDelChar.3:6
#, no-wrap
msgid "FcCharSetDelChar"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetDelChar.3:10
msgid "FcCharSetDelChar - Add a character to a charset"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetDelChar.3:16
msgid "B<FcBool FcCharSetDelChar (FcCharSet *>I<fcs>B<, FcChar32 >I<ucs4>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetDelChar.3:21
msgid ""
"B<FcCharSetDelChar> deletes a single Unicode char from the set, returning "
"FcFalse on failure, either as a result of a constant set or from running out "
"of memory."
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetDelChar.3:23 original/man3/FcLangSetDel.3:24
#: original/man3/FcLangSetSubtract.3:21 original/man3/FcLangSetUnion.3:21
#: original/man3/FcPatternFormat.3:211
msgid "version 2.9.0"
msgstr ""

#. type: TH
#: original/man3/FcCharSetDestroy.3:6
#, no-wrap
msgid "FcCharSetDestroy"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetDestroy.3:10
msgid "FcCharSetDestroy - Destroy a character set"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetDestroy.3:16
msgid "B<void FcCharSetDestroy (FcCharSet *>I<fcs>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetDestroy.3:20
msgid ""
"B<FcCharSetDestroy> decrements the reference count I<fcs>\\&.  If the "
"reference count becomes zero, all memory referenced is freed."
msgstr ""

#. type: TH
#: original/man3/FcCharSetEqual.3:6
#, no-wrap
msgid "FcCharSetEqual"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetEqual.3:10
msgid "FcCharSetEqual - Compare two charsets"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetEqual.3:16
msgid ""
"B<FcBool FcCharSetEqual (const FcCharSet *>I<a>B<, const FcCharSet "
"*>I<b>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetEqual.3:19
msgid "Returns whether I<a> and I<b> contain the same set of Unicode chars."
msgstr ""

#. type: TH
#: original/man3/FcCharSetFirstPage.3:6
#, no-wrap
msgid "FcCharSetFirstPage"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetFirstPage.3:10
msgid "FcCharSetFirstPage - Start enumerating charset contents"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetFirstPage.3:16
msgid ""
"B<FcChar32 FcCharSetFirstPage (const FcCharSet *>I<a>B<, "
"FcChar32[FC_CHARSET_MAP_SIZE] >I<map>B<, FcChar32 *>I<next>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetFirstPage.3:26
msgid ""
"Builds an array of bits in I<map> marking the first page of Unicode coverage "
"of I<a>\\&.  I<*next> is set to contains the base code point for the next "
"page in I<a>\\&.  Returns the base code point for the page, or "
"FC_CHARSET_DONE if I<a> contains no pages.  As an example, if "
"B<FcCharSetFirstPage> returns 0x300 and fills I<map> with"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetFirstPage.3:29
#, no-wrap
msgid ""
"0xffffffff 0xffffffff 0x01000008 0x44300002 0xffffd7f0 0xfffffffb 0xffff7fff "
"0xffff0003\n"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetFirstPage.3:39
msgid ""
"Then the page contains code points 0x300 through 0x33f (the first 64 code "
"points on the page)  because I<map[0]> and I<map[1]> both have all their "
"bits set.  It also contains code points 0x343 (I<0x300 + 32*2 + (4-1)>) and "
"0x35e (I<0x300 + 32*2 + (31-1)>) because I<map[2]> has the 4th and 31st bits "
"set.  The code points represented by map[3] and later are left as an "
"exercise for the reader ;)."
msgstr ""

#. type: TH
#: original/man3/FcCharSetHasChar.3:6
#, no-wrap
msgid "FcCharSetHasChar"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetHasChar.3:10
msgid "FcCharSetHasChar - Check a charset for a char"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetHasChar.3:16
msgid ""
"B<FcBool FcCharSetHasChar (const FcCharSet *>I<fcs>B<, FcChar32 "
">I<ucs4>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetHasChar.3:18
msgid "Returns whether I<fcs> contains the char I<ucs4>\\&."
msgstr ""

#. type: TH
#: original/man3/FcCharSetIntersect.3:6
#, no-wrap
msgid "FcCharSetIntersect"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetIntersect.3:10
msgid "FcCharSetIntersect - Intersect charsets"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetIntersect.3:16
msgid ""
"B<FcCharSet * FcCharSetIntersect (const FcCharSet *>I<a>B<, const FcCharSet "
"*>I<b>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetIntersect.3:19
msgid "Returns a set including only those chars found in both I<a> and I<b>\\&."
msgstr ""

#. type: TH
#: original/man3/FcCharSetIntersectCount.3:6
#, no-wrap
msgid "FcCharSetIntersectCount"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetIntersectCount.3:10
msgid "FcCharSetIntersectCount - Intersect and count charsets"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetIntersectCount.3:16
msgid ""
"B<FcChar32 FcCharSetIntersectCount (const FcCharSet *>I<a>B<, const "
"FcCharSet *>I<b>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetIntersectCount.3:18
msgid "Returns the number of chars that are in both I<a> and I<b>\\&."
msgstr ""

#. type: TH
#: original/man3/FcCharSetIsSubset.3:6
#, no-wrap
msgid "FcCharSetIsSubset"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetIsSubset.3:10
msgid "FcCharSetIsSubset - Test for charset inclusion"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetIsSubset.3:16
msgid ""
"B<FcBool FcCharSetIsSubset (const FcCharSet *>I<a>B<, const FcCharSet "
"*>I<b>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetIsSubset.3:18
msgid "Returns whether I<a> is a subset of I<b>\\&."
msgstr ""

#. type: TH
#: original/man3/FcCharSetMerge.3:6
#, no-wrap
msgid "FcCharSetMerge"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetMerge.3:10
msgid "FcCharSetMerge - Merge charsets"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetMerge.3:16
msgid ""
"B<FcBool FcCharSetMerge (FcCharSet *>I<a>B<, const FcCharSet *>I<b>B<, "
"FcBool *>I<changed>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetMerge.3:23
msgid ""
"Adds all chars in I<b> to I<a>\\&.  In other words, this is an in-place "
"version of FcCharSetUnion.  If I<changed> is not NULL, then it returns "
"whether any new chars from I<b> were added to I<a>\\&.  Returns FcFalse on "
"failure, either when I<a> is a constant set or from running out of memory."
msgstr ""

#. type: TH
#: original/man3/FcCharSetNew.3:6
#, no-wrap
msgid "FcCharSetNew"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetNew.3:10
msgid "FcCharSetNew - DEPRECATED alias for FcCharSetCreate"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetNew.3:16
msgid "B<FcCharSet * FcCharSetNew (void>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetNew.3:18
msgid "B<FcCharSetNew> is a DEPRECATED alias for FcCharSetCreate."
msgstr ""

#. type: TH
#: original/man3/FcCharSetNextPage.3:6
#, no-wrap
msgid "FcCharSetNextPage"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetNextPage.3:10
msgid "FcCharSetNextPage - Continue enumerating charset contents"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetNextPage.3:16
msgid ""
"B<FcChar32 FcCharSetNextPage (const FcCharSet *>I<a>B<, "
"FcChar32[FC_CHARSET_MAP_SIZE] >I<map>B<, FcChar32 *>I<next>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetNextPage.3:26
msgid ""
"Builds an array of bits in I<map> marking the Unicode coverage of I<a> for "
"page containing I<*next> (see the B<FcCharSetFirstPage> description for "
"details).  I<*next> is set to contains the base code point for the next page "
"in I<a>\\&.  Returns the base of code point for the page, or FC_CHARSET_DONE "
"if I<a> does not contain I<*next>\\&."
msgstr ""

#. type: TH
#: original/man3/FcCharSetSubtract.3:6
#, no-wrap
msgid "FcCharSetSubtract"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetSubtract.3:10
msgid "FcCharSetSubtract - Subtract charsets"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetSubtract.3:16
msgid ""
"B<FcCharSet * FcCharSetSubtract (const FcCharSet *>I<a>B<, const FcCharSet "
"*>I<b>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetSubtract.3:18
msgid "Returns a set including only those chars found in I<a> but not I<b>\\&."
msgstr ""

#. type: TH
#: original/man3/FcCharSetSubtractCount.3:6
#, no-wrap
msgid "FcCharSetSubtractCount"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetSubtractCount.3:10
msgid "FcCharSetSubtractCount - Subtract and count charsets"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetSubtractCount.3:16
msgid ""
"B<FcChar32 FcCharSetSubtractCount (const FcCharSet *>I<a>B<, const FcCharSet "
"*>I<b>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetSubtractCount.3:18
msgid "Returns the number of chars that are in I<a> but not in I<b>\\&."
msgstr ""

#. type: TH
#: original/man3/FcCharSetUnion.3:6
#, no-wrap
msgid "FcCharSetUnion"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetUnion.3:10
msgid "FcCharSetUnion - Add charsets"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetUnion.3:16
msgid ""
"B<FcCharSet * FcCharSetUnion (const FcCharSet *>I<a>B<, const FcCharSet "
"*>I<b>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcCharSetUnion.3:18
msgid "Returns a set including only those chars found in either I<a> or I<b>\\&."
msgstr ""

#. type: TH
#: original/man3/FcConfigAppFontAddDir.3:6
#, no-wrap
msgid "FcConfigAppFontAddDir"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigAppFontAddDir.3:10
msgid "FcConfigAppFontAddDir - Add fonts from directory to font database"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigAppFontAddDir.3:16
msgid ""
"B<FcBool FcConfigAppFontAddDir (FcConfig *>I<config>B<, const FcChar8 "
"*>I<dir>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigAppFontAddDir.3:22
msgid ""
"Scans the specified directory for fonts, adding each one found to the "
"application-specific set of fonts. Returns FcFalse if the fonts cannot be "
"added (due to allocation failure).  Otherwise returns FcTrue. If I<config> "
"is NULL, the current configuration is used."
msgstr ""

#. type: TH
#: original/man3/FcConfigAppFontAddFile.3:6
#, no-wrap
msgid "FcConfigAppFontAddFile"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigAppFontAddFile.3:10
msgid "FcConfigAppFontAddFile - Add font file to font database"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigAppFontAddFile.3:16
msgid ""
"B<FcBool FcConfigAppFontAddFile (FcConfig *>I<config>B<, const FcChar8 "
"*>I<file>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigAppFontAddFile.3:21
msgid ""
"Adds an application-specific font to the configuration. Returns FcFalse if "
"the fonts cannot be added (due to allocation failure or no fonts found).  "
"Otherwise returns FcTrue. If I<config> is NULL, the current configuration is "
"used."
msgstr ""

#. type: TH
#: original/man3/FcConfigAppFontClear.3:6
#, no-wrap
msgid "FcConfigAppFontClear"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigAppFontClear.3:10
msgid "FcConfigAppFontClear - Remove all app fonts from font database"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigAppFontClear.3:16
msgid "B<void FcConfigAppFontClear (FcConfig *>I<config>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigAppFontClear.3:19
msgid ""
"Clears the set of application-specific fonts.  If I<config> is NULL, the "
"current configuration is used."
msgstr ""

#. type: TH
#: original/man3/FcConfigBuildFonts.3:6
#, no-wrap
msgid "FcConfigBuildFonts"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigBuildFonts.3:10
msgid "FcConfigBuildFonts - Build font database"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigBuildFonts.3:16
msgid "B<FcBool FcConfigBuildFonts (FcConfig *>I<config>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigBuildFonts.3:21
msgid ""
"Builds the set of available fonts for the given configuration.  Note that "
"any changes to the configuration after this call have indeterminate "
"effects.  Returns FcFalse if this operation runs out of memory.  If "
"I<config> is NULL, the current configuration is used."
msgstr ""

#. type: TH
#: original/man3/FcConfigCreate.3:6
#, no-wrap
msgid "FcConfigCreate"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigCreate.3:10
msgid "FcConfigCreate - Create a configuration"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigCreate.3:16
msgid "B<FcConfig * FcConfigCreate (void>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigCreate.3:18
msgid "Creates an empty configuration."
msgstr ""

#. type: TH
#: original/man3/FcConfigDestroy.3:6
#, no-wrap
msgid "FcConfigDestroy"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigDestroy.3:10
msgid "FcConfigDestroy - Destroy a configuration"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigDestroy.3:16
msgid "B<void FcConfigDestroy (FcConfig *>I<config>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigDestroy.3:21
msgid ""
"Decrements the config reference count. If all references are gone, destroys "
"the configuration and any data associated with it.  Note that calling this "
"function with the return from FcConfigGetCurrent will cause a new "
"configuration to be created for use as current configuration."
msgstr ""

#. type: TH
#: original/man3/FcConfigEnableHome.3:6
#, no-wrap
msgid "FcConfigEnableHome"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigEnableHome.3:10
msgid "FcConfigEnableHome - controls use of the home directory."
msgstr ""

#. type: Plain text
#: original/man3/FcConfigEnableHome.3:16
msgid "B<FcBool FcConfigEnableHome (FcBool >I<enable>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigEnableHome.3:22
msgid ""
"If I<enable> is FcTrue, then Fontconfig will use various files which are "
"specified relative to the user's home directory (using the ~ notation in the "
"configuration). When I<enable> is FcFalse, then all use of the home "
"directory in these contexts will be disabled. The previous setting of the "
"value is returned."
msgstr ""

#. type: TH
#: original/man3/FcConfigFileInfoIterGet.3:6
#, no-wrap
msgid "FcConfigFileInfoIterGet"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigFileInfoIterGet.3:10
msgid "FcConfigFileInfoIterGet - Obtain the configuration file information"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigFileInfoIterGet.3:16
msgid ""
"B<FcBool FcConfigFileInfoIterGet (FcConfig *>I<config>B<, "
"FcConfigFileInfoIter *>I<iter>B<, FcChar8 **>I<name>B<, FcChar8 "
"**>I<description>B<, FcBool *>I<enabled>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigFileInfoIterGet.3:21
msgid ""
"Obtain the filename, the description and the flag whether it is enabled or "
"not for 'iter' where points to current configuration file information.  If "
"the iterator is invalid, FcFalse is returned."
msgstr ""

#. type: Plain text
#: original/man3/FcConfigFileInfoIterGet.3:25
#: original/man3/FcConfigFileInfoIterNext.3:24
msgid ""
"This function isn't MT-safe. B<FcConfigReference> must be called before "
"using B<FcConfigFileInfoIterInit> and then B<FcConfigDestroy> when the "
"relevant values are no longer referenced."
msgstr ""

#. type: Plain text
#: original/man3/FcConfigFileInfoIterGet.3:27
#: original/man3/FcConfigFileInfoIterInit.3:28
#: original/man3/FcConfigFileInfoIterNext.3:26
#: original/man3/FcFreeTypeQueryAll.3:28
msgid "version 2.12.91"
msgstr ""

#. type: TH
#: original/man3/FcConfigFileInfoIterInit.3:6
#, no-wrap
msgid "FcConfigFileInfoIterInit"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigFileInfoIterInit.3:10
msgid "FcConfigFileInfoIterInit - Initialize the iterator"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigFileInfoIterInit.3:16
msgid ""
"B<void FcConfigFileInfoIterInit (FcConfig *>I<config>B<, "
"FcConfigFileInfoIter *>I<iter>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigFileInfoIterInit.3:19
msgid ""
"Initialize 'iter' with the first iterator in the config file information "
"list."
msgstr ""

#. type: Plain text
#: original/man3/FcConfigFileInfoIterInit.3:22
msgid ""
"The config file information list is stored in numerical order for filenames "
"i.e. how fontconfig actually read them."
msgstr ""

#. type: Plain text
#: original/man3/FcConfigFileInfoIterInit.3:26
msgid ""
"This function isn't MT-safe. B<FcConfigReference> must be called before "
"using this and then B<FcConfigDestroy> when the relevant values are no "
"longer referenced."
msgstr ""

#. type: TH
#: original/man3/FcConfigFileInfoIterNext.3:6
#, no-wrap
msgid "FcConfigFileInfoIterNext"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigFileInfoIterNext.3:10
msgid "FcConfigFileInfoIterNext - Set the iterator to point to the next list"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigFileInfoIterNext.3:16
msgid ""
"B<FcBool FcConfigFileInfoIterNext (FcConfig *>I<config>B<, "
"FcConfigFileInfoIter *>I<iter>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigFileInfoIterNext.3:20
msgid ""
"Set 'iter' to point to the next node in the config file information list.  "
"If there is no next node, FcFalse is returned."
msgstr ""

#. type: TH
#: original/man3/FcConfigFilename.3:6
#, no-wrap
msgid "FcConfigFilename"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigFilename.3:10
msgid "FcConfigFilename - Find a config file"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigFilename.3:16
msgid "B<FcChar8 * FcConfigFilename (const FcChar8 *>I<name>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigFilename.3:18
msgid "This function is deprecated and is replaced by B<FcConfigGetFilename>\\&."
msgstr ""

#. type: TH
#: original/man3/FcConfigGetBlanks.3:6
#, no-wrap
msgid "FcConfigGetBlanks"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetBlanks.3:10
msgid "FcConfigGetBlanks - Get config blanks"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetBlanks.3:16
msgid "B<FcBlanks * FcConfigGetBlanks (FcConfig *>I<config>B<);>"
msgstr ""

#. type: TH
#: original/man3/FcConfigGetCache.3:6
#, no-wrap
msgid "FcConfigGetCache"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetCache.3:10
msgid "FcConfigGetCache - DEPRECATED used to return per-user cache filename"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetCache.3:16
msgid "B<FcChar8 * FcConfigGetCache (FcConfig *>I<config>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetCache.3:19
msgid ""
"With fontconfig no longer using per-user cache files, this function now "
"simply returns NULL to indicate that no per-user file exists."
msgstr ""

#. type: TH
#: original/man3/FcConfigGetCacheDirs.3:6
#, no-wrap
msgid "FcConfigGetCacheDirs"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetCacheDirs.3:10
msgid ""
"FcConfigGetCacheDirs - return the list of directories searched for cache "
"files"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetCacheDirs.3:16
msgid "B<FcStrList * FcConfigGetCacheDirs (const FcConfig *>I<config>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetCacheDirs.3:21
msgid ""
"B<FcConfigGetCacheDirs> returns a string list containing all of the "
"directories that fontconfig will search when attempting to load a cache file "
"for a font directory.  If I<config> is NULL, the current configuration is "
"used."
msgstr ""

#. type: TH
#: original/man3/FcConfigGetConfigDirs.3:6
#, no-wrap
msgid "FcConfigGetConfigDirs"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetConfigDirs.3:10
msgid "FcConfigGetConfigDirs - Get config directories"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetConfigDirs.3:16
msgid "B<FcStrList * FcConfigGetConfigDirs (FcConfig *>I<config>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetConfigDirs.3:20
msgid ""
"Returns the list of font directories specified in the configuration files "
"for I<config>\\&.  Does not include any subdirectories.  If I<config> is "
"NULL, the current configuration is used."
msgstr ""

#. type: TH
#: original/man3/FcConfigGetConfigFiles.3:6
#, no-wrap
msgid "FcConfigGetConfigFiles"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetConfigFiles.3:10
msgid "FcConfigGetConfigFiles - Get config files"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetConfigFiles.3:16
msgid "B<FcStrList * FcConfigGetConfigFiles (FcConfig *>I<config>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetConfigFiles.3:19
msgid ""
"Returns the list of known configuration files used to generate "
"I<config>\\&.  If I<config> is NULL, the current configuration is used."
msgstr ""

#. type: TH
#: original/man3/FcConfigGetCurrent.3:6
#, no-wrap
msgid "FcConfigGetCurrent"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetCurrent.3:10
msgid "FcConfigGetCurrent - Return current configuration"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetCurrent.3:16
msgid "B<FcConfig * FcConfigGetCurrent (void>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetCurrent.3:18
msgid "Returns the current default configuration."
msgstr ""

#. type: TH
#: original/man3/FcConfigGetFilename.3:6
#, no-wrap
msgid "FcConfigGetFilename"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetFilename.3:10
msgid "FcConfigGetFilename - Find a config file"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetFilename.3:16
msgid ""
"B<FcChar8 * FcConfigGetFilename (FcConfig *>I<config>B<, const FcChar8 "
"*>I<name>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetFilename.3:21
msgid ""
"Given the specified external entity name, return the associated filename.  "
"This provides applications a way to convert various configuration file "
"references into filename form."
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetFilename.3:29
msgid ""
"A null or empty I<name> indicates that the default configuration file should "
"be used; which file this references can be overridden with the "
"FONTCONFIG_FILE environment variable.  Next, if the name starts with I<~>, "
"it refers to a file in the current users home directory.  Otherwise if the "
"name doesn't start with '/', it refers to a file in the default "
"configuration directory; the built-in default directory can be overridden "
"with the FONTCONFIG_PATH environment variable."
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetFilename.3:30
msgid ""
"The result of this function is affected by the FONTCONFIG_SYSROOT "
"environment variable or equivalent functionality."
msgstr ""

#. type: TH
#: original/man3/FcConfigGetFontDirs.3:6
#, no-wrap
msgid "FcConfigGetFontDirs"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetFontDirs.3:10
msgid "FcConfigGetFontDirs - Get font directories"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetFontDirs.3:16
msgid "B<FcStrList * FcConfigGetFontDirs (FcConfig *>I<config>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetFontDirs.3:21
msgid ""
"Returns the list of font directories in I<config>\\&. This includes the "
"configured font directories along with any directories below those in the "
"filesystem.  If I<config> is NULL, the current configuration is used."
msgstr ""

#. type: TH
#: original/man3/FcConfigGetFonts.3:6
#, no-wrap
msgid "FcConfigGetFonts"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetFonts.3:10
msgid "FcConfigGetFonts - Get config font set"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetFonts.3:16
msgid ""
"B<FcFontSet * FcConfigGetFonts (FcConfig *>I<config>B<, FcSetName "
">I<set>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetFonts.3:22
msgid ""
"Returns one of the two sets of fonts from the configuration as specified by "
"I<set>\\&. This font set is owned by the library and must not be modified or "
"freed.  If I<config> is NULL, the current configuration is used."
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetFonts.3:25 original/man3/FcConfigGetSysRoot.3:25
msgid ""
"This function isn't MT-safe. B<FcConfigReference> must be called before "
"using this and then B<FcConfigDestroy> when the return value is no longer "
"referenced."
msgstr ""

#. type: TH
#: original/man3/FcConfigGetRescanInterval.3:6
#, no-wrap
msgid "FcConfigGetRescanInterval"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetRescanInterval.3:10
msgid "FcConfigGetRescanInterval - Get config rescan interval"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetRescanInterval.3:16
msgid "B<int FcConfigGetRescanInterval (FcConfig *>I<config>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetRescanInterval.3:22
msgid ""
"Returns the interval between automatic checks of the configuration (in "
"seconds) specified in I<config>\\&.  The configuration is checked during a "
"call to FcFontList when this interval has passed since the last check.  An "
"interval setting of zero disables automatic checks.  If I<config> is NULL, "
"the current configuration is used."
msgstr ""

#. type: TH
#: original/man3/FcConfigGetSysRoot.3:6
#, no-wrap
msgid "FcConfigGetSysRoot"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetSysRoot.3:10
msgid "FcConfigGetSysRoot - Obtain the system root directory"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetSysRoot.3:16
msgid "B<const FcChar8 * FcConfigGetSysRoot (const FcConfig *>I<config>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetSysRoot.3:21
msgid ""
"Obtains the system root directory in 'config' if available. All files "
"(including file properties in patterns) obtained from this 'config' are "
"relative to this system root directory."
msgstr ""

#. type: Plain text
#: original/man3/FcConfigGetSysRoot.3:27 original/man3/FcConfigSetSysRoot.3:27
msgid "version 2.10.92"
msgstr ""

#. type: TH
#: original/man3/FcConfigHome.3:6
#, no-wrap
msgid "FcConfigHome"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigHome.3:10
msgid "FcConfigHome - return the current home directory."
msgstr ""

#. type: Plain text
#: original/man3/FcConfigHome.3:16
msgid "B<FcChar8 * FcConfigHome (void>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigHome.3:20
msgid ""
"Return the current user's home directory, if it is available, and if using "
"it is enabled, and NULL otherwise.  See also B<FcConfigEnableHome>)."
msgstr ""

#. type: TH
#: original/man3/FcConfigParseAndLoad.3:6
#, no-wrap
msgid "FcConfigParseAndLoad"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigParseAndLoad.3:10
msgid "FcConfigParseAndLoad - load a configuration file"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigParseAndLoad.3:16
msgid ""
"B<FcBool FcConfigParseAndLoad (FcConfig *>I<config>B<, const FcChar8 "
"*>I<file>B<, FcBool >I<complain>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigParseAndLoad.3:23
msgid ""
"Walks the configuration in 'file' and constructs the internal representation "
"in 'config'.  Any include files referenced from within 'file' will be loaded "
"and parsed.  If 'complain' is FcFalse, no warning will be displayed if "
"\\&'file' does not exist. Error and warning messages will be output to "
"stderr.  Returns FcFalse if some error occurred while loading the file, "
"either a parse error, semantic error or allocation failure. Otherwise "
"returns FcTrue."
msgstr ""

#. type: TH
#: original/man3/FcConfigParseAndLoadFromMemory.3:6
#, no-wrap
msgid "FcConfigParseAndLoadFromMemory"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigParseAndLoadFromMemory.3:10
msgid "FcConfigParseAndLoadFromMemory - load a configuration from memory"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigParseAndLoadFromMemory.3:16
msgid ""
"B<FcBool FcConfigParseAndLoadFromMemory (FcConfig *>I<config>B<, const "
"FcChar8 *>I<buffer>B<, FcBool >I<complain>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigParseAndLoadFromMemory.3:24
msgid ""
"Walks the configuration in 'memory' and constructs the internal "
"representation in 'config'.  Any includes files referenced from within "
"'memory' will be loaded and dparsed.  If 'complain' is FcFalse, no warning "
"will be displayed if \\&'file' does not exist. Error and warning messages "
"will be output to stderr.  Returns FcFalse if fsome error occurred while "
"loading the file, either a parse error, semantic error or allocation "
"failure. Otherwise returns FcTrue."
msgstr ""

#. type: Plain text
#: original/man3/FcConfigParseAndLoadFromMemory.3:26
#: original/man3/FcPatternGetWithBinding.3:25
msgid "version 2.12.5"
msgstr ""

#. type: TH
#: original/man3/FcConfigReference.3:6
#, no-wrap
msgid "FcConfigReference"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigReference.3:10
msgid "FcConfigReference - Increment config reference count"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigReference.3:16
msgid "B<FcConfig * FcConfigReference (FcConfig *>I<config>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigReference.3:23
msgid ""
"Add another reference to I<config>\\&. Configs are freed only when the "
"reference count reaches zero.  If I<config> is NULL, the current "
"configuration is used.  In that case this function will be similar to "
"FcConfigGetCurrent() except that it increments the reference count before "
"returning and the user is responsible for destroying the configuration when "
"not needed anymore."
msgstr ""

#. type: TH
#: original/man3/FcConfigSetCurrent.3:6
#, no-wrap
msgid "FcConfigSetCurrent"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigSetCurrent.3:10
msgid "FcConfigSetCurrent - Set configuration as default"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigSetCurrent.3:16
msgid "B<FcBool FcConfigSetCurrent (FcConfig *>I<config>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigSetCurrent.3:20
msgid ""
"Sets the current default configuration to I<config>\\&.  Implicitly calls "
"FcConfigBuildFonts if necessary, and FcConfigReference() to inrease the "
"reference count in I<config> since 2.12.0, returning FcFalse if that call "
"fails."
msgstr ""

#. type: TH
#: original/man3/FcConfigSetRescanInterval.3:6
#, no-wrap
msgid "FcConfigSetRescanInterval"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigSetRescanInterval.3:10
msgid "FcConfigSetRescanInterval - Set config rescan interval"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigSetRescanInterval.3:16
msgid ""
"B<FcBool FcConfigSetRescanInterval (FcConfig *>I<config>B<, int "
">I<rescanInterval>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigSetRescanInterval.3:21
msgid ""
"Sets the rescan interval. Returns FcFalse if the interval cannot be set (due "
"to allocation failure). Otherwise returns FcTrue.  An interval setting of "
"zero disables automatic checks.  If I<config> is NULL, the current "
"configuration is used."
msgstr ""

#. type: TH
#: original/man3/FcConfigSetSysRoot.3:6
#, no-wrap
msgid "FcConfigSetSysRoot"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigSetSysRoot.3:10
msgid "FcConfigSetSysRoot - Set the system root directory"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigSetSysRoot.3:16
msgid ""
"B<void FcConfigSetSysRoot (FcConfig *>I<config>B<, const FcChar8 "
"*>I<sysroot>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigSetSysRoot.3:25
msgid ""
"Set 'sysroot' as the system root directory. All file paths used or created "
"with this 'config' (including file properties in patterns) will be "
"considered or made relative to this 'sysroot'. This allows a host to "
"generate caches for targets at build time. This also allows a cache to be "
"re-targeted to a different base directory if 'FcConfigGetSysRoot' is used to "
"resolve file paths.  When setting this on the current config this causes "
"changing current config (calls FcConfigSetCurrent())."
msgstr ""

#. type: TH
#: original/man3/FcConfigSubstitute.3:6
#, no-wrap
msgid "FcConfigSubstitute"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigSubstitute.3:10
msgid "FcConfigSubstitute - Execute substitutions"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigSubstitute.3:16
msgid ""
"B<FcBool FcConfigSubstitute (FcConfig *>I<config>B<, FcPattern *>I<p>B<, "
"FcMatchKind >I<kind>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigSubstitute.3:20
msgid ""
"Calls FcConfigSubstituteWithPat setting p_pat to NULL. Returns FcFalse if "
"the substitution cannot be performed (due to allocation failure). Otherwise "
"returns FcTrue.  If I<config> is NULL, the current configuration is used."
msgstr ""

#. type: TH
#: original/man3/FcConfigSubstituteWithPat.3:6
#, no-wrap
msgid "FcConfigSubstituteWithPat"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigSubstituteWithPat.3:10
msgid "FcConfigSubstituteWithPat - Execute substitutions"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigSubstituteWithPat.3:16
msgid ""
"B<FcBool FcConfigSubstituteWithPat (FcConfig *>I<config>B<, FcPattern "
"*>I<p>B<, FcPattern *>I<p_pat>B<, FcMatchKind >I<kind>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigSubstituteWithPat.3:23
msgid ""
"Performs the sequence of pattern modification operations, if I<kind> is "
"FcMatchPattern, then those tagged as pattern operations are applied, else if "
"I<kind> is FcMatchFont, those tagged as font operations are applied and "
"p_pat is used for E<lt>testE<gt> elements with target=pattern. Returns "
"FcFalse if the substitution cannot be performed (due to allocation "
"failure). Otherwise returns FcTrue.  If I<config> is NULL, the current "
"configuration is used."
msgstr ""

#. type: TH
#: original/man3/FcConfigUptoDate.3:6
#, no-wrap
msgid "FcConfigUptoDate"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigUptoDate.3:10
msgid "FcConfigUptoDate - Check timestamps on config files"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigUptoDate.3:16
msgid "B<FcBool FcConfigUptoDate (FcConfig *>I<config>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcConfigUptoDate.3:20
msgid ""
"Checks all of the files related to I<config> and returns whether any of them "
"has been modified since the configuration was created.  If I<config> is "
"NULL, the current configuration is used."
msgstr ""

#. type: TH
#: original/man3/FcDefaultSubstitute.3:6
#, no-wrap
msgid "FcDefaultSubstitute"
msgstr ""

#. type: Plain text
#: original/man3/FcDefaultSubstitute.3:10
msgid "FcDefaultSubstitute - Perform default substitutions in a pattern"
msgstr ""

#. type: Plain text
#: original/man3/FcDefaultSubstitute.3:16
msgid "B<void FcDefaultSubstitute (FcPattern *>I<pattern>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcDefaultSubstitute.3:19
msgid "Supplies default values for underspecified font patterns:"
msgstr ""

#. type: TP
#: original/man3/FcDefaultSubstitute.3:19
#: original/man3/FcDefaultSubstitute.3:22
#: original/man3/FcDefaultSubstitute.3:25
#, no-wrap
msgid "\\(bu"
msgstr ""

#. type: Plain text
#: original/man3/FcDefaultSubstitute.3:22
msgid "Patterns without a specified style or weight are set to Medium"
msgstr ""

#. type: Plain text
#: original/man3/FcDefaultSubstitute.3:25
msgid "Patterns without a specified style or slant are set to Roman"
msgstr ""

#. type: Plain text
#: original/man3/FcDefaultSubstitute.3:28
msgid ""
"Patterns without a specified pixel size are given one computed from any "
"specified point size (default 12), dpi (default 75) and scale (default 1)."
msgstr ""

#. type: TH
#: original/man3/FcDirCacheClean.3:6
#, no-wrap
msgid "FcDirCacheClean"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheClean.3:10
msgid "FcDirCacheClean - Clean up a cache directory"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheClean.3:16
msgid ""
"B<FcBool FcDirCacheClean (const FcChar8 *>I<cache_dir>B<, "
"FcBool>I<verbose>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheClean.3:20
msgid ""
"This tries to clean up the cache directory of I<cache_dir>\\&.  This returns "
"FcTrue if the operation is successfully complete. otherwise FcFalse."
msgstr ""

#. type: TH
#: original/man3/FcDirCacheCreateUUID.3:6
#, no-wrap
msgid "FcDirCacheCreateUUID"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheCreateUUID.3:10
msgid "FcDirCacheCreateUUID - Create .uuid file at a directory"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheCreateUUID.3:16
msgid ""
"B<FcBool FcDirCacheCreateUUID (FcChar8 *>I<dir>B<, FcBool>I<force>B<, "
"FcConfig *>I<config>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheCreateUUID.3:19
msgid "This function is deprecated. it doesn't take any effects."
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheCreateUUID.3:21
#: original/man3/FcWeightFromOpenTypeDouble.3:27
#: original/man3/FcWeightToOpenTypeDouble.3:24
msgid "version 2.12.92"
msgstr ""

#. type: TH
#: original/man3/FcDirCacheDeleteUUID.3:6
#, no-wrap
msgid "FcDirCacheDeleteUUID"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheDeleteUUID.3:10
msgid "FcDirCacheDeleteUUID - Delete .uuid file"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheDeleteUUID.3:16
msgid ""
"B<FcBool FcDirCacheDeleteUUID (const FcChar8 *>I<dir>B<, FcConfig "
"*>I<config>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheDeleteUUID.3:20
msgid ""
"This is to delete .uuid file containing an UUID at a font directory of "
"I<dir>\\&."
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheDeleteUUID.3:22 original/man3/FcPatternFindIter.3:22
#: original/man3/FcPatternIterEqual.3:22
#: original/man3/FcPatternIterGetObject.3:23
#: original/man3/FcPatternIterGetValue.3:25
#: original/man3/FcPatternIterIsValid.3:22 original/man3/FcPatternIterNext.3:23
#: original/man3/FcPatternIterStart.3:23
#: original/man3/FcPatternIterValueCount.3:22
#: original/man3/FcPatternObjectCount.3:21
msgid "version 2.13.1"
msgstr ""

#. type: TH
#: original/man3/FcDirCacheLoad.3:6
#, no-wrap
msgid "FcDirCacheLoad"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheLoad.3:10
msgid "FcDirCacheLoad - load a directory cache"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheLoad.3:16
msgid ""
"B<FcCache * FcDirCacheLoad (const FcChar8 *>I<dir>B<, FcConfig "
"*>I<config>B<, FcChar8 **>I<cache_file>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheLoad.3:21
msgid ""
"Loads the cache related to I<dir>\\&. If no cache file exists, returns "
"NULL. The name of the cache file is returned in I<cache_file>, unless that "
"is NULL. See also FcDirCacheRead."
msgstr ""

#. type: TH
#: original/man3/FcDirCacheLoadFile.3:6
#, no-wrap
msgid "FcDirCacheLoadFile"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheLoadFile.3:10
msgid "FcDirCacheLoadFile - load a cache file"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheLoadFile.3:16
msgid ""
"B<FcCache * FcDirCacheLoadFile (const FcChar8 *>I<cache_file>B<, struct stat "
"*>I<file_stat>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheLoadFile.3:20
msgid ""
"This function loads a directory cache from I<cache_file>\\&. If I<file_stat> "
"is non-NULL, it will be filled with the results of stat(2) on the cache "
"file."
msgstr ""

#. type: TH
#: original/man3/FcDirCacheRead.3:6
#, no-wrap
msgid "FcDirCacheRead"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheRead.3:10
msgid "FcDirCacheRead - read or construct a directory cache"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheRead.3:16
msgid ""
"B<FcCache * FcDirCacheRead (const FcChar8 *>I<dir>B<, FcBool >I<force>B<, "
"FcConfig *>I<config>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheRead.3:21
msgid ""
"This returns a cache for I<dir>\\&. If I<force> is FcFalse, then an "
"existing, valid cache file will be used. Otherwise, a new cache will be "
"created by scanning the directory and that returned."
msgstr ""

#. type: TH
#: original/man3/FcDirCacheRescan.3:6
#, no-wrap
msgid "FcDirCacheRescan"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheRescan.3:10
msgid "FcDirCacheRescan - Re-scan a directory cache"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheRescan.3:16
msgid ""
"B<FcCache * FcDirCacheRescan (const FcChar8 *>I<dir>B<, FcConfig "
"*>I<config>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheRescan.3:20
msgid ""
"Re-scan directories only at I<dir> and update the cache.  returns NULL if "
"failed."
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheRescan.3:22
msgid "version 2.11.1"
msgstr ""

#. type: TH
#: original/man3/FcDirCacheUnlink.3:6
#, no-wrap
msgid "FcDirCacheUnlink"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheUnlink.3:10
msgid "FcDirCacheUnlink - Remove all caches related to dir"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheUnlink.3:16
msgid ""
"B<FcBool FcDirCacheUnlink (const FcChar8 *>I<dir>B<, FcConfig "
"*>I<config>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheUnlink.3:21
msgid ""
"Scans the cache directories in I<config>, removing any instances of the "
"cache file for I<dir>\\&. Returns FcFalse when some internal error occurs "
"(out of memory, etc). Errors actually unlinking any files are ignored."
msgstr ""

#. type: TH
#: original/man3/FcDirCacheUnload.3:6
#, no-wrap
msgid "FcDirCacheUnload"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheUnload.3:10
msgid "FcDirCacheUnload - unload a cache file"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheUnload.3:16
msgid "B<void FcDirCacheUnload (FcCache *>I<cache>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheUnload.3:19
msgid ""
"This function dereferences I<cache>\\&. When no other references to it "
"remain, all memory associated with the cache will be freed."
msgstr ""

#. type: TH
#: original/man3/FcDirCacheValid.3:6
#, no-wrap
msgid "FcDirCacheValid"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheValid.3:10
msgid "FcDirCacheValid - check directory cache"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheValid.3:16
msgid "B<FcBool FcDirCacheValid (const FcChar8 *>I<dir>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcDirCacheValid.3:19
msgid ""
"Returns FcTrue if I<dir> has an associated valid cache file, else returns "
"FcFalse"
msgstr ""

#. type: TH
#: original/man3/FcDirSave.3:6
#, no-wrap
msgid "FcDirSave"
msgstr ""

#. type: Plain text
#: original/man3/FcDirSave.3:10
msgid "FcDirSave - DEPRECATED: formerly used to save a directory cache"
msgstr ""

#. type: Plain text
#: original/man3/FcDirSave.3:16
msgid ""
"B<FcBool FcDirSave (FcFontSet *>I<set>B<, FcStrSet *>I<dirs>B<, const "
"FcChar8 *>I<dir>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcDirSave.3:22
msgid ""
"This function now does nothing aside from returning FcFalse. It used to "
"creates the per-directory cache file for I<dir> and populates it with the "
"fonts in I<set> and subdirectories in I<dirs>\\&. All of this functionality "
"is now automatically managed by FcDirCacheLoad and FcDirCacheRead."
msgstr ""

#. type: TH
#: original/man3/FcDirScan.3:6
#, no-wrap
msgid "FcDirScan"
msgstr ""

#. type: Plain text
#: original/man3/FcDirScan.3:10
msgid "FcDirScan - scan a font directory without caching it"
msgstr ""

#. type: Plain text
#: original/man3/FcDirScan.3:16
msgid ""
"B<FcBool FcDirScan (FcFontSet *>I<set>B<, FcStrSet *>I<dirs>B<, FcFileCache "
"*>I<cache>B<, FcBlanks *>I<blanks>B<, const FcChar8 *>I<dir>B<, FcBool "
">I<force>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcDirScan.3:23
msgid ""
"If I<cache> is not zero or if I<force> is FcFalse, this function currently "
"returns FcFalse.  Otherwise, it scans an entire directory and adds all fonts "
"found to I<set>\\&.  Any subdirectories found are added to I<dirs>\\&.  "
"Calling this function does not create any cache files.  Use FcDirCacheRead() "
"if caching is desired."
msgstr ""

#. type: TH
#: original/man3/FcFileIsDir.3:6
#, no-wrap
msgid "FcFileIsDir"
msgstr ""

#. type: Plain text
#: original/man3/FcFileIsDir.3:10
msgid "FcFileIsDir - check whether a file is a directory"
msgstr ""

#. type: Plain text
#: original/man3/FcFileIsDir.3:16
msgid "B<FcBool FcFileIsDir (const FcChar8 *>I<file>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcFileIsDir.3:19
msgid "Returns FcTrue if I<file> is a directory, otherwise returns FcFalse."
msgstr ""

#. type: TH
#: original/man3/FcFileScan.3:6
#, no-wrap
msgid "FcFileScan"
msgstr ""

#. type: Plain text
#: original/man3/FcFileScan.3:10
msgid "FcFileScan - scan a font file"
msgstr ""

#. type: Plain text
#: original/man3/FcFileScan.3:16
msgid ""
"B<FcBool FcFileScan (FcFontSet *>I<set>B<, FcStrSet *>I<dirs>B<, FcFileCache "
"*>I<cache>B<, FcBlanks *>I<blanks>B<, const FcChar8 *>I<file>B<, FcBool "
">I<force>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcFileScan.3:28
msgid ""
"Scans a single file and adds all fonts found to I<set>\\&.  If I<force> is "
"FcTrue, then the file is scanned even if associated information is found in "
"I<cache>\\&.  If I<file> is a directory, it is added to I<dirs>\\&. Whether "
"fonts are found depends on fontconfig policy as well as the current "
"configuration. Internally, fontconfig will ignore BDF and PCF fonts which "
"are not in Unicode (or the effectively equivalent ISO Latin-1) encoding as "
"those are not usable by Unicode-based applications. The configuration can "
"ignore fonts based on filename or contents of the font file itself. Returns "
"FcFalse if any of the fonts cannot be added (due to allocation "
"failure). Otherwise returns FcTrue."
msgstr ""

#. type: TH
#: original/man3/FcFini.3:6
#, no-wrap
msgid "FcFini"
msgstr ""

#. type: Plain text
#: original/man3/FcFini.3:10
msgid "FcFini - finalize fontconfig library"
msgstr ""

#. type: Plain text
#: original/man3/FcFini.3:16
msgid "B<void FcFini (void>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcFini.3:21
msgid ""
"Frees all data structures allocated by previous calls to fontconfig "
"functions. Fontconfig returns to an uninitialized state, requiring a new "
"call to one of the FcInit functions before any other fontconfig function may "
"be called."
msgstr ""

#. type: TH
#: original/man3/FcFontList.3:6
#, no-wrap
msgid "FcFontList"
msgstr ""

#. type: Plain text
#: original/man3/FcFontList.3:10
msgid "FcFontList - List fonts"
msgstr ""

#. type: Plain text
#: original/man3/FcFontList.3:16
msgid ""
"B<FcFontSet * FcFontList (FcConfig *>I<config>B<, FcPattern *>I<p>B<, "
"FcObjectSet *>I<os>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcFontList.3:21
msgid ""
"Selects fonts matching I<p>, creates patterns from those fonts containing "
"only the objects in I<os> and returns the set of unique such patterns.  If "
"I<config> is NULL, the default configuration is checked to be up to date, "
"and used."
msgstr ""

#. type: TH
#: original/man3/FcFontMatch.3:6
#, no-wrap
msgid "FcFontMatch"
msgstr ""

#. type: Plain text
#: original/man3/FcFontMatch.3:10
msgid "FcFontMatch - Return best font"
msgstr ""

#. type: Plain text
#: original/man3/FcFontMatch.3:16
msgid ""
"B<FcPattern * FcFontMatch (FcConfig *>I<config>B<, FcPattern *>I<p>B<, "
"FcResult *>I<result>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcFontMatch.3:25
msgid ""
"Finds the font in I<sets> most closely matching I<pattern> and returns the "
"result of B<FcFontRenderPrepare> for that font and the provided "
"pattern. This function should be called only after B<FcConfigSubstitute> and "
"B<FcDefaultSubstitute> have been called for I<p>; otherwise the results will "
"not be correct.  If I<config> is NULL, the current configuration is used."
msgstr ""

#. type: TH
#: original/man3/FcFontRenderPrepare.3:6
#, no-wrap
msgid "FcFontRenderPrepare"
msgstr ""

#. type: Plain text
#: original/man3/FcFontRenderPrepare.3:10
msgid "FcFontRenderPrepare - Prepare pattern for loading font file"
msgstr ""

#. type: Plain text
#: original/man3/FcFontRenderPrepare.3:16
msgid ""
"B<FcPattern * FcFontRenderPrepare (FcConfig *>I<config>B<, FcPattern "
"*>I<pat>B<, FcPattern *>I<font>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcFontRenderPrepare.3:21
msgid ""
"Creates a new pattern consisting of elements of I<font> not appearing in "
"I<pat>, elements of I<pat> not appearing in I<font> and the best matching "
"value from I<pat> for elements appearing in both.  The result is passed to "
"FcConfigSubstituteWithPat with I<kind> FcMatchFont and then returned."
msgstr ""

#. type: TH
#: original/man3/FcFontSetAdd.3:6
#, no-wrap
msgid "FcFontSetAdd"
msgstr ""

#. type: Plain text
#: original/man3/FcFontSetAdd.3:10
msgid "FcFontSetAdd - Add to a font set"
msgstr ""

#. type: Plain text
#: original/man3/FcFontSetAdd.3:16
msgid "B<FcBool FcFontSetAdd (FcFontSet *>I<s>B<, FcPattern *>I<font>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcFontSetAdd.3:20
msgid ""
"Adds a pattern to a font set.  Note that the pattern is not copied before "
"being inserted into the set. Returns FcFalse if the pattern cannot be "
"inserted into the set (due to allocation failure). Otherwise returns FcTrue."
msgstr ""

#. type: TH
#: original/man3/FcFontSetCreate.3:6
#, no-wrap
msgid "FcFontSetCreate"
msgstr ""

#. type: Plain text
#: original/man3/FcFontSetCreate.3:10
msgid "FcFontSetCreate - Create a font set"
msgstr ""

#. type: Plain text
#: original/man3/FcFontSetCreate.3:16
msgid "B<FcFontSet * FcFontSetCreate (void>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcFontSetCreate.3:18
msgid "Creates an empty font set."
msgstr ""

#. type: TH
#: original/man3/FcFontSetDestroy.3:6
#, no-wrap
msgid "FcFontSetDestroy"
msgstr ""

#. type: Plain text
#: original/man3/FcFontSetDestroy.3:10
msgid "FcFontSetDestroy - Destroy a font set"
msgstr ""

#. type: Plain text
#: original/man3/FcFontSetDestroy.3:16
msgid "B<void FcFontSetDestroy (FcFontSet *>I<s>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcFontSetDestroy.3:19
msgid ""
"Destroys a font set.  Note that this destroys any referenced patterns as "
"well."
msgstr ""

#. type: TH
#: original/man3/FcFontSetList.3:6
#, no-wrap
msgid "FcFontSetList"
msgstr ""

#. type: Plain text
#: original/man3/FcFontSetList.3:10
msgid "FcFontSetList - List fonts from a set of font sets"
msgstr ""

#. type: Plain text
#: original/man3/FcFontSetList.3:16
msgid ""
"B<FcFontSet * FcFontSetList (FcConfig *>I<config>B<, FcFontSet **>I<sets>B<, "
"int>I<nsets>B<, FcPattern *>I<pattern>B<, FcObjectSet *>I<object_set>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcFontSetList.3:23
msgid ""
"Selects fonts matching I<pattern> from I<sets>, creates patterns from those "
"fonts containing only the objects in I<object_set> and returns the set of "
"unique such patterns.  If I<config> is NULL, the default configuration is "
"checked to be up to date, and used."
msgstr ""

#. type: TH
#: original/man3/FcFontSetMatch.3:6
#, no-wrap
msgid "FcFontSetMatch"
msgstr ""

#. type: Plain text
#: original/man3/FcFontSetMatch.3:10
msgid "FcFontSetMatch - Return the best font from a set of font sets"
msgstr ""

#. type: Plain text
#: original/man3/FcFontSetMatch.3:16
msgid ""
"B<FcPattern * FcFontSetMatch (FcConfig *>I<config>B<, FcFontSet "
"**>I<sets>B<, int>I<nsets>B<, FcPattern *>I<pattern>B<, FcResult "
"*>I<result>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcFontSetMatch.3:26
msgid ""
"Finds the font in I<sets> most closely matching I<pattern> and returns the "
"result of B<FcFontRenderPrepare> for that font and the provided "
"pattern. This function should be called only after B<FcConfigSubstitute> and "
"B<FcDefaultSubstitute> have been called for I<pattern>; otherwise the "
"results will not be correct.  If I<config> is NULL, the current "
"configuration is used.  Returns NULL if an error occurs during this process."
msgstr ""

#. type: TH
#: original/man3/FcFontSetPrint.3:6
#, no-wrap
msgid "FcFontSetPrint"
msgstr ""

#. type: Plain text
#: original/man3/FcFontSetPrint.3:10
msgid "FcFontSetPrint - Print a set of patterns to stdout"
msgstr ""

#. type: Plain text
#: original/man3/FcFontSetPrint.3:16
msgid "B<void FcFontSetPrint (FcFontSet *>I<set>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcFontSetPrint.3:21
msgid ""
"This function is useful for diagnosing font related issues, printing the "
"complete contents of every pattern in I<set>\\&. The format of the output is "
"designed to be of help to users and developers, and may change at any time."
msgstr ""

#. type: TH
#: original/man3/FcFontSetSort.3:6
#, no-wrap
msgid "FcFontSetSort"
msgstr ""

#. type: Plain text
#: original/man3/FcFontSetSort.3:10
msgid "FcFontSetSort - Add to a font set"
msgstr ""

#. type: Plain text
#: original/man3/FcFontSetSort.3:16
msgid ""
"B<FcFontSet * FcFontSetSort (FcConfig *>I<config>B<, FcFontSet **>I<sets>B<, "
"int>I<nsets>B<, FcPattern *>I<pattern>B<, FcBool >I<trim>B<, FcCharSet "
"**>I<csp>B<, FcResult *>I<result>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcFontSetSort.3:28
msgid ""
"Returns the list of fonts from I<sets> sorted by closeness to "
"I<pattern>\\&.  If I<trim> is FcTrue, elements in the list which don't "
"include Unicode coverage not provided by earlier elements in the list are "
"elided.  The union of Unicode coverage of all of the fonts is returned in "
"I<csp>, if I<csp> is not NULL.  This function should be called only after "
"FcConfigSubstitute and FcDefaultSubstitute have been called for I<p>; "
"otherwise the results will not be correct."
msgstr ""

#. type: Plain text
#: original/man3/FcFontSetSort.3:34
msgid ""
"The returned FcFontSet references FcPattern structures which may be shared "
"by the return value from multiple FcFontSort calls, applications cannot "
"modify these patterns.  Instead, they should be passed, along with "
"I<pattern> to B<FcFontRenderPrepare> which combines them into a complete "
"pattern."
msgstr ""

#. type: Plain text
#: original/man3/FcFontSetSort.3:35
msgid ""
"The FcFontSet returned by FcFontSetSort is destroyed by calling "
"FcFontSetDestroy."
msgstr ""

#. type: TH
#: original/man3/FcFontSetSortDestroy.3:6
#, no-wrap
msgid "FcFontSetSortDestroy"
msgstr ""

#. type: Plain text
#: original/man3/FcFontSetSortDestroy.3:10
msgid "FcFontSetSortDestroy - DEPRECATED destroy a font set"
msgstr ""

#. type: Plain text
#: original/man3/FcFontSetSortDestroy.3:16
msgid "B<void FcFontSetSortDestroy (FcFontSet *>I<set>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcFontSetSortDestroy.3:21
msgid ""
"This function is DEPRECATED. B<FcFontSetSortDestroy> destroys I<set> by "
"calling B<FcFontSetDestroy>\\&. Applications should use B<FcFontSetDestroy> "
"directly instead."
msgstr ""

#. type: TH
#: original/man3/FcFontSort.3:6
#, no-wrap
msgid "FcFontSort"
msgstr ""

#. type: Plain text
#: original/man3/FcFontSort.3:10
msgid "FcFontSort - Return list of matching fonts"
msgstr ""

#. type: Plain text
#: original/man3/FcFontSort.3:16
msgid ""
"B<FcFontSet * FcFontSort (FcConfig *>I<config>B<, FcPattern *>I<p>B<, FcBool "
">I<trim>B<, FcCharSet **>I<csp>B<, FcResult *>I<result>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcFontSort.3:24
msgid ""
"Returns the list of fonts sorted by closeness to I<p>\\&.  If I<trim> is "
"FcTrue, elements in the list which don't include Unicode coverage not "
"provided by earlier elements in the list are elided.  The union of Unicode "
"coverage of all of the fonts is returned in I<csp>, if I<csp> is not NULL.  "
"This function should be called only after FcConfigSubstitute and "
"FcDefaultSubstitute have been called for I<p>; otherwise the results will "
"not be correct."
msgstr ""

#. type: Plain text
#: original/man3/FcFontSort.3:29
msgid ""
"The returned FcFontSet references FcPattern structures which may be shared "
"by the return value from multiple FcFontSort calls, applications must not "
"modify these patterns.  Instead, they should be passed, along with I<p> to "
"B<FcFontRenderPrepare> which combines them into a complete pattern."
msgstr ""

#. type: Plain text
#: original/man3/FcFontSort.3:31
msgid ""
"The FcFontSet returned by FcFontSort is destroyed by calling "
"FcFontSetDestroy.  If I<config> is NULL, the current configuration is used."
msgstr ""

#. type: TH
#: original/man3/FcFreeTypeCharIndex.3:6
#, no-wrap
msgid "FcFreeTypeCharIndex"
msgstr ""

#. type: Plain text
#: original/man3/FcFreeTypeCharIndex.3:10
msgid "FcFreeTypeCharIndex - map Unicode to glyph id"
msgstr ""

#. type: Plain text
#: original/man3/FcFreeTypeCharIndex.3:14 original/man3/FcFreeTypeCharSet.3:14
#: original/man3/FcFreeTypeCharSetAndSpacing.3:14
#: original/man3/FcFreeTypeQuery.3:14 original/man3/FcFreeTypeQueryAll.3:14
#: original/man3/FcFreeTypeQueryFace.3:14
msgid "B<#include E<lt>fontconfig.hE<gt> #include E<lt>fcfreetype.hE<gt>>"
msgstr ""

#. type: Plain text
#: original/man3/FcFreeTypeCharIndex.3:17
msgid "B<FT_UInt FcFreeTypeCharIndex (FT_Face >I<face>B<, FcChar32 >I<ucs4>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcFreeTypeCharIndex.3:23
msgid ""
"Maps a Unicode char to a glyph index.  This function uses information from "
"several possible underlying encoding tables to work around broken fonts.  As "
"a result, this function isn't designed to be used in performance sensitive "
"areas; results from this function are intended to be cached by higher level "
"functions."
msgstr ""

#. type: TH
#: original/man3/FcFreeTypeCharSet.3:6
#, no-wrap
msgid "FcFreeTypeCharSet"
msgstr ""

#. type: Plain text
#: original/man3/FcFreeTypeCharSet.3:10
msgid "FcFreeTypeCharSet - compute Unicode coverage"
msgstr ""

#. type: Plain text
#: original/man3/FcFreeTypeCharSet.3:17
msgid ""
"B<FcCharSet * FcFreeTypeCharSet (FT_Face >I<face>B<, FcBlanks "
"*>I<blanks>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcFreeTypeCharSet.3:21
msgid ""
"Scans a FreeType face and returns the set of encoded Unicode chars.  "
"FcBlanks is deprecated, I<blanks> is ignored and accepted only for "
"compatibility with older code."
msgstr ""

#. type: TH
#: original/man3/FcFreeTypeCharSetAndSpacing.3:6
#, no-wrap
msgid "FcFreeTypeCharSetAndSpacing"
msgstr ""

#. type: Plain text
#: original/man3/FcFreeTypeCharSetAndSpacing.3:10
msgid "FcFreeTypeCharSetAndSpacing - compute Unicode coverage and spacing type"
msgstr ""

#. type: Plain text
#: original/man3/FcFreeTypeCharSetAndSpacing.3:17
msgid ""
"B<FcCharSet * FcFreeTypeCharSetAndSpacing (FT_Face >I<face>B<, FcBlanks "
"*>I<blanks>B<, int *>I<spacing>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcFreeTypeCharSetAndSpacing.3:26
msgid ""
"Scans a FreeType face and returns the set of encoded Unicode chars.  "
"FcBlanks is deprecated, I<blanks> is ignored and accepted only for "
"compatibility with older code.  I<spacing> receives the computed spacing "
"type of the font, one of FC_MONO for a font where all glyphs have the same "
"width, FC_DUAL, where the font has glyphs in precisely two widths, one twice "
"as wide as the other, or FC_PROPORTIONAL where the font has glyphs of many "
"widths."
msgstr ""

#. type: TH
#: original/man3/FcFreeTypeQuery.3:6
#, no-wrap
msgid "FcFreeTypeQuery"
msgstr ""

#. type: Plain text
#: original/man3/FcFreeTypeQuery.3:10
msgid "FcFreeTypeQuery - compute pattern from font file (and index)"
msgstr ""

#. type: Plain text
#: original/man3/FcFreeTypeQuery.3:17
msgid ""
"B<FcPattern * FcFreeTypeQuery (const FcChar8 *>I<file>B<, int >I<id>B<, "
"FcBlanks *>I<blanks>B<, int *>I<count>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcFreeTypeQuery.3:22
msgid ""
"Constructs a pattern representing the 'id'th face in 'file'.  The number of "
"faces in 'file' is returned in 'count'.  FcBlanks is deprecated, I<blanks> "
"is ignored and accepted only for compatibility with older code."
msgstr ""

#. type: TH
#: original/man3/FcFreeTypeQueryAll.3:6
#, no-wrap
msgid "FcFreeTypeQueryAll"
msgstr ""

#. type: Plain text
#: original/man3/FcFreeTypeQueryAll.3:10
msgid "FcFreeTypeQueryAll - compute all patterns from font file (and index)"
msgstr ""

#. type: Plain text
#: original/man3/FcFreeTypeQueryAll.3:17
msgid ""
"B<unsigned int FcFreeTypeQueryAll (const FcChar8 *>I<file>B<, int >I<id>B<, "
"FcBlanks *>I<blanks>B<, int *>I<count>B<, FcFontSet *>I<set>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcFreeTypeQueryAll.3:26
msgid ""
"Constructs patterns found in 'file'.  If id is -1, then all patterns found "
"in 'file' are added to 'set'.  Otherwise, this function works exactly like "
"FcFreeTypeQuery().  The number of faces in 'file' is returned in 'count'.  "
"The number of patterns added to 'set' is returned.  FcBlanks is deprecated, "
"I<blanks> is ignored and accepted only for compatibility with older code."
msgstr ""

#. type: TH
#: original/man3/FcFreeTypeQueryFace.3:6
#, no-wrap
msgid "FcFreeTypeQueryFace"
msgstr ""

#. type: Plain text
#: original/man3/FcFreeTypeQueryFace.3:10
msgid "FcFreeTypeQueryFace - compute pattern from FT_Face"
msgstr ""

#. type: Plain text
#: original/man3/FcFreeTypeQueryFace.3:17
msgid ""
"B<FcPattern * FcFreeTypeQueryFace (const FT_Face >I<face>B<, const FcChar8 "
"*>I<file>B<, int >I<id>B<, FcBlanks *>I<blanks>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcFreeTypeQueryFace.3:22
msgid ""
"Constructs a pattern representing 'face'. 'file' and 'id' are used solely as "
"data for pattern elements (FC_FILE, FC_INDEX and sometimes FC_FAMILY).  "
"FcBlanks is deprecated, I<blanks> is ignored and accepted only for "
"compatibility with older code."
msgstr ""

#. type: TH
#: original/man3/FcGetDefaultLangs.3:6
#, no-wrap
msgid "FcGetDefaultLangs"
msgstr ""

#. type: Plain text
#: original/man3/FcGetDefaultLangs.3:10
msgid "FcGetDefaultLangs - Get the default languages list"
msgstr ""

#. type: Plain text
#: original/man3/FcGetDefaultLangs.3:16
msgid "B<FcStrSet * FcGetDefaultLangs (void>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcGetDefaultLangs.3:21
msgid ""
"Returns a string set of the default languages according to the environment "
"variables on the system.  This function looks for them in order of FC_LANG, "
"LC_ALL, LC_CTYPE and LANG then.  If there are no valid values in those "
"environment variables, \"en\" will be set as fallback."
msgstr ""

#. type: TH
#: original/man3/FcGetLangs.3:6
#, no-wrap
msgid "FcGetLangs"
msgstr ""

#. type: Plain text
#: original/man3/FcGetLangs.3:10
msgid "FcGetLangs - Get list of languages"
msgstr ""

#. type: Plain text
#: original/man3/FcGetLangs.3:16
msgid "B<FcStrSet * FcGetLangs (void>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcGetLangs.3:18
msgid "Returns a string set of all known languages."
msgstr ""

#. type: TH
#: original/man3/FcGetVersion.3:6
#, no-wrap
msgid "FcGetVersion"
msgstr ""

#. type: Plain text
#: original/man3/FcGetVersion.3:10
msgid "FcGetVersion - library version number"
msgstr ""

#. type: Plain text
#: original/man3/FcGetVersion.3:16
msgid "B<int FcGetVersion (void>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcGetVersion.3:18
msgid "Returns the version number of the library."
msgstr ""

#. type: TH
#: original/man3/FcInit.3:6
#, no-wrap
msgid "FcInit"
msgstr ""

#. type: Plain text
#: original/man3/FcInit.3:10
msgid "FcInit - initialize fontconfig library"
msgstr ""

#. type: Plain text
#: original/man3/FcInit.3:16
msgid "B<FcBool FcInit (void>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcInit.3:21
msgid ""
"Loads the default configuration file and the fonts referenced therein and "
"sets the default configuration to that result.  Returns whether this process "
"succeeded or not.  If the default configuration has already been loaded, "
"this routine does nothing and returns FcTrue."
msgstr ""

#. type: TH
#: original/man3/FcInitBringUptoDate.3:6
#, no-wrap
msgid "FcInitBringUptoDate"
msgstr ""

#. type: Plain text
#: original/man3/FcInitBringUptoDate.3:10
msgid "FcInitBringUptoDate - reload configuration files if needed"
msgstr ""

#. type: Plain text
#: original/man3/FcInitBringUptoDate.3:16
msgid "B<FcBool FcInitBringUptoDate (void>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcInitBringUptoDate.3:21
msgid ""
"Checks the rescan interval in the default configuration, checking the "
"configuration if the interval has passed and reloading the configuration if "
"when any changes are detected. Returns FcFalse if the configuration cannot "
"be reloaded (see FcInitReinitialize). Otherwise returns FcTrue."
msgstr ""

#. type: TH
#: original/man3/FcInitLoadConfig.3:6
#, no-wrap
msgid "FcInitLoadConfig"
msgstr ""

#. type: Plain text
#: original/man3/FcInitLoadConfig.3:10
msgid "FcInitLoadConfig - load configuration"
msgstr ""

#. type: Plain text
#: original/man3/FcInitLoadConfig.3:16
msgid "B<FcConfig * FcInitLoadConfig (void>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcInitLoadConfig.3:19
msgid ""
"Loads the default configuration file and returns the resulting "
"configuration.  Does not load any font information."
msgstr ""

#. type: TH
#: original/man3/FcInitLoadConfigAndFonts.3:6
#, no-wrap
msgid "FcInitLoadConfigAndFonts"
msgstr ""

#. type: Plain text
#: original/man3/FcInitLoadConfigAndFonts.3:10
msgid "FcInitLoadConfigAndFonts - load configuration and font data"
msgstr ""

#. type: Plain text
#: original/man3/FcInitLoadConfigAndFonts.3:16
msgid "B<FcConfig * FcInitLoadConfigAndFonts (void>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcInitLoadConfigAndFonts.3:19
msgid ""
"Loads the default configuration file and builds information about the "
"available fonts.  Returns the resulting configuration."
msgstr ""

#. type: TH
#: original/man3/FcInitReinitialize.3:6
#, no-wrap
msgid "FcInitReinitialize"
msgstr ""

#. type: Plain text
#: original/man3/FcInitReinitialize.3:10
msgid "FcInitReinitialize - re-initialize library"
msgstr ""

#. type: Plain text
#: original/man3/FcInitReinitialize.3:16
msgid "B<FcBool FcInitReinitialize (void>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcInitReinitialize.3:21
msgid ""
"Forces the default configuration file to be reloaded and resets the default "
"configuration. Returns FcFalse if the configuration cannot be reloaded (due "
"to configuration file errors, allocation failures or other issues) and "
"leaves the existing configuration unchanged. Otherwise returns FcTrue."
msgstr ""

#. type: TH
#: original/man3/FcIsLower.3:6
#, no-wrap
msgid "FcIsLower"
msgstr ""

#. type: Plain text
#: original/man3/FcIsLower.3:10
msgid "FcIsLower - check for lower case ASCII character"
msgstr ""

#. type: Plain text
#: original/man3/FcIsLower.3:16
msgid "B<FcBool FcIsLower (FcChar8>I<c>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcIsLower.3:19
msgid "This macro checks whether I<c> is an lower case ASCII letter."
msgstr ""

#. type: TH
#: original/man3/FcIsUpper.3:6
#, no-wrap
msgid "FcIsUpper"
msgstr ""

#. type: Plain text
#: original/man3/FcIsUpper.3:10
msgid "FcIsUpper - check for upper case ASCII character"
msgstr ""

#. type: Plain text
#: original/man3/FcIsUpper.3:16
msgid "B<FcBool FcIsUpper (FcChar8>I<c>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcIsUpper.3:19
msgid "This macro checks whether I<c> is a upper case ASCII letter."
msgstr ""

#. type: TH
#: original/man3/FcLangGetCharSet.3:6
#, no-wrap
msgid "FcLangGetCharSet"
msgstr ""

#. type: Plain text
#: original/man3/FcLangGetCharSet.3:10
msgid "FcLangGetCharSet - Get character map for a language"
msgstr ""

#. type: Plain text
#: original/man3/FcLangGetCharSet.3:16
msgid "B<const FcCharSet * FcLangGetCharSet (const FcChar8 *>I<lang>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcLangGetCharSet.3:18
msgid "Returns the FcCharMap for a language."
msgstr ""

#. type: TH
#: original/man3/FcLangNormalize.3:6
#, no-wrap
msgid "FcLangNormalize"
msgstr ""

#. type: Plain text
#: original/man3/FcLangNormalize.3:10
msgid "FcLangNormalize - Normalize the language string"
msgstr ""

#. type: Plain text
#: original/man3/FcLangNormalize.3:16
msgid "B<FcChar8 * FcLangNormalize (const FcChar8 *>I<lang>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcLangNormalize.3:19
msgid "Returns a string to make I<lang> suitable on fontconfig."
msgstr ""

#. type: Plain text
#: original/man3/FcLangNormalize.3:21
msgid "version 2.10.91"
msgstr ""

#. type: TH
#: original/man3/FcLangSetAdd.3:6
#, no-wrap
msgid "FcLangSetAdd"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetAdd.3:10
msgid "FcLangSetAdd - add a language to a langset"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetAdd.3:16
msgid "B<FcBool FcLangSetAdd (FcLangSet *>I<ls>B<, const FcChar8 *>I<lang>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetAdd.3:21
msgid ""
"I<lang> is added to I<ls>\\&.  I<lang> should be of the form Ll-Tt where Ll "
"is a two or three letter language from ISO 639 and Tt is a territory from "
"ISO 3166."
msgstr ""

#. type: TH
#: original/man3/FcLangSetCompare.3:6
#, no-wrap
msgid "FcLangSetCompare"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetCompare.3:10
msgid "FcLangSetCompare - compare language sets"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetCompare.3:16
msgid ""
"B<FcLangResult FcLangSetCompare (const FcLangSet *>I<ls_a>B<, const "
"FcLangSet *>I<ls_b>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetCompare.3:23
msgid ""
"B<FcLangSetCompare> compares language coverage for I<ls_a> and "
"I<ls_b>\\&. If they share any language and territory pair, this function "
"returns FcLangEqual. If they share a language but differ in which territory "
"that language is for, this function returns FcLangDifferentTerritory. If "
"they share no languages in common, this function returns "
"FcLangDifferentLang."
msgstr ""

#. type: TH
#: original/man3/FcLangSetContains.3:6
#, no-wrap
msgid "FcLangSetContains"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetContains.3:10
msgid "FcLangSetContains - check langset subset relation"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetContains.3:16
msgid ""
"B<FcBool FcLangSetContains (const FcLangSet *>I<ls_a>B<, const FcLangSet "
"*>I<ls_b>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetContains.3:23
msgid ""
"B<FcLangSetContains> returns FcTrue if I<ls_a> contains every language in "
"I<ls_b>\\&. I<ls_a> will 'contain' a language from I<ls_b> if I<ls_a> has "
"exactly the language, or either the language or I<ls_a> has no territory."
msgstr ""

#. type: TH
#: original/man3/FcLangSetCopy.3:6
#, no-wrap
msgid "FcLangSetCopy"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetCopy.3:10
msgid "FcLangSetCopy - copy a langset object"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetCopy.3:16
msgid "B<FcLangSet * FcLangSetCopy (const FcLangSet *>I<ls>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetCopy.3:19
msgid ""
"B<FcLangSetCopy> creates a new FcLangSet object and populates it with the "
"contents of I<ls>\\&."
msgstr ""

#. type: TH
#: original/man3/FcLangSetCreate.3:6
#, no-wrap
msgid "FcLangSetCreate"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetCreate.3:10
msgid "FcLangSetCreate - create a langset object"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetCreate.3:16
msgid "B<FcLangSet * FcLangSetCreate (void>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetCreate.3:18
msgid "B<FcLangSetCreate> creates a new FcLangSet object."
msgstr ""

#. type: TH
#: original/man3/FcLangSetDel.3:6
#, no-wrap
msgid "FcLangSetDel"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetDel.3:10
msgid "FcLangSetDel - delete a language from a langset"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetDel.3:16
msgid "B<FcBool FcLangSetDel (FcLangSet *>I<ls>B<, const FcChar8 *>I<lang>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetDel.3:22
msgid ""
"I<lang> is removed from I<ls>\\&.  I<lang> should be of the form Ll-Tt where "
"Ll is a two or three letter language from ISO 639 and Tt is a territory from "
"ISO 3166."
msgstr ""

#. type: TH
#: original/man3/FcLangSetDestroy.3:6
#, no-wrap
msgid "FcLangSetDestroy"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetDestroy.3:10
msgid "FcLangSetDestroy - destroy a langset object"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetDestroy.3:16
msgid "B<void FcLangSetDestroy (FcLangSet *>I<ls>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetDestroy.3:19
msgid ""
"B<FcLangSetDestroy> destroys a FcLangSet object, freeing all memory "
"associated with it."
msgstr ""

#. type: TH
#: original/man3/FcLangSetEqual.3:6
#, no-wrap
msgid "FcLangSetEqual"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetEqual.3:10
msgid "FcLangSetEqual - test for matching langsets"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetEqual.3:16
msgid ""
"B<FcBool FcLangSetEqual (const FcLangSet *>I<ls_a>B<, const FcLangSet "
"*>I<ls_b>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetEqual.3:19
msgid ""
"Returns FcTrue if and only if I<ls_a> supports precisely the same language "
"and territory combinations as I<ls_b>\\&."
msgstr ""

#. type: TH
#: original/man3/FcLangSetGetLangs.3:6
#, no-wrap
msgid "FcLangSetGetLangs"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetGetLangs.3:10
msgid "FcLangSetGetLangs - get the list of languages in the langset"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetGetLangs.3:16
msgid "B<FcStrSet * FcLangSetGetLangs (const FcLangSet *>I<ls>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetGetLangs.3:18
msgid "Returns a string set of all languages in I<langset>\\&."
msgstr ""

#. type: TH
#: original/man3/FcLangSetHasLang.3:6
#, no-wrap
msgid "FcLangSetHasLang"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetHasLang.3:10
msgid "FcLangSetHasLang - test langset for language support"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetHasLang.3:16
msgid ""
"B<FcLangResult FcLangSetHasLang (const FcLangSet *>I<ls>B<, const FcChar8 "
"*>I<lang>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetHasLang.3:24
msgid ""
"B<FcLangSetHasLang> checks whether I<ls> supports I<lang>\\&. If I<ls> has a "
"matching language and territory pair, this function returns FcLangEqual. If "
"I<ls> has a matching language but differs in which territory that language "
"is for, this function returns FcLangDifferentTerritory. If I<ls> has no "
"matching language, this function returns FcLangDifferentLang."
msgstr ""

#. type: TH
#: original/man3/FcLangSetHash.3:6
#, no-wrap
msgid "FcLangSetHash"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetHash.3:10
msgid "FcLangSetHash - return a hash value for a langset"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetHash.3:16
msgid "B<FcChar32 FcLangSetHash (const FcLangSet *>I<ls>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetHash.3:22
msgid ""
"This function returns a value which depends solely on the languages "
"supported by I<ls>\\&. Any language which equals I<ls> will have the same "
"result from B<FcLangSetHash>\\&. However, two langsets with the same hash "
"value may not be equal."
msgstr ""

#. type: TH
#: original/man3/FcLangSetSubtract.3:6
#, no-wrap
msgid "FcLangSetSubtract"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetSubtract.3:10
msgid "FcLangSetSubtract - Subtract langsets"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetSubtract.3:16
msgid ""
"B<FcLangSet * FcLangSetSubtract (const FcLangSet *>I<ls_a>B<, const "
"FcLangSet *>I<ls_b>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetSubtract.3:19
msgid ""
"Returns a set including only those languages found in I<ls_a> but not in "
"I<ls_b>\\&."
msgstr ""

#. type: TH
#: original/man3/FcLangSetUnion.3:6
#, no-wrap
msgid "FcLangSetUnion"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetUnion.3:10
msgid "FcLangSetUnion - Add langsets"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetUnion.3:16
msgid ""
"B<FcLangSet * FcLangSetUnion (const FcLangSet *>I<ls_a>B<, const FcLangSet "
"*>I<ls_b>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcLangSetUnion.3:19
msgid ""
"Returns a set including only those languages found in either I<ls_a> or "
"I<ls_b>\\&."
msgstr ""

#. type: TH
#: original/man3/FcMatrixCopy.3:6
#, no-wrap
msgid "FcMatrixCopy"
msgstr ""

#. type: Plain text
#: original/man3/FcMatrixCopy.3:10
msgid "FcMatrixCopy - Copy a matrix"
msgstr ""

#. type: Plain text
#: original/man3/FcMatrixCopy.3:16
msgid "B<void FcMatrixCopy (const FcMatrix *>I<matrix>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcMatrixCopy.3:19
msgid "B<FcMatrixCopy> allocates a new FcMatrix and copies I<mat> into it."
msgstr ""

#. type: TH
#: original/man3/FcMatrixEqual.3:6
#, no-wrap
msgid "FcMatrixEqual"
msgstr ""

#. type: Plain text
#: original/man3/FcMatrixEqual.3:10
msgid "FcMatrixEqual - Compare two matrices"
msgstr ""

#. type: Plain text
#: original/man3/FcMatrixEqual.3:16
msgid ""
"B<void FcMatrixEqual (const FcMatrix *>I<matrix1>B<, const FcMatrix "
"*>I<matrix2>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcMatrixEqual.3:20
msgid ""
"B<FcMatrixEqual> compares I<matrix1> and I<matrix2> returning FcTrue when "
"they are equal and FcFalse when they are not."
msgstr ""

#. type: TH
#: original/man3/FcMatrixInit.3:6
#, no-wrap
msgid "FcMatrixInit"
msgstr ""

#. type: Plain text
#: original/man3/FcMatrixInit.3:10
msgid "FcMatrixInit - initialize an FcMatrix structure"
msgstr ""

#. type: Plain text
#: original/man3/FcMatrixInit.3:16
msgid "B<void FcMatrixInit (FcMatrix *>I<matrix>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcMatrixInit.3:19
msgid "B<FcMatrixInit> initializes I<matrix> to the identity matrix."
msgstr ""

#. type: TH
#: original/man3/FcMatrixMultiply.3:6
#, no-wrap
msgid "FcMatrixMultiply"
msgstr ""

#. type: Plain text
#: original/man3/FcMatrixMultiply.3:10
msgid "FcMatrixMultiply - Multiply matrices"
msgstr ""

#. type: Plain text
#: original/man3/FcMatrixMultiply.3:16
msgid ""
"B<void FcMatrixMultiply (FcMatrix *>I<result>B<, const FcMatrix "
"*>I<matrix1>B<, const FcMatrix *>I<matrix2>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcMatrixMultiply.3:20
msgid ""
"B<FcMatrixMultiply> multiplies I<matrix1> and I<matrix2> storing the result "
"in I<result>\\&."
msgstr ""

#. type: TH
#: original/man3/FcMatrixRotate.3:6
#, no-wrap
msgid "FcMatrixRotate"
msgstr ""

#. type: Plain text
#: original/man3/FcMatrixRotate.3:10
msgid "FcMatrixRotate - Rotate a matrix"
msgstr ""

#. type: Plain text
#: original/man3/FcMatrixRotate.3:16
msgid ""
"B<void FcMatrixRotate (FcMatrix *>I<matrix>B<, double >I<cos>B<, double "
">I<sin>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcMatrixRotate.3:22
msgid ""
"B<FcMatrixRotate> rotates I<matrix> by the angle who's sine is I<sin> and "
"cosine is I<cos>\\&.  This is done by multiplying by the matrix:"
msgstr ""

#. type: Plain text
#: original/man3/FcMatrixRotate.3:26
#, no-wrap
msgid ""
"  cos -sin\n"
"  sin  cos\n"
msgstr ""

#. type: TH
#: original/man3/FcMatrixScale.3:6
#, no-wrap
msgid "FcMatrixScale"
msgstr ""

#. type: Plain text
#: original/man3/FcMatrixScale.3:10
msgid "FcMatrixScale - Scale a matrix"
msgstr ""

#. type: Plain text
#: original/man3/FcMatrixScale.3:16
msgid ""
"B<void FcMatrixScale (FcMatrix *>I<matrix>B<, double >I<sx>B<, double "
">I<dy>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcMatrixScale.3:22
msgid ""
"B<FcMatrixScale> multiplies I<matrix> x values by I<sx> and y values by "
"I<dy>\\&.  This is done by multiplying by the matrix:"
msgstr ""

#. type: Plain text
#: original/man3/FcMatrixScale.3:26
#, no-wrap
msgid ""
"   sx  0\n"
"   0   dy\n"
msgstr ""

#. type: TH
#: original/man3/FcMatrixShear.3:6
#, no-wrap
msgid "FcMatrixShear"
msgstr ""

#. type: Plain text
#: original/man3/FcMatrixShear.3:10
msgid "FcMatrixShear - Shear a matrix"
msgstr ""

#. type: Plain text
#: original/man3/FcMatrixShear.3:16
msgid ""
"B<void FcMatrixShear (FcMatrix *>I<matrix>B<, double >I<sh>B<, double "
">I<sv>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcMatrixShear.3:22
msgid ""
"B<FcMatrixShare> shears I<matrix> horizontally by I<sh> and vertically by "
"I<sv>\\&.  This is done by multiplying by the matrix:"
msgstr ""

#. type: Plain text
#: original/man3/FcMatrixShear.3:26
#, no-wrap
msgid ""
"  1  sh\n"
"  sv  1\n"
msgstr ""

#. type: TH
#: original/man3/FcNameConstant.3:6
#, no-wrap
msgid "FcNameConstant"
msgstr ""

#. type: Plain text
#: original/man3/FcNameConstant.3:10
msgid "FcNameConstant - Get the value for a symbolic constant"
msgstr ""

#. type: Plain text
#: original/man3/FcNameConstant.3:16
msgid "B<FcBool FcNameConstant (FcChar8 *>I<string>B<, int *>I<result>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcNameConstant.3:19
msgid ""
"Returns whether a symbolic constant with name I<string> is registered, "
"placing the value of the constant in I<result> if present."
msgstr ""

#. type: TH
#: original/man3/FcNameGetConstant.3:6
#, no-wrap
msgid "FcNameGetConstant"
msgstr ""

#. type: Plain text
#: original/man3/FcNameGetConstant.3:10
msgid "FcNameGetConstant - Lookup symbolic constant"
msgstr ""

#. type: Plain text
#: original/man3/FcNameGetConstant.3:16
msgid "B<const FcConstant * FcNameGetConstant (FcChar8 *>I<string>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcNameGetConstant.3:18
msgid "Return the FcConstant structure related to symbolic constant I<string>\\&."
msgstr ""

#. type: TH
#: original/man3/FcNameGetObjectType.3:6
#, no-wrap
msgid "FcNameGetObjectType"
msgstr ""

#. type: Plain text
#: original/man3/FcNameGetObjectType.3:10
msgid "FcNameGetObjectType - Lookup an object type"
msgstr ""

#. type: Plain text
#: original/man3/FcNameGetObjectType.3:16
msgid "B<const FcObjectType * FcNameGetObjectType (const char *>I<object>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcNameGetObjectType.3:18
msgid "Return the object type for the pattern element named I<object>\\&."
msgstr ""

#. type: TH
#: original/man3/FcNameParse.3:6
#, no-wrap
msgid "FcNameParse"
msgstr ""

#. type: Plain text
#: original/man3/FcNameParse.3:10
msgid "FcNameParse - Parse a pattern string"
msgstr ""

#. type: Plain text
#: original/man3/FcNameParse.3:16
msgid "B<FcPattern * FcNameParse (const FcChar8 *>I<name>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcNameParse.3:18
msgid ""
"Converts I<name> from the standard text format described above into a "
"pattern."
msgstr ""

#. type: TH
#: original/man3/FcNameRegisterConstants.3:6
#, no-wrap
msgid "FcNameRegisterConstants"
msgstr ""

#. type: Plain text
#: original/man3/FcNameRegisterConstants.3:10
msgid "FcNameRegisterConstants - Register symbolic constants"
msgstr ""

#. type: Plain text
#: original/man3/FcNameRegisterConstants.3:16
msgid ""
"B<FcBool FcNameRegisterConstants (const FcConstant *>I<consts>B<, int "
">I<nconsts>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcNameRegisterConstants.3:18
#: original/man3/FcNameRegisterObjectTypes.3:18
#: original/man3/FcNameUnregisterConstants.3:18
#: original/man3/FcNameUnregisterObjectTypes.3:18
msgid "Deprecated.  Does nothing.  Returns FcFalse."
msgstr ""

#. type: TH
#: original/man3/FcNameRegisterObjectTypes.3:6
#, no-wrap
msgid "FcNameRegisterObjectTypes"
msgstr ""

#. type: Plain text
#: original/man3/FcNameRegisterObjectTypes.3:10
msgid "FcNameRegisterObjectTypes - Register object types"
msgstr ""

#. type: Plain text
#: original/man3/FcNameRegisterObjectTypes.3:16
msgid ""
"B<FcBool FcNameRegisterObjectTypes (const FcObjectType *>I<types>B<, int "
">I<ntype>B<);>"
msgstr ""

#. type: TH
#: original/man3/FcNameUnparse.3:6
#, no-wrap
msgid "FcNameUnparse"
msgstr ""

#. type: Plain text
#: original/man3/FcNameUnparse.3:10
msgid "FcNameUnparse - Convert a pattern back into a string that can be parsed"
msgstr ""

#. type: Plain text
#: original/man3/FcNameUnparse.3:16
msgid "B<FcChar8 * FcNameUnparse (FcPattern *>I<pat>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcNameUnparse.3:20
msgid ""
"Converts the given pattern into the standard text format described above.  "
"The return value is not static, but instead refers to newly allocated memory "
"which should be freed by the caller using free()."
msgstr ""

#. type: TH
#: original/man3/FcNameUnregisterConstants.3:6
#, no-wrap
msgid "FcNameUnregisterConstants"
msgstr ""

#. type: Plain text
#: original/man3/FcNameUnregisterConstants.3:10
msgid "FcNameUnregisterConstants - Unregister symbolic constants"
msgstr ""

#. type: Plain text
#: original/man3/FcNameUnregisterConstants.3:16
msgid ""
"B<FcBool FcNameUnregisterConstants (const FcConstant *>I<consts>B<, int "
">I<nconsts>B<);>"
msgstr ""

#. type: TH
#: original/man3/FcNameUnregisterObjectTypes.3:6
#, no-wrap
msgid "FcNameUnregisterObjectTypes"
msgstr ""

#. type: Plain text
#: original/man3/FcNameUnregisterObjectTypes.3:10
msgid "FcNameUnregisterObjectTypes - Unregister object types"
msgstr ""

#. type: Plain text
#: original/man3/FcNameUnregisterObjectTypes.3:16
msgid ""
"B<FcBool FcNameUnregisterObjectTypes (const FcObjectType *>I<types>B<, int "
">I<ntype>B<);>"
msgstr ""

#. type: TH
#: original/man3/FcObjectSetAdd.3:6
#, no-wrap
msgid "FcObjectSetAdd"
msgstr ""

#. type: Plain text
#: original/man3/FcObjectSetAdd.3:10
msgid "FcObjectSetAdd - Add to an object set"
msgstr ""

#. type: Plain text
#: original/man3/FcObjectSetAdd.3:16
msgid "B<FcBool FcObjectSetAdd (FcObjectSet *>I<os>B<, const char *>I<object>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcObjectSetAdd.3:19
msgid ""
"Adds a property name to the set. Returns FcFalse if the property name cannot "
"be inserted into the set (due to allocation failure). Otherwise returns "
"FcTrue."
msgstr ""

#. type: TH
#: original/man3/FcObjectSetBuild.3:6
#, no-wrap
msgid "FcObjectSetBuild"
msgstr ""

#. type: Plain text
#: original/man3/FcObjectSetBuild.3:10
msgid ""
"FcObjectSetBuild, FcObjectSetVaBuild, FcObjectSetVapBuild - Build object set "
"from args"
msgstr ""

#. type: Plain text
#: original/man3/FcObjectSetBuild.3:15
msgid "B<FcObjectSet * FcObjectSetBuild (const char *>I<first>B<, \\&...>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcObjectSetBuild.3:17
msgid ""
"B<FcObjectSet * FcObjectSetVaBuild (const char *>I<first>B<, va_list "
">I<va>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcObjectSetBuild.3:20
msgid ""
"B<void FcObjectSetVapBuild (FcObjectSet *>I<result>B<, const char "
"*>I<first>B<, va_list >I<va>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcObjectSetBuild.3:24
msgid ""
"These build an object set from a null-terminated list of property names.  "
"FcObjectSetVapBuild is a macro version of FcObjectSetVaBuild which returns "
"the result in the I<result> variable directly."
msgstr ""

#. type: TH
#: original/man3/FcObjectSetCreate.3:6
#, no-wrap
msgid "FcObjectSetCreate"
msgstr ""

#. type: Plain text
#: original/man3/FcObjectSetCreate.3:10
msgid "FcObjectSetCreate - Create an object set"
msgstr ""

#. type: Plain text
#: original/man3/FcObjectSetCreate.3:16
msgid "B<FcObjectSet * FcObjectSetCreate (void>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcObjectSetCreate.3:18
msgid "Creates an empty set."
msgstr ""

#. type: TH
#: original/man3/FcObjectSetDestroy.3:6
#, no-wrap
msgid "FcObjectSetDestroy"
msgstr ""

#. type: Plain text
#: original/man3/FcObjectSetDestroy.3:10
msgid "FcObjectSetDestroy - Destroy an object set"
msgstr ""

#. type: Plain text
#: original/man3/FcObjectSetDestroy.3:16
msgid "B<void FcObjectSetDestroy (FcObjectSet *>I<os>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcObjectSetDestroy.3:18
msgid "Destroys an object set."
msgstr ""

#. type: TH
#: original/man3/FcPatternAdd-Type.3:6
#, no-wrap
msgid "FcPatternAdd-Type"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternAdd-Type.3:10
msgid ""
"FcPatternAddInteger, FcPatternAddDouble, FcPatternAddString, "
"FcPatternAddMatrix, FcPatternAddCharSet, FcPatternAddBool, "
"FcPatternAddFTFace, FcPatternAddLangSet, FcPatternAddRange - Add a typed "
"value to a pattern"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternAdd-Type.3:15
msgid ""
"B<FcBool FcPatternAddInteger (FcPattern *>I<p>B<, const char *>I<object>B<, "
"int >I<i>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternAdd-Type.3:17
msgid ""
"B<FcBool FcPatternAddDouble (FcPattern *>I<p>B<, const char *>I<object>B<, "
"double >I<d>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternAdd-Type.3:19
msgid ""
"B<FcBool FcPatternAddString (FcPattern *>I<p>B<, const char *>I<object>B<, "
"const FcChar8 *>I<s>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternAdd-Type.3:21
msgid ""
"B<FcBool FcPatternAddMatrix (FcPattern *>I<p>B<, const char *>I<object>B<, "
"const FcMatrix *>I<m>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternAdd-Type.3:23
msgid ""
"B<FcBool FcPatternAddCharSet (FcPattern *>I<p>B<, const char *>I<object>B<, "
"const FcCharSet *>I<c>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternAdd-Type.3:25
msgid ""
"B<FcBool FcPatternAddBool (FcPattern *>I<p>B<, const char *>I<object>B<, "
"FcBool >I<b>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternAdd-Type.3:27
msgid ""
"B<FcBool FcPatternAddFTFace (FcPattern *>I<p>B<, const char *>I<object>B<, "
"const FT_Face>I<f>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternAdd-Type.3:29
msgid ""
"B<FcBool FcPatternAddLangSet (FcPattern *>I<p>B<, const char *>I<object>B<, "
"const FcLangSet *>I<l>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternAdd-Type.3:32
msgid ""
"B<FcBool FcPatternAddRange (FcPattern *>I<p>B<, const char *>I<object>B<, "
"const FcRange *>I<r>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternAdd-Type.3:38
msgid ""
"These are all convenience functions that insert objects of the specified "
"type into the pattern.  Use these in preference to FcPatternAdd as they will "
"provide compile-time typechecking.  These all append values to any existing "
"list of values.  B<FcPatternAddRange> are available since 2.11.91."
msgstr ""

#. type: TH
#: original/man3/FcPatternAdd.3:6
#, no-wrap
msgid "FcPatternAdd"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternAdd.3:10
msgid "FcPatternAdd - Add a value to a pattern"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternAdd.3:16
msgid ""
"B<FcBool FcPatternAdd (FcPattern *>I<p>B<, const char *>I<object>B<, FcValue "
">I<value>B<, FcBool >I<append>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternAdd.3:22
msgid ""
"Adds a single value to the list of values associated with the property named "
"`objectI<\\&.  If `append> is FcTrue, the value is added at the end of any "
"existing list, otherwise it is inserted at the beginning.  `value' is saved "
"(with FcValueSave) when inserted into the pattern so that the library "
"retains no reference to any application-supplied data structure."
msgstr ""

#. type: TH
#: original/man3/FcPatternAddWeak.3:6
#, no-wrap
msgid "FcPatternAddWeak"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternAddWeak.3:10
msgid "FcPatternAddWeak - Add a value to a pattern with weak binding"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternAddWeak.3:16
msgid ""
"B<FcBool FcPatternAddWeak (FcPattern *>I<p>B<, const char *>I<object>B<, "
"FcValue >I<value>B<, FcBool >I<append>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternAddWeak.3:19
msgid ""
"FcPatternAddWeak is essentially the same as FcPatternAdd except that any "
"values added to the list have binding I<weak> instead of I<strong>\\&."
msgstr ""

#. type: TH
#: original/man3/FcPatternBuild.3:6
#, no-wrap
msgid "FcPatternBuild"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternBuild.3:10
msgid ""
"FcPatternBuild, FcPatternVaBuild, FcPatternVapBuild - Create patterns from "
"arguments"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternBuild.3:15
msgid "B<FcPattern * FcPatternBuild (FcPattern *>I<pattern>B<, \\&...>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternBuild.3:17
msgid ""
"B<FcPattern * FcPatternVaBuild (FcPattern *>I<pattern>B<, va_list "
">I<va>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternBuild.3:20
msgid ""
"B<void FcPatternVapBuild (FcPattern *>I<result>B<, FcPattern *>I<pattern>B<, "
"va_list >I<va>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternBuild.3:24
msgid ""
"Builds a pattern using a list of objects, types and values.  Each value to "
"be entered in the pattern is specified with three arguments:"
msgstr ""

#. type: TP
#: original/man3/FcPatternBuild.3:24
#, no-wrap
msgid "1. "
msgstr ""

#. type: Plain text
#: original/man3/FcPatternBuild.3:27
msgid "Object name, a string describing the property to be added."
msgstr ""

#. type: TP
#: original/man3/FcPatternBuild.3:27
#, no-wrap
msgid "2. "
msgstr ""

#. type: Plain text
#: original/man3/FcPatternBuild.3:30
msgid "Object type, one of the FcType enumerated values"
msgstr ""

#. type: TP
#: original/man3/FcPatternBuild.3:30
#, no-wrap
msgid "3. "
msgstr ""

#. type: Plain text
#: original/man3/FcPatternBuild.3:35
msgid ""
"Value, not an FcValue, but the raw type as passed to any of the "
"FcPatternAddE<lt>typeE<gt> functions.  Must match the type of the second "
"argument."
msgstr ""

#. type: Plain text
#: original/man3/FcPatternBuild.3:40
msgid ""
"The argument list is terminated by a null object name, no object type nor "
"value need be passed for this.  The values are added to `pattern', if "
"`pattern' is null, a new pattern is created.  In either case, the pattern is "
"returned. Example"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternBuild.3:43
#, no-wrap
msgid ""
"pattern = FcPatternBuild (0, FC_FAMILY, FcTypeString, \"Times\", (char *) "
"0);\n"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternBuild.3:48
msgid ""
"FcPatternVaBuild is used when the arguments are already in the form of a "
"varargs value. FcPatternVapBuild is a macro version of FcPatternVaBuild "
"which returns its result directly in the I<result> variable."
msgstr ""

#. type: TH
#: original/man3/FcPatternCreate.3:6
#, no-wrap
msgid "FcPatternCreate"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternCreate.3:10
msgid "FcPatternCreate - Create a pattern"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternCreate.3:16
msgid "B<FcPattern * FcPatternCreate (void>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternCreate.3:18
msgid "Creates a pattern with no properties; used to build patterns from scratch."
msgstr ""

#. type: TH
#: original/man3/FcPatternDel.3:6
#, no-wrap
msgid "FcPatternDel"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternDel.3:10
msgid "FcPatternDel - Delete a property from a pattern"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternDel.3:16
msgid "B<FcBool FcPatternDel (FcPattern *>I<p>B<, const char *>I<object>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternDel.3:19
msgid ""
"Deletes all values associated with the property `object', returning whether "
"the property existed or not."
msgstr ""

#. type: TH
#: original/man3/FcPatternDestroy.3:6
#, no-wrap
msgid "FcPatternDestroy"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternDestroy.3:10
msgid "FcPatternDestroy - Destroy a pattern"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternDestroy.3:16
msgid "B<void FcPatternDestroy (FcPattern *>I<p>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternDestroy.3:19
msgid ""
"Decrement the pattern reference count. If all references are gone, destroys "
"the pattern, in the process destroying all related values."
msgstr ""

#. type: TH
#: original/man3/FcPatternDuplicate.3:6
#, no-wrap
msgid "FcPatternDuplicate"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternDuplicate.3:10
msgid "FcPatternDuplicate - Copy a pattern"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternDuplicate.3:16
msgid "B<FcPattern * FcPatternDuplicate (const FcPattern *>I<p>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternDuplicate.3:20
msgid ""
"Copy a pattern, returning a new pattern that matches I<p>\\&. Each pattern "
"may be modified without affecting the other."
msgstr ""

#. type: TH
#: original/man3/FcPatternEqual.3:6
#, no-wrap
msgid "FcPatternEqual"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternEqual.3:10
msgid "FcPatternEqual - Compare patterns"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternEqual.3:16
msgid ""
"B<FcBool FcPatternEqual (const FcPattern *>I<pa>B<, const FcPattern "
"*>I<pb>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternEqual.3:18
msgid "Returns whether I<pa> and I<pb> are exactly alike."
msgstr ""

#. type: TH
#: original/man3/FcPatternEqualSubset.3:6
#, no-wrap
msgid "FcPatternEqualSubset"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternEqualSubset.3:10
msgid "FcPatternEqualSubset - Compare portions of patterns"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternEqualSubset.3:16
msgid ""
"B<FcBool FcPatternEqualSubset (const FcPattern *>I<pa>B<, const FcPattern "
"*>I<pb>B<, const FcObjectSet *>I<os>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternEqualSubset.3:19
msgid ""
"Returns whether I<pa> and I<pb> have exactly the same values for all of the "
"objects in I<os>\\&."
msgstr ""

#. type: TH
#: original/man3/FcPatternFilter.3:6
#, no-wrap
msgid "FcPatternFilter"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFilter.3:10
msgid "FcPatternFilter - Filter the objects of pattern"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFilter.3:16
msgid ""
"B<FcPattern * FcPatternFilter (FcPattern *>I<p>B<, const FcObjectSet "
"*>I<os>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFilter.3:21
msgid ""
"Returns a new pattern that only has those objects from I<p> that are in "
"I<os>\\&.  If I<os> is NULL, a duplicate of I<p> is returned."
msgstr ""

#. type: TH
#: original/man3/FcPatternFindIter.3:6
#, no-wrap
msgid "FcPatternFindIter"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFindIter.3:10
msgid "FcPatternFindIter - Set the iterator to point to the object in the pattern"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFindIter.3:16
msgid ""
"B<FcBool FcPatternFindIter (const FcPattern *>I<p>B<, FcPatternIter "
"*>I<iter>B<, const char *>I<object>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFindIter.3:20
msgid ""
"Set I<iter> to point to I<object> in I<p> if any and returns FcTrue. returns "
"FcFalse otherwise."
msgstr ""

#. type: TH
#: original/man3/FcPatternFormat.3:6
#, no-wrap
msgid "FcPatternFormat"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:10
msgid ""
"FcPatternFormat - Format a pattern into a string according to a format "
"specifier"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:16
msgid ""
"B<FcChar8 * FcPatternFormat (FcPattern *>I<pat>B<, const FcChar8 "
"*>I<format>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:22
msgid ""
"Converts given pattern I<pat> into text described by the format specifier "
"I<format>\\&.  The return value refers to newly allocated memory which "
"should be freed by the caller using free(), or NULL if I<format> is invalid."
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:34
msgid ""
"The format is loosely modeled after printf-style format string.  The format "
"string is composed of zero or more directives: ordinary characters (not "
"\"%\"), which are copied unchanged to the output stream; and tags which are "
"interpreted to construct text from the pattern in a variety of ways "
"(explained below).  Special characters can be escaped using backslash.  "
"C-string style special characters like \\en and \\er are also supported "
"(this is useful when the format string is not a C string literal).  It is "
"advisable to always escape curly braces that are meant to be copied to the "
"output as ordinary characters."
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:44
msgid ""
"Each tag is introduced by the character \"%\", followed by an optional "
"minimum field width, followed by tag contents in curly braces ({}).  If the "
"minimum field width value is provided the tag will be expanded and the "
"result padded to achieve the minimum width.  If the minimum field width is "
"positive, the padding will right-align the text.  Negative field width will "
"left-align.  The rest of this section describes various supported tag "
"contents and their expansion."
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:52
msgid ""
"A I<simple> tag is one where the content is an identifier.  When simple tags "
"are expanded, the named identifier will be looked up in I<pattern> and the "
"resulting list of values returned, joined together using comma.  For "
"example, to print the family name and style of the pattern, use the format "
"\"%{family} %{style}\\en\".  To extend the family column to forty characters "
"use \"%-40{family}%{style}\\en\"."
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:56
msgid ""
"Simple tags expand to list of all values for an element.  To only choose one "
"of the values, one can index using the syntax \"%{elt[idx]}\".  For example, "
"to get the first family name only, use \"%{family[0]}\"."
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:61
msgid ""
"If a simple tag ends with \"=\" and the element is found in the pattern, the "
"name of the element followed by \"=\" will be output before the list of "
"values.  For example, \"%{weight=}\" may expand to the string "
"\"weight=80\".  Or to the empty string if I<pattern> does not have weight "
"set."
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:66
msgid ""
"If a simple tag starts with \":\" and the element is found in the pattern, "
"\":\" will be printed first.  For example, combining this with the =, the "
"format \"%{:weight=}\" may expand to \":weight=80\" or to the empty string "
"if I<pattern> does not have weight set."
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:72
msgid ""
"If a simple tag contains the string \":-\", the rest of the the tag contents "
"will be used as a default string.  The default string is output if the "
"element is not found in the pattern.  For example, the format "
"\"%{:weight=:-123}\" may expand to \":weight=80\" or to the string "
"\":weight=123\" if I<pattern> does not have weight set."
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:78
msgid ""
"A I<count> tag is one that starts with the character \"#\" followed by an "
"element name, and expands to the number of values for the element in the "
"pattern.  For example, \"%{#family}\" expands to the number of family names "
"I<pattern> has set, which may be zero."
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:87
msgid ""
"A I<sub-expression> tag is one that expands a sub-expression.  The tag "
"contents are the sub-expression to expand placed inside another set of curly "
"braces.  Sub-expression tags are useful for aligning an entire "
"sub-expression, or to apply converters (explained later) to the entire "
"sub-expression output.  For example, the format \"%40{{%{family} "
"%{style}}}\" expands the sub-expression to construct the family name "
"followed by the style, then takes the entire string and pads it on the left "
"to be at least forty characters."
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:95
msgid ""
"A I<filter-out> tag is one starting with the character \"-\" followed by a "
"comma-separated list of element names, followed by a sub-expression enclosed "
"in curly braces.  The sub-expression will be expanded but with a pattern "
"that has the listed elements removed from it.  For example, the format "
"\"%{-size,pixelsize{sub-expr}}\" will expand \"sub-expr\" with I<pattern> "
"sans the size and pixelsize elements."
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:104
msgid ""
"A I<filter-in> tag is one starting with the character \"+\" followed by a "
"comma-separated list of element names, followed by a sub-expression enclosed "
"in curly braces.  The sub-expression will be expanded but with a pattern "
"that only has the listed elements from the surrounding pattern.  For "
"example, the format \"%{+family,familylang{sub-expr}}\" will expand "
"\"sub-expr\" with a sub-pattern consisting only the family and family lang "
"elements of I<pattern>\\&."
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:117
msgid ""
"A I<conditional> tag is one starting with the character \"?\" followed by a "
"comma-separated list of element conditions, followed by two sub-expression "
"enclosed in curly braces.  An element condition can be an element name, in "
"which case it tests whether the element is defined in pattern, or the "
"character \"!\" followed by an element name, in which case the test is "
"negated.  The conditional passes if all the element conditions pass.  The "
"tag expands the first sub-expression if the conditional passes, and expands "
"the second sub-expression otherwise.  For example, the format "
"\"%{?size,dpi,!pixelsize{pass}{fail}}\" will expand to \"pass\" if "
"I<pattern> has size and dpi elements but no pixelsize element, and to "
"\"fail\" otherwise."
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:129
msgid ""
"An I<enumerate> tag is one starting with the string \"[]\" followed by a "
"comma-separated list of element names, followed by a sub-expression enclosed "
"in curly braces.  The list of values for the named elements are walked in "
"parallel and the sub-expression expanded each time with a pattern just "
"having a single value for those elements, starting from the first value and "
"continuing as long as any of those elements has a value.  For example, the "
"format \"%{[]family,familylang{%{family} (%{familylang})\\en}}\" will expand "
"the pattern \"%{family} (%{familylang})\\en\" with a pattern having only the "
"first value of the family and familylang elements, then expands it with the "
"second values, then the third, etc."
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:133
msgid ""
"As a special case, if an enumerate tag has only one element, and that "
"element has only one value in the pattern, and that value is of type "
"FcLangSet, the individual languages in the language set are enumerated."
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:137
msgid ""
"A I<builtin> tag is one starting with the character \"=\" followed by a "
"builtin name.  The following builtins are defined:"
msgstr ""

#. type: TP
#: original/man3/FcPatternFormat.3:137
#, no-wrap
msgid "B<unparse>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:140
msgid "Expands to the result of calling FcNameUnparse() on the pattern."
msgstr ""

#. type: TP
#: original/man3/FcPatternFormat.3:140
#, no-wrap
msgid "B<fcmatch>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:144
msgid ""
"Expands to the output of the default output format of the fc-match command "
"on the pattern, without the final newline."
msgstr ""

#. type: TP
#: original/man3/FcPatternFormat.3:144
#, no-wrap
msgid "B<fclist>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:148
msgid ""
"Expands to the output of the default output format of the fc-list command on "
"the pattern, without the final newline."
msgstr ""

#. type: TP
#: original/man3/FcPatternFormat.3:148
#, no-wrap
msgid "B<fccat>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:152
msgid ""
"Expands to the output of the default output format of the fc-cat command on "
"the pattern, without the final newline."
msgstr ""

#. type: TP
#: original/man3/FcPatternFormat.3:152
#, no-wrap
msgid "B<pkgkit>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:162
msgid ""
"Expands to the list of PackageKit font() tags for the pattern.  Currently "
"this includes tags for each family name, and each language from the pattern, "
"enumerated and sanitized into a set of tags terminated by newline.  Package "
"management systems can use these tags to tag their packages accordingly.  "
"For example, the format \"%{+family,style{%{=unparse}}}\\en\" will expand to "
"an unparsed name containing only the family and style element values from "
"I<pattern>\\&."
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:167
msgid ""
"The contents of any tag can be followed by a set of zero or more "
"I<converter>s.  A converter is specified by the character \"|\" followed by "
"the converter name and arguments.  The following converters are defined:"
msgstr ""

#. type: TP
#: original/man3/FcPatternFormat.3:167
#, no-wrap
msgid "B<basename>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:170
msgid "Replaces text with the results of calling FcStrBasename() on it."
msgstr ""

#. type: TP
#: original/man3/FcPatternFormat.3:170
#, no-wrap
msgid "B<dirname>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:173
msgid "Replaces text with the results of calling FcStrDirname() on it."
msgstr ""

#. type: TP
#: original/man3/FcPatternFormat.3:173
#, no-wrap
msgid "B<downcase>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:176
msgid "Replaces text with the results of calling FcStrDowncase() on it."
msgstr ""

#. type: TP
#: original/man3/FcPatternFormat.3:176
#, no-wrap
msgid "B<shescape>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:180
msgid ""
"Escapes text for one level of shell expansion.  (Escapes single-quotes, also "
"encloses text in single-quotes.)"
msgstr ""

#. type: TP
#: original/man3/FcPatternFormat.3:180
#, no-wrap
msgid "B<cescape>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:184
msgid ""
"Escapes text such that it can be used as part of a C string literal.  "
"(Escapes backslash and double-quotes.)"
msgstr ""

#. type: TP
#: original/man3/FcPatternFormat.3:184
#, no-wrap
msgid "B<xmlescape>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:188
msgid ""
"Escapes text such that it can be used in XML and HTML.  (Escapes less-than, "
"greater-than, and ampersand.)"
msgstr ""

#. type: TP
#: original/man3/FcPatternFormat.3:188
#, no-wrap
msgid "B<delete(>I<chars>B<)>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:193
msgid ""
"Deletes all occurrences of each of the characters in I<chars> from the "
"text.  FIXME: This converter is not UTF-8 aware yet."
msgstr ""

#. type: TP
#: original/man3/FcPatternFormat.3:193
#, no-wrap
msgid "B<escape(>I<chars>B<)>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:198
msgid ""
"Escapes all occurrences of each of the characters in I<chars> by prepending "
"it by the first character in I<chars>\\&.  FIXME: This converter is not "
"UTF-8 aware yet."
msgstr ""

#. type: TP
#: original/man3/FcPatternFormat.3:198
#, no-wrap
msgid "B<translate(>I<from>B<,>I<to>B<)>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternFormat.3:209
msgid ""
"Translates all occurrences of each of the characters in I<from> by replacing "
"them with their corresponding character in I<to>\\&.  If I<to> has fewer "
"characters than I<from>, it will be extended by repeating its last "
"character.  FIXME: This converter is not UTF-8 aware yet.  For example, the "
"format \"%{family|downcase|delete( )}\\en\" will expand to the values of the "
"family element in I<pattern>, lower-cased and with spaces removed."
msgstr ""

#. type: TH
#: original/man3/FcPatternGet-Type.3:6
#, no-wrap
msgid "FcPatternGet-Type"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternGet-Type.3:10
msgid ""
"FcPatternGetInteger, FcPatternGetDouble, FcPatternGetString, "
"FcPatternGetMatrix, FcPatternGetCharSet, FcPatternGetBool, "
"FcPatternGetFTFace, FcPatternGetLangSet, FcPatternGetRange - Return a typed "
"value from a pattern"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternGet-Type.3:15
msgid ""
"B<FcResult FcPatternGetInteger (FcPattern *>I<p>B<, const char "
"*>I<object>B<, int >I<n>B<, int *>I<i>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternGet-Type.3:17
msgid ""
"B<FcResult FcPatternGetDouble (FcPattern *>I<p>B<, const char *>I<object>B<, "
"int >I<n>B<, double *>I<d>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternGet-Type.3:19
msgid ""
"B<FcResult FcPatternGetString (FcPattern *>I<p>B<, const char *>I<object>B<, "
"int >I<n>B<, FcChar8 **>I<s>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternGet-Type.3:21
msgid ""
"B<FcResult FcPatternGetMatrix (FcPattern *>I<p>B<, const char *>I<object>B<, "
"int >I<n>B<, FcMatrix **>I<s>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternGet-Type.3:23
msgid ""
"B<FcResult FcPatternGetCharSet (FcPattern *>I<p>B<, const char "
"*>I<object>B<, int >I<n>B<, FcCharSet **>I<c>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternGet-Type.3:25
msgid ""
"B<FcResult FcPatternGetBool (FcPattern *>I<p>B<, const char *>I<object>B<, "
"int >I<n>B<, FcBool *>I<b>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternGet-Type.3:27
msgid ""
"B<FcResult FcPatternGetFTFace (FcPattern *>I<p>B<, const char *>I<object>B<, "
"int >I<n>B<, FT_Face *>I<f>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternGet-Type.3:29
msgid ""
"B<FcResult FcPatternGetLangSet (FcPattern *>I<p>B<, const char "
"*>I<object>B<, int >I<n>B<, FcLangSet **>I<l>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternGet-Type.3:32
msgid ""
"B<FcResult FcPatternGetRange (FcPattern *>I<p>B<, const char *>I<object>B<, "
"int >I<n>B<, FcRange **>I<r>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternGet-Type.3:39
msgid ""
"These are convenience functions that call FcPatternGet and verify that the "
"returned data is of the expected type. They return FcResultTypeMismatch if "
"this is not the case.  Note that these (like FcPatternGet) do not make a "
"copy of any data structure referenced by the return value.  Use these in "
"preference to FcPatternGet to provide compile-time typechecking.  "
"B<FcPatternGetRange> are available since 2.11.91."
msgstr ""

#. type: TH
#: original/man3/FcPatternGet.3:6
#, no-wrap
msgid "FcPatternGet"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternGet.3:10
msgid "FcPatternGet - Return a value from a pattern"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternGet.3:16
msgid ""
"B<FcResult FcPatternGet (FcPattern *>I<p>B<, const char *>I<object>B<, int "
">I<id>B<, FcValue *>I<v>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternGet.3:21
msgid ""
"Returns in I<v> the I<id>\\&'th value associated with the property "
"I<object>\\&.  The value returned is not a copy, but rather refers to the "
"data stored within the pattern directly.  Applications must not free this "
"value."
msgstr ""

#. type: TH
#: original/man3/FcPatternGetWithBinding.3:6
#, no-wrap
msgid "FcPatternGetWithBinding"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternGetWithBinding.3:10
msgid "FcPatternGetWithBinding - Return a value with binding from a pattern"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternGetWithBinding.3:16
msgid ""
"B<FcResult FcPatternGetWithBinding (FcPattern *>I<p>B<, const char "
"*>I<object>B<, int >I<id>B<, FcValue *>I<v>B<, FcValueBinding *>I<b>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternGetWithBinding.3:23
msgid ""
"Returns in I<v> the I<id>\\&'th value and I<b> binding for that associated "
"with the property I<object>\\&.  The Value returned is not a copy, but "
"rather refers to the data stored within the pattern directly.  Applications "
"must not free this value."
msgstr ""

#. type: TH
#: original/man3/FcPatternHash.3:6
#, no-wrap
msgid "FcPatternHash"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternHash.3:10
msgid "FcPatternHash - Compute a pattern hash value"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternHash.3:16
msgid "B<FcChar32 FcPatternHash (const FcPattern *>I<p>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternHash.3:19
msgid ""
"Returns a 32-bit number which is the same for any two patterns which are "
"equal."
msgstr ""

#. type: TH
#: original/man3/FcPatternIterEqual.3:6
#, no-wrap
msgid "FcPatternIterEqual"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternIterEqual.3:10
msgid "FcPatternIterEqual - Compare iterators"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternIterEqual.3:16
msgid ""
"B<FcBool FcPatternIterEqual (const FcPattern *>I<p1>B<, FcPatternIter "
"*>I<i1>B<, const FcPattern *>I<p2>B<, FcPatternIter *>I<i2>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternIterEqual.3:20
msgid ""
"Return FcTrue if both I<i1> and I<i2> point to same object and contains same "
"values. return FcFalse otherwise."
msgstr ""

#. type: TH
#: original/man3/FcPatternIterGetObject.3:6
#, no-wrap
msgid "FcPatternIterGetObject"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternIterGetObject.3:10
msgid "FcPatternIterGetObject - Returns an object name which the iterator point to"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternIterGetObject.3:16
msgid ""
"B<const char * FcPatternIterGetObject (const FcPattern *>I<p>B<, "
"FcPatternIter *>I<iter>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternIterGetObject.3:21
msgid ""
"Returns an object name in I<p> which I<iter> point to. returns NULL if "
"I<iter> isn't valid."
msgstr ""

#. type: TH
#: original/man3/FcPatternIterGetValue.3:6
#, no-wrap
msgid "FcPatternIterGetValue"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternIterGetValue.3:10
msgid "FcPatternIterGetValue - Returns a value which the iterator point to"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternIterGetValue.3:16
msgid ""
"B<FcResult FcPatternIterGetValue (const FcPattern *>I<p>B<, FcPatternIter "
"*>I<iter>B<, int>I<id>B<, FcValue *>I<v>B<, FcValueBinding *>I<b>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternIterGetValue.3:23
msgid ""
"Returns in I<v> the I<id>\\&'th value which I<iter> point to. also binding "
"to I<b> if given.  The value returned is not a copy, but rather refers to "
"the data stored within the pattern directly.  Applications must not free "
"this value."
msgstr ""

#. type: TH
#: original/man3/FcPatternIterIsValid.3:6
#, no-wrap
msgid "FcPatternIterIsValid"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternIterIsValid.3:10
msgid "FcPatternIterIsValid - Check whether the iterator is valid or not"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternIterIsValid.3:16
msgid ""
"B<FcBool FcPatternIterIsValid (const FcPattern *>I<p>B<, FcPatternIter "
":>I<iter>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternIterIsValid.3:20
msgid ""
"Returns FcTrue if I<iter> point to the valid entry in I<p>\\&. returns "
"FcFalse otherwise."
msgstr ""

#. type: TH
#: original/man3/FcPatternIterNext.3:6
#, no-wrap
msgid "FcPatternIterNext"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternIterNext.3:10
msgid "FcPatternIterNext -"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternIterNext.3:16
msgid ""
"B<FcBool FcPatternIterNext (const FcPattern *>I<p>B<, FcPatternIter "
"*>I<iter>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternIterNext.3:21
msgid ""
"Set I<iter> to point to the next object in I<p> and returns FcTrue if "
"I<iter> has been changed to the next object.  returns FcFalse otherwise."
msgstr ""

#. type: TH
#: original/man3/FcPatternIterStart.3:6
#, no-wrap
msgid "FcPatternIterStart"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternIterStart.3:10
msgid ""
"FcPatternIterStart - Initialize the iterator with the first iterator in the "
"pattern"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternIterStart.3:16
msgid ""
"B<void FcPatternIterStart (const FcPattern *>I<p>B<, FcPatternIter "
"*>I<iter>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternIterStart.3:21
msgid ""
"Initialize I<iter> with the first iterator in I<p>\\&.  If there are no "
"objects in I<p>, I<iter> will not have any valid data."
msgstr ""

#. type: TH
#: original/man3/FcPatternIterValueCount.3:6
#, no-wrap
msgid "FcPatternIterValueCount"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternIterValueCount.3:10
msgid ""
"FcPatternIterValueCount - Returns the number of the values which the "
"iterator point to"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternIterValueCount.3:16
msgid ""
"B<int FcPatternIterValueCount (const FcPattern *>I<p>B<, FcPatternIter "
"*>I<iter>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternIterValueCount.3:20
msgid ""
"Returns the number of the values in the object which I<iter> point to. if "
"I<iter> isn't valid, returns 0."
msgstr ""

#. type: TH
#: original/man3/FcPatternObjectCount.3:6
#, no-wrap
msgid "FcPatternObjectCount"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternObjectCount.3:10
msgid "FcPatternObjectCount - Returns the number of the object"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternObjectCount.3:16
msgid "B<int FcPatternObjectCount (const FcPattern *>I<p>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternObjectCount.3:19
msgid "Returns the number of the object I<p> has."
msgstr ""

#. type: TH
#: original/man3/FcPatternPrint.3:6
#, no-wrap
msgid "FcPatternPrint"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternPrint.3:10
msgid "FcPatternPrint - Print a pattern for debugging"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternPrint.3:16
msgid "B<void FcPatternPrint (const FcPattern *>I<p>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternPrint.3:20
msgid ""
"Prints an easily readable version of the pattern to stdout.  There is no "
"provision for reparsing data in this format, it's just for diagnostics and "
"debugging."
msgstr ""

#. type: TH
#: original/man3/FcPatternReference.3:6
#, no-wrap
msgid "FcPatternReference"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternReference.3:10
msgid "FcPatternReference - Increment pattern reference count"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternReference.3:16
msgid "B<void FcPatternReference (FcPattern *>I<p>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternReference.3:19
msgid ""
"Add another reference to I<p>\\&. Patterns are freed only when the reference "
"count reaches zero."
msgstr ""

#. type: TH
#: original/man3/FcPatternRemove.3:6
#, no-wrap
msgid "FcPatternRemove"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternRemove.3:10
msgid "FcPatternRemove - Remove one object of the specified type from the pattern"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternRemove.3:16
msgid ""
"B<FcBool FcPatternRemove (FcPattern *>I<p>B<, const char *>I<object>B<, int "
">I<id>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcPatternRemove.3:19
msgid ""
"Removes the value associated with the property `object' at position `id', "
"returning whether the property existed and had a value at that position or "
"not."
msgstr ""

#. type: TH
#: original/man3/FcRangeCopy.3:6
#, no-wrap
msgid "FcRangeCopy"
msgstr ""

#. type: Plain text
#: original/man3/FcRangeCopy.3:10
msgid "FcRangeCopy - Copy a range object"
msgstr ""

#. type: Plain text
#: original/man3/FcRangeCopy.3:16
msgid "B<FcRange * FcRangeCopy (const FcRange *>I<range>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcRangeCopy.3:20
msgid ""
"B<FcRangeCopy> creates a new FcRange object and populates it with the "
"contents of I<range>\\&."
msgstr ""

#. type: Plain text
#: original/man3/FcRangeCopy.3:22 original/man3/FcRangeCreateDouble.3:22
#: original/man3/FcRangeCreateInteger.3:22 original/man3/FcRangeDestroy.3:22
#: original/man3/FcRangeGetDouble.3:21 original/man3/FcWeightFromOpenType.3:23
#: original/man3/FcWeightToOpenType.3:23
msgid "version 2.11.91"
msgstr ""

#. type: TH
#: original/man3/FcRangeCreateDouble.3:6
#, no-wrap
msgid "FcRangeCreateDouble"
msgstr ""

#. type: Plain text
#: original/man3/FcRangeCreateDouble.3:10
msgid "FcRangeCreateDouble - create a range object for double"
msgstr ""

#. type: Plain text
#: original/man3/FcRangeCreateDouble.3:16
msgid "B<FcRange * FcRangeCreateDouble (double>I<begin>B<, double>I<end>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcRangeCreateDouble.3:20
msgid "B<FcRangeCreateDouble> creates a new FcRange object with double sized value."
msgstr ""

#. type: TH
#: original/man3/FcRangeCreateInteger.3:6
#, no-wrap
msgid "FcRangeCreateInteger"
msgstr ""

#. type: Plain text
#: original/man3/FcRangeCreateInteger.3:10
msgid "FcRangeCreateInteger - create a range object for integer"
msgstr ""

#. type: Plain text
#: original/man3/FcRangeCreateInteger.3:16
msgid "B<FcRange * FcRangeCreateInteger (int>I<begin>B<, int>I<end>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcRangeCreateInteger.3:20
msgid ""
"B<FcRangeCreateInteger> creates a new FcRange object with integer sized "
"value."
msgstr ""

#. type: TH
#: original/man3/FcRangeDestroy.3:6
#, no-wrap
msgid "FcRangeDestroy"
msgstr ""

#. type: Plain text
#: original/man3/FcRangeDestroy.3:10
msgid "FcRangeDestroy - destroy a range object"
msgstr ""

#. type: Plain text
#: original/man3/FcRangeDestroy.3:16
msgid "B<void FcRangeDestroy (FcRange *>I<range>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcRangeDestroy.3:20
msgid ""
"B<FcRangeDestroy> destroys a FcRange object, freeing all memory associated "
"with it."
msgstr ""

#. type: TH
#: original/man3/FcRangeGetDouble.3:6
#, no-wrap
msgid "FcRangeGetDouble"
msgstr ""

#. type: Plain text
#: original/man3/FcRangeGetDouble.3:10
msgid "FcRangeGetDouble - Get the range in double"
msgstr ""

#. type: Plain text
#: original/man3/FcRangeGetDouble.3:16
msgid ""
"B<FcBool FcRangeGetDouble (const FcRange *>I<range>B<, double *>I<begin>B<, "
"double *>I<end>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcRangeGetDouble.3:19
msgid "Returns in I<begin> and I<end> as the range."
msgstr ""

#. type: TH
#: original/man3/FcStrBasename.3:6
#, no-wrap
msgid "FcStrBasename"
msgstr ""

#. type: Plain text
#: original/man3/FcStrBasename.3:10
msgid "FcStrBasename - last component of filename"
msgstr ""

#. type: Plain text
#: original/man3/FcStrBasename.3:16
msgid "B<FcChar8 * FcStrBasename (const FcChar8 *>I<file>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcStrBasename.3:20
msgid ""
"Returns the filename of I<file> stripped of any leading directory names.  "
"This is returned in newly allocated storage which should be freed when no "
"longer needed."
msgstr ""

#. type: TH
#: original/man3/FcStrBuildFilename.3:6
#, no-wrap
msgid "FcStrBuildFilename"
msgstr ""

#. type: Plain text
#: original/man3/FcStrBuildFilename.3:10
msgid "FcStrBuildFilename - Concatenate strings as a file path"
msgstr ""

#. type: Plain text
#: original/man3/FcStrBuildFilename.3:16
msgid "B<FcChar8 * FcStrBuildFilename (const FcChar8 *>I<path>B<, \\&...>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcStrBuildFilename.3:21
msgid ""
"Creates a filename from the given elements of strings as file paths and "
"concatenate them with the appropriate file separator.  Arguments must be "
"null-terminated.  This returns a newly-allocated memory which should be "
"freed when no longer needed."
msgstr ""

#. type: TH
#: original/man3/FcStrCmp.3:6
#, no-wrap
msgid "FcStrCmp"
msgstr ""

#. type: Plain text
#: original/man3/FcStrCmp.3:10
msgid "FcStrCmp - compare UTF-8 strings"
msgstr ""

#. type: Plain text
#: original/man3/FcStrCmp.3:16
msgid "B<int FcStrCmp (const FcChar8 *>I<s1>B<, const FcChar8 *>I<s2>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcStrCmp.3:19
msgid "Returns the usual E<lt>0, 0, E<gt>0 result of comparing I<s1> and I<s2>\\&."
msgstr ""

#. type: TH
#: original/man3/FcStrCmpIgnoreCase.3:6
#, no-wrap
msgid "FcStrCmpIgnoreCase"
msgstr ""

#. type: Plain text
#: original/man3/FcStrCmpIgnoreCase.3:10
msgid "FcStrCmpIgnoreCase - compare UTF-8 strings ignoring case"
msgstr ""

#. type: Plain text
#: original/man3/FcStrCmpIgnoreCase.3:16
msgid ""
"B<int FcStrCmpIgnoreCase (const FcChar8 *>I<s1>B<, const FcChar8 "
"*>I<s2>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcStrCmpIgnoreCase.3:20
msgid ""
"Returns the usual E<lt>0, 0, E<gt>0 result of comparing I<s1> and "
"I<s2>\\&. This test is case-insensitive for all proper UTF-8 encoded "
"strings."
msgstr ""

#. type: TH
#: original/man3/FcStrCopy.3:6
#, no-wrap
msgid "FcStrCopy"
msgstr ""

#. type: Plain text
#: original/man3/FcStrCopy.3:10
msgid "FcStrCopy - duplicate a string"
msgstr ""

#. type: Plain text
#: original/man3/FcStrCopy.3:16
msgid "B<FcChar8 * FcStrCopy (const FcChar8 *>I<s>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcStrCopy.3:20
msgid ""
"Allocates memory, copies I<s> and returns the resulting buffer.  Yes, this "
"is B<strdup>, but that function isn't available on every platform."
msgstr ""

#. type: TH
#: original/man3/FcStrCopyFilename.3:6
#, no-wrap
msgid "FcStrCopyFilename"
msgstr ""

#. type: Plain text
#: original/man3/FcStrCopyFilename.3:10
msgid "FcStrCopyFilename - create a complete path from a filename"
msgstr ""

#. type: Plain text
#: original/man3/FcStrCopyFilename.3:16
msgid "B<FcChar8 * FcStrCopyFilename (const FcChar8 *>I<s>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcStrCopyFilename.3:25
msgid ""
"B<FcStrCopyFilename> constructs an absolute pathname from I<s>\\&. It "
"converts any leading '~' characters in to the value of the HOME environment "
"variable, and any relative paths are converted to absolute paths using the "
"current working directory. Sequences of '/' characters are converted to a "
"single '/', and names containing the current directory '.' or parent "
"directory '..' are correctly reconstructed.  Returns NULL if '~' is the "
"leading character and HOME is unset or disabled (see B<FcConfigEnableHome>)."
msgstr ""

#. type: TH
#: original/man3/FcStrDirname.3:6
#, no-wrap
msgid "FcStrDirname"
msgstr ""

#. type: Plain text
#: original/man3/FcStrDirname.3:10
msgid "FcStrDirname - directory part of filename"
msgstr ""

#. type: Plain text
#: original/man3/FcStrDirname.3:16
msgid "B<FcChar8 * FcStrDirname (const FcChar8 *>I<file>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcStrDirname.3:20
msgid ""
"Returns the directory containing I<file>\\&.  This is returned in newly "
"allocated storage which should be freed when no longer needed."
msgstr ""

#. type: TH
#: original/man3/FcStrDowncase.3:6
#, no-wrap
msgid "FcStrDowncase"
msgstr ""

#. type: Plain text
#: original/man3/FcStrDowncase.3:10
msgid "FcStrDowncase - create a lower case translation of a string"
msgstr ""

#. type: Plain text
#: original/man3/FcStrDowncase.3:16
msgid "B<FcChar8 * FcStrDowncase (const FcChar8 *>I<s>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcStrDowncase.3:19
msgid ""
"Allocates memory, copies I<s>, converting upper case letters to lower case "
"and returns the allocated buffer."
msgstr ""

#. type: TH
#: original/man3/FcStrFree.3:6
#, no-wrap
msgid "FcStrFree"
msgstr ""

#. type: Plain text
#: original/man3/FcStrFree.3:10
msgid "FcStrFree - free a string"
msgstr ""

#. type: Plain text
#: original/man3/FcStrFree.3:16
msgid "B<void FcStrFree (FcChar8 *>I<s>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcStrFree.3:19
msgid ""
"This is just a wrapper around free(3) which helps track memory usage of "
"strings within the fontconfig library."
msgstr ""

#. type: TH
#: original/man3/FcStrListCreate.3:6
#, no-wrap
msgid "FcStrListCreate"
msgstr ""

#. type: Plain text
#: original/man3/FcStrListCreate.3:10
msgid "FcStrListCreate - create a string iterator"
msgstr ""

#. type: Plain text
#: original/man3/FcStrListCreate.3:16
msgid "B<FcStrList * FcStrListCreate (FcStrSet *>I<set>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcStrListCreate.3:18
msgid "Creates an iterator to list the strings in I<set>\\&."
msgstr ""

#. type: TH
#: original/man3/FcStrListDone.3:6
#, no-wrap
msgid "FcStrListDone"
msgstr ""

#. type: Plain text
#: original/man3/FcStrListDone.3:10
msgid "FcStrListDone - destroy a string iterator"
msgstr ""

#. type: Plain text
#: original/man3/FcStrListDone.3:16
msgid "B<void FcStrListDone (FcStrList *>I<list>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcStrListDone.3:18
msgid "Destroys the enumerator I<list>\\&."
msgstr ""

#. type: TH
#: original/man3/FcStrListFirst.3:6
#, no-wrap
msgid "FcStrListFirst"
msgstr ""

#. type: Plain text
#: original/man3/FcStrListFirst.3:10
msgid "FcStrListFirst - get first string in iteration"
msgstr ""

#. type: Plain text
#: original/man3/FcStrListFirst.3:16
msgid "B<void FcStrListFirst (FcStrList *>I<list>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcStrListFirst.3:19
msgid "Returns the first string in I<list>\\&."
msgstr ""

#. type: Plain text
#: original/man3/FcStrListFirst.3:21
msgid "version 2.11.0"
msgstr ""

#. type: TH
#: original/man3/FcStrListNext.3:6
#, no-wrap
msgid "FcStrListNext"
msgstr ""

#. type: Plain text
#: original/man3/FcStrListNext.3:10
msgid "FcStrListNext - get next string in iteration"
msgstr ""

#. type: Plain text
#: original/man3/FcStrListNext.3:16
msgid "B<FcChar8 * FcStrListNext (FcStrList *>I<list>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcStrListNext.3:18
msgid "Returns the next string in I<list>\\&."
msgstr ""

#. type: TH
#: original/man3/FcStrPlus.3:6
#, no-wrap
msgid "FcStrPlus"
msgstr ""

#. type: Plain text
#: original/man3/FcStrPlus.3:10
msgid "FcStrPlus - concatenate two strings"
msgstr ""

#. type: Plain text
#: original/man3/FcStrPlus.3:16
msgid "B<FcChar8 * FcStrPlus (const FcChar8 *>I<s1>B<, const FcChar8 *>I<s2>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcStrPlus.3:20
msgid ""
"This function allocates new storage and places the concatenation of I<s1> "
"and I<s2> there, returning the new string."
msgstr ""

#. type: TH
#: original/man3/FcStrSetAdd.3:6
#, no-wrap
msgid "FcStrSetAdd"
msgstr ""

#. type: Plain text
#: original/man3/FcStrSetAdd.3:10
msgid "FcStrSetAdd - add to a string set"
msgstr ""

#. type: Plain text
#: original/man3/FcStrSetAdd.3:16
msgid "B<FcBool FcStrSetAdd (FcStrSet *>I<set>B<, const FcChar8 *>I<s>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcStrSetAdd.3:18
msgid "Adds a copy of I<s> to I<set>\\&."
msgstr ""

#. type: TH
#: original/man3/FcStrSetAddFilename.3:6
#, no-wrap
msgid "FcStrSetAddFilename"
msgstr ""

#. type: Plain text
#: original/man3/FcStrSetAddFilename.3:10
msgid "FcStrSetAddFilename - add a filename to a string set"
msgstr ""

#. type: Plain text
#: original/man3/FcStrSetAddFilename.3:16
msgid "B<FcBool FcStrSetAddFilename (FcStrSet *>I<set>B<, const FcChar8 *>I<s>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcStrSetAddFilename.3:20
msgid ""
"Adds a copy I<s> to I<set>, The copy is created with FcStrCopyFilename so "
"that leading '~' values are replaced with the value of the HOME environment "
"variable."
msgstr ""

#. type: TH
#: original/man3/FcStrSetCreate.3:6
#, no-wrap
msgid "FcStrSetCreate"
msgstr ""

#. type: Plain text
#: original/man3/FcStrSetCreate.3:10
msgid "FcStrSetCreate - create a string set"
msgstr ""

#. type: Plain text
#: original/man3/FcStrSetCreate.3:16
msgid "B<FcStrSet * FcStrSetCreate (void>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcStrSetCreate.3:18
msgid "Create an empty set."
msgstr ""

#. type: TH
#: original/man3/FcStrSetDel.3:6
#, no-wrap
msgid "FcStrSetDel"
msgstr ""

#. type: Plain text
#: original/man3/FcStrSetDel.3:10
msgid "FcStrSetDel - delete from a string set"
msgstr ""

#. type: Plain text
#: original/man3/FcStrSetDel.3:16
msgid "B<FcBool FcStrSetDel (FcStrSet *>I<set>B<, const FcChar8 *>I<s>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcStrSetDel.3:19
msgid ""
"Removes I<s> from I<set>, returning FcTrue if I<s> was a member else "
"FcFalse."
msgstr ""

#. type: TH
#: original/man3/FcStrSetDestroy.3:6
#, no-wrap
msgid "FcStrSetDestroy"
msgstr ""

#. type: Plain text
#: original/man3/FcStrSetDestroy.3:10
msgid "FcStrSetDestroy - destroy a string set"
msgstr ""

#. type: Plain text
#: original/man3/FcStrSetDestroy.3:16
msgid "B<void FcStrSetDestroy (FcStrSet *>I<set>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcStrSetDestroy.3:18
msgid "Destroys I<set>\\&."
msgstr ""

#. type: TH
#: original/man3/FcStrSetEqual.3:6
#, no-wrap
msgid "FcStrSetEqual"
msgstr ""

#. type: Plain text
#: original/man3/FcStrSetEqual.3:10
msgid "FcStrSetEqual - check sets for equality"
msgstr ""

#. type: Plain text
#: original/man3/FcStrSetEqual.3:16
msgid "B<FcBool FcStrSetEqual (FcStrSet *>I<set_a>B<, FcStrSet *>I<set_b>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcStrSetEqual.3:20
msgid ""
"Returns whether I<set_a> contains precisely the same strings as "
"I<set_b>\\&. Ordering of strings within the two sets is not considered."
msgstr ""

#. type: TH
#: original/man3/FcStrSetMember.3:6
#, no-wrap
msgid "FcStrSetMember"
msgstr ""

#. type: Plain text
#: original/man3/FcStrSetMember.3:10
msgid "FcStrSetMember - check set for membership"
msgstr ""

#. type: Plain text
#: original/man3/FcStrSetMember.3:16
msgid "B<FcBool FcStrSetMember (FcStrSet *>I<set>B<, const FcChar8 *>I<s>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcStrSetMember.3:19
msgid "Returns whether I<s> is a member of I<set>\\&."
msgstr ""

#. type: TH
#: original/man3/FcStrStr.3:6
#, no-wrap
msgid "FcStrStr"
msgstr ""

#. type: Plain text
#: original/man3/FcStrStr.3:10
msgid "FcStrStr - locate UTF-8 substring"
msgstr ""

#. type: Plain text
#: original/man3/FcStrStr.3:16
msgid "B<FcChar8 * FcStrStr (const FcChar8 *>I<s1>B<, const FcChar8 *>I<s2>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcStrStr.3:21
msgid ""
"Returns the location of I<s2> in I<s1>\\&.  Returns NULL if I<s2> is not "
"present in I<s1>\\&. This test will operate properly with UTF8 encoded "
"strings."
msgstr ""

#. type: TH
#: original/man3/FcStrStrIgnoreCase.3:6
#, no-wrap
msgid "FcStrStrIgnoreCase"
msgstr ""

#. type: Plain text
#: original/man3/FcStrStrIgnoreCase.3:10
msgid "FcStrStrIgnoreCase - locate UTF-8 substring ignoring case"
msgstr ""

#. type: Plain text
#: original/man3/FcStrStrIgnoreCase.3:16
msgid ""
"B<FcChar8 * FcStrStrIgnoreCase (const FcChar8 *>I<s1>B<, const FcChar8 "
"*>I<s2>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcStrStrIgnoreCase.3:21
msgid ""
"Returns the location of I<s2> in I<s1>, ignoring case.  Returns NULL if "
"I<s2> is not present in I<s1>\\&.  This test is case-insensitive for all "
"proper UTF-8 encoded strings."
msgstr ""

#. type: TH
#: original/man3/FcToLower.3:6
#, no-wrap
msgid "FcToLower"
msgstr ""

#. type: Plain text
#: original/man3/FcToLower.3:10
msgid "FcToLower - convert upper case ASCII to lower case"
msgstr ""

#. type: Plain text
#: original/man3/FcToLower.3:16
msgid "B<FcChar8 FcToLower (FcChar8>I<c>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcToLower.3:19
msgid ""
"This macro converts upper case ASCII I<c> to the equivalent lower case "
"letter."
msgstr ""

#. type: TH
#: original/man3/FcUcs4ToUtf8.3:6
#, no-wrap
msgid "FcUcs4ToUtf8"
msgstr ""

#. type: Plain text
#: original/man3/FcUcs4ToUtf8.3:10
msgid "FcUcs4ToUtf8 - convert UCS4 to UTF-8"
msgstr ""

#. type: Plain text
#: original/man3/FcUcs4ToUtf8.3:16
msgid ""
"B<int FcUcs4ToUtf8 (FcChar32 >I<src>B<, FcChar8 "
">I<dst[FC_UTF8_MAX_LEN]>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcUcs4ToUtf8.3:20
msgid ""
"Converts the Unicode char from I<src> into I<dst> and returns the number of "
"bytes needed to encode the char."
msgstr ""

#. type: TH
#: original/man3/FcUtf16Len.3:6
#, no-wrap
msgid "FcUtf16Len"
msgstr ""

#. type: Plain text
#: original/man3/FcUtf16Len.3:10
msgid "FcUtf16Len - count UTF-16 encoded chars"
msgstr ""

#. type: Plain text
#: original/man3/FcUtf16Len.3:16
msgid ""
"B<FcBool FcUtf16Len (FcChar8 *>I<src>B<, FcEndian >I<endian>B<, int "
">I<len>B<, int *>I<nchar>B<, int *>I<wchar>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcUtf16Len.3:25
msgid ""
"Counts the number of Unicode chars in I<len> bytes of I<src>\\&.  Bytes of "
"I<src> are combined into 16-bit units according to I<endian>\\&.  Places "
"that count in I<nchar>\\&.  I<wchar> contains 1, 2 or 4 depending on the "
"number of bytes needed to hold the largest Unicode char counted.  The return "
"value indicates whether I<string> is a well-formed UTF16 string."
msgstr ""

#. type: TH
#: original/man3/FcUtf16ToUcs4.3:6
#, no-wrap
msgid "FcUtf16ToUcs4"
msgstr ""

#. type: Plain text
#: original/man3/FcUtf16ToUcs4.3:10
msgid "FcUtf16ToUcs4 - convert UTF-16 to UCS4"
msgstr ""

#. type: Plain text
#: original/man3/FcUtf16ToUcs4.3:16
msgid ""
"B<int FcUtf16ToUcs4 (FcChar8 *>I<src>B<, FcEndian >I<endian>B<, FcChar32 "
"*>I<dst>B<, int >I<len>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcUtf16ToUcs4.3:22
msgid ""
"Converts the next Unicode char from I<src> into I<dst> and returns the "
"number of bytes containing the char. I<src> must be at least I<len> bytes "
"long.  Bytes of I<src> are combined into 16-bit units according to "
"I<endian>\\&."
msgstr ""

#. type: TH
#: original/man3/FcUtf8Len.3:6
#, no-wrap
msgid "FcUtf8Len"
msgstr ""

#. type: Plain text
#: original/man3/FcUtf8Len.3:10
msgid "FcUtf8Len - count UTF-8 encoded chars"
msgstr ""

#. type: Plain text
#: original/man3/FcUtf8Len.3:16
msgid ""
"B<FcBool FcUtf8Len (FcChar8 *>I<src>B<, int >I<len>B<, int *>I<nchar>B<, int "
"*>I<wchar>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcUtf8Len.3:23
msgid ""
"Counts the number of Unicode chars in I<len> bytes of I<src>\\&.  Places "
"that count in I<nchar>\\&.  I<wchar> contains 1, 2 or 4 depending on the "
"number of bytes needed to hold the largest Unicode char counted.  The return "
"value indicates whether I<src> is a well-formed UTF8 string."
msgstr ""

#. type: TH
#: original/man3/FcUtf8ToUcs4.3:6
#, no-wrap
msgid "FcUtf8ToUcs4"
msgstr ""

#. type: Plain text
#: original/man3/FcUtf8ToUcs4.3:10
msgid "FcUtf8ToUcs4 - convert UTF-8 to UCS4"
msgstr ""

#. type: Plain text
#: original/man3/FcUtf8ToUcs4.3:16
msgid ""
"B<int FcUtf8ToUcs4 (FcChar8 *>I<src>B<, FcChar32 *>I<dst>B<, int "
">I<len>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcUtf8ToUcs4.3:21
msgid ""
"Converts the next Unicode char from I<src> into I<dst> and returns the "
"number of bytes containing the char.  I<src> must be at least I<len> bytes "
"long."
msgstr ""

#. type: TH
#: original/man3/FcValueDestroy.3:6
#, no-wrap
msgid "FcValueDestroy"
msgstr ""

#. type: Plain text
#: original/man3/FcValueDestroy.3:10
msgid "FcValueDestroy - Free a value"
msgstr ""

#. type: Plain text
#: original/man3/FcValueDestroy.3:16
msgid "B<void FcValueDestroy (FcValue >I<v>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcValueDestroy.3:19
msgid ""
"Frees any memory referenced by I<v>\\&.  Values of type FcTypeString, "
"FcTypeMatrix and FcTypeCharSet reference memory, the other types do not."
msgstr ""

#. type: TH
#: original/man3/FcValueEqual.3:6
#, no-wrap
msgid "FcValueEqual"
msgstr ""

#. type: Plain text
#: original/man3/FcValueEqual.3:10
msgid "FcValueEqual - Test two values for equality"
msgstr ""

#. type: Plain text
#: original/man3/FcValueEqual.3:16
msgid "B<FcBool FcValueEqual (FcValue >I<v_a>B<, FcValue >I<v_b>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcValueEqual.3:20
msgid ""
"Compares two values. Integers and Doubles are compared as numbers; otherwise "
"the two values have to be the same type to be considered equal. Strings are "
"compared ignoring case."
msgstr ""

#. type: TH
#: original/man3/FcValuePrint.3:6
#, no-wrap
msgid "FcValuePrint"
msgstr ""

#. type: Plain text
#: original/man3/FcValuePrint.3:10
msgid "FcValuePrint - Print a value to stdout"
msgstr ""

#. type: Plain text
#: original/man3/FcValuePrint.3:16
msgid "B<void FcValuePrint (FcValue >I<v>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcValuePrint.3:20
msgid ""
"Prints a human-readable representation of I<v> to stdout. The format should "
"not be considered part of the library specification as it may change in the "
"future."
msgstr ""

#. type: TH
#: original/man3/FcValueSave.3:6
#, no-wrap
msgid "FcValueSave"
msgstr ""

#. type: Plain text
#: original/man3/FcValueSave.3:10
msgid "FcValueSave - Copy a value"
msgstr ""

#. type: Plain text
#: original/man3/FcValueSave.3:16
msgid "B<FcValue FcValueSave (FcValue >I<v>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcValueSave.3:19
msgid ""
"Returns a copy of I<v> duplicating any object referenced by it so that I<v> "
"may be safely destroyed without harming the new value."
msgstr ""

#. type: TH
#: original/man3/FcWeightFromOpenType.3:6
#, no-wrap
msgid "FcWeightFromOpenType"
msgstr ""

#. type: Plain text
#: original/man3/FcWeightFromOpenType.3:10
msgid ""
"FcWeightFromOpenType - Convert from OpenType weight values to fontconfig "
"ones"
msgstr ""

#. type: Plain text
#: original/man3/FcWeightFromOpenType.3:16
msgid "B<int FcWeightFromOpenType (int>I<ot_weight>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcWeightFromOpenType.3:21
msgid ""
"B<FcWeightFromOpenType> is like B<FcWeightFromOpenTypeDouble> but with "
"integer arguments.  Use the other function instead."
msgstr ""

#. type: TH
#: original/man3/FcWeightFromOpenTypeDouble.3:6
#, no-wrap
msgid "FcWeightFromOpenTypeDouble"
msgstr ""

#. type: Plain text
#: original/man3/FcWeightFromOpenTypeDouble.3:10
msgid ""
"FcWeightFromOpenTypeDouble - Convert from OpenType weight values to "
"fontconfig ones"
msgstr ""

#. type: Plain text
#: original/man3/FcWeightFromOpenTypeDouble.3:16
msgid "B<double FcWeightFromOpenTypeDouble (double>I<ot_weight>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcWeightFromOpenTypeDouble.3:25
msgid ""
"B<FcWeightFromOpenTypeDouble> returns an double value to use with FC_WEIGHT, "
"from an double in the 1..1000 range, resembling the numbers from OpenType "
"specification's OS/2 usWeight numbers, which are also similar to CSS "
"font-weight numbers.  If input is negative, zero, or greater than 1000, "
"returns -1.  This function linearly interpolates between various FC_WEIGHT_* "
"constants.  As such, the returned value does not necessarily match any of "
"the predefined constants."
msgstr ""

#. type: TH
#: original/man3/FcWeightToOpenType.3:6
#, no-wrap
msgid "FcWeightToOpenType"
msgstr ""

#. type: Plain text
#: original/man3/FcWeightToOpenType.3:10
msgid "FcWeightToOpenType - Convert from fontconfig weight values to OpenType ones"
msgstr ""

#. type: Plain text
#: original/man3/FcWeightToOpenType.3:16
msgid "B<int FcWeightToOpenType (int>I<ot_weight>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcWeightToOpenType.3:21
msgid ""
"B<FcWeightToOpenType> is like B<FcWeightToOpenTypeDouble> but with integer "
"arguments.  Use the other function instead."
msgstr ""

#. type: TH
#: original/man3/FcWeightToOpenTypeDouble.3:6
#, no-wrap
msgid "FcWeightToOpenTypeDouble"
msgstr ""

#. type: Plain text
#: original/man3/FcWeightToOpenTypeDouble.3:10
msgid ""
"FcWeightToOpenTypeDouble - Convert from fontconfig weight values to OpenType "
"ones"
msgstr ""

#. type: Plain text
#: original/man3/FcWeightToOpenTypeDouble.3:16
msgid "B<double FcWeightToOpenTypeDouble (double>I<ot_weight>B<);>"
msgstr ""

#. type: Plain text
#: original/man3/FcWeightToOpenTypeDouble.3:22
msgid ""
"B<FcWeightToOpenTypeDouble> is the inverse of B<FcWeightFromOpenType>\\&.  "
"If the input is less than FC_WEIGHT_THIN or greater than "
"FC_WEIGHT_EXTRABLACK, returns -1.  Otherwise returns a number in the range 1 "
"to 1000."
msgstr ""
