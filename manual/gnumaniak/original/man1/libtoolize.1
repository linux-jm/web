.\" You may copy, distribute and modify under the terms of the LDP General
.\" Public License as specified in the LICENSE file that comes with the
.\" gnumaniak distribution
.\"
.\" The author kindly requests that no comments regarding the "better"
.\" suitability or up-to-date notices of any info documentation alternative
.\" is added without contacting him first.
.\"
.\" (C) 1999-2002 Ragnar Hojland Espinosa <ragnar@ragnar-hojland.com>
.\"
.\"	libtoolize man page
.\"	man pages are NOT obsolete!
.\"	<ragnar@ragnar-hojland.com>
.TH LIBTOOLIZE 1 "June 2002" "libtoolize 1.4.2"
.SH NAME
\fBlibtoolize\fR \- add libtool support to your Makefile
.SH SYNOPSIS
.B libtoolize
.RB [ \-cfn ]
.RB [ \-\-automake ]
.RB [ \-\-copy ]
.RB [ \-\-debug ]
.RB [ \-\-dry\-run ]
.RB [ \-\-force ]
.RB [ \-\-ltdl ]
.RB [ \-\-ltdl\-tar ]

.BR libtoolize " [" \-\-help "] [" \-\-version ]
.SH DESCRIPTION
.B libtoolize
provides a standard way to add \fBlibtool\fR(1) support to your Makefiles.

If you are using \fBautoconf\fR or \fBautomake\fR, you should add a call to
\fBAM_PROG_LIBTOOL\fR to your `\fBconfigure.in\fR' file.  This macro offers
seamless integration between the `\fBconfigure\fR' script and \fBltconfig\fR.

The \fBaclocal\fR program will automatically add \fBAM_PROG_LIBTOOL\fR
support to your \fBconfigure\fR script.  It is advisable to include copy of
your \fBlibtool.m4\fR into \fBacinclude.m4\fR, so that if the user rebuilds
\fBaclocal.m4\fR or \fBconfigure\fR they won't end up with possible
incompatible macros if your and their version don't match.

The macro requires that you define the Makefile variable \fBtop_builddir\fR in your
`\fBMakefile.in\fR'.  \fBautomake\fR does this automatically, but
\fBautoconf\fR users should set it to the relative path to the top of their
build directory (`../..', for example)
.TP
.B AM_PROG_LIBTOOL
Add support for \fB\-\-enable\-shared\fR[\fB=\fIPACKAGE\fB,...\fR] so
that the user may specify wether they want shared or static libraries built
based on the name of the package.  The package name `default' matches any
packages that don't have their name in the \fBPACKAGE\fR environment variable.

By default, this macro turns on shared libraries if they are
available, and also enables static libraries if they don't
conflict with the shared libraries.  You can modify these defaults
by setting calling either the \fBAM_DISABLE_SHARED\fR or
\fBAM_DISABLE_STATIC\fR macros.
.sp
.nf
# Turn off shared libraries during beta-testing, 
# since they make the build process take too long.
AC_DISABLE_SHARED
AM_PROG_LIBTOOL
.fi
.sp
The macro also sets the environment variable \fBLIBTOOL_DEPS\fR, that you
can use to automaticall update the libtool scrit if it becomes out of date.
To do this, add to your \fBconfigure.in\fR
.sp
.RS
.RS
.nf
AC_SUBST(LIBTOOL_DEPS)
.fi
.RE
.sp
and to \fBMakefile.in\fR or \fBMakefile.am\fR the following
.sp
.RS
.nf
LIBTOOL_DEPS = @LIBTOOL_DEPS@
libtool: $(LIBTOOL_DEPS)
        $(SHELL) ./config.status --recheck
.fi
.RE
.RE
.sp
.TP
.B AC_DISABLE_FAST_INSTALL
Change the default behaviour from \fBAM_PROG_LIBTOOL\fR to disable any
optimizations for fast installation.  The user may override this macro by
specifying \fB\-\-enable\-fast\-install[\fB=\fIPACKAGE\fB,...\fR] as in
\fB\-\-enable\-shared\fR
.TP
.B AC_DISABLE_SHARED
Change the default behaviour for \fBAM_PROG_LIBTOOL\fR to disable
shared libraries.  The user may still override this default by
specifying \fB\-\-enable\-shared\fR.
.TP
.B AC_DISABLE_STATIC
Change the default behaviour for \fBAM_PROG_LIBTOOL\fR to disable
static libraries.  The user may still override this default by
specifying \fB\-\-enable\-static.
.TP
.B AC_LIBTOOL_DLOPEN
Use this macro if a package uses \fB\-dlopen\fR or \fB\-dlpreopen\fR.  It
must be called before \fBAMPROG_LIBTOOL\fR, and enables checking for dlopen
support.  Otherwise libtool will assume the platform doesn't support it.
.TP
.B AC_LIBTOOL_WIN32_DLL
Use this macro if a package has been ported to build clean dlls on win32
platforms. It must be called before \fBAMPROG_LIBTOOL\fR and
\fB\-no\-undefined must be passed to \fBlibtool\fR in link mode.

It usually this means that any library data items are exported with
`__declspec(dllexport)' and imported with `__declspec(dllimport)'.  If this
macro is not used, libtool will assume that the package libraries are not
dll clean and will build only static libraries on win32 hosts.	    
.PP
See \fBlibtool\fR(1) for a Makefile.am example.
.SH OPTIONS
.TP
.B \-c, \-\-copy
Copy files from the libtool data directory rather than creating
symlinks.
.TP
.B \-f, \-\-force
Replace existing \fBlibtool\fR files.  By default, \fBlibtoolize\fR won't
overwrite existing files.
.TP
.B \-n, \-\-dry\-run
Don't create, modify, or delete any files, just show what commands
would be executed by \fBlibtoolize\fR.
.TP
.B \-\-automake
Work silently, and assume that Automake libtool support is used.
`libtoolize \-\-automake' is used by Automake to add libtool files to
your package, when \fBAM_PROG_LIBTOOL\fR appears in your `\fBconfigure.in\fR'.
.TP
.B \-\-debug
Enables shell script trace mode, writing to standard output.
.TP
.B \-\-ltdl
Install libltdl in a subdirectory of your package.
.TP
.B \-\-ltdl\-tar
Add the file libltdl.tar.gz to your package.
.TP
.B "\-\-help"
Print a usage message on standard output and exit successfully.
.TP
.B "\-\-version"
Print version information on standard output then exit successfully.
.SH SEE ALSO
 \fBlibtool\fR(1), \fBltconfig\fR(1)
.SH NOTES
Report bugs to <bug-libtool@gnu.org>.
.br
Man page by Ragnar Hojland Espinosa <ragnar@ragnar-hojland.com>
