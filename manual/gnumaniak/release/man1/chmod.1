.\" Copyright Andries Brouwer, A. Wik 1998, Ragnar Hojland Espinosa 1998-2002
.\"
.\" Japanese Version Copyright (c) 1999 Kazuyuki Tanisako
.\"         all rights reserved.
.\" Translated Sun Aug 22 12:42 JST 1999
.\"         by Kazuyuki Tanisako
.\" Updated Sun Jan 27 JST 2001 by Kentaro Shirakata <argrath@ub32.org>
.\" Updated & Modified Sat Nov  8 13:24:56 JST 2003
.\"         by Yuichi SATO <ysato444@yahoo.co.jp>
.\"
.\" This file may be copied under the conditions described
.\" in the LDP GENERAL PUBLIC LICENSE, Version 1, September 1998
.\" that should have been distributed together with this file.
.\" 
.\"WORD:	access permissions	アクセス権
.\"WORD:	permissions		アクセス権
.\"WORD:	options			オプション
.\"WORD:	symbolic mode		シンボルモード
.\"WORD:	numeric mode		数値モード
.\"WORD:	octal number		8 進数
.\"WORD:	octal digit		8 進数
.\"
.TH CHMOD 1 "18 June 2002" "GNU fileutils 4.1"
.SH "名前"
chmod \- ファイルのアクセス権を変更する
.SH "書式"
.BI "chmod [" options "] " "mode file..."
.sp
POSIX オプション:
.B [\-R]
.sp
GNU オプション (簡略形式):
.B [\-cfvR] [\-\-reference=\fIfile\fB]
.B "[\-\-help] [\-\-version] [\-\-]"
.SH "説明"
.B chmod
コマンドは指定したそれぞれの
.I file
のアクセス権を
.I mode
により変更する。変更方法をシンボルで表現するか、もしくは変更後の
アクセス権を表すビットパターンを 8 進数で表現したもののいずれかを
使うことができる。
.PP
シンボルモードでアクセス権を変更する場合の引数の書式は
.br
\&`[ugoa...][[+-=][rwxXstugo...]...][,...]' である。
.PP
シンボルモードで引数にアクセス権の変更を複数指定する場合にはコンマで区切る。
シンボルモードでアクセス権を変更するそれぞれの表現は 0 個もしくは複数の文字 `ugoa' で始まる;
これらがファイルに対するどのユーザーのアクセス権を変更するかを決める: ファイルの所有者 (u)、
ファイルと同じグループに属しているが所有者ではない (訳注: 以後グループと表記) (g)、
所有者でもなく、そのファイルと同じグループにも属していない (訳注: 以後その他と表記) (o)、
もしくは全ユーザー (a) を表している。つまり `a' は `ugo' と同じである。
もしこれらのいずれも指定されない場合、`a' が指定されたのと同じ結果となるが、umask に設定された
ビット位置は変化しない。
.PP
`+' 演算子は各々のファイルの現状のアクセス権に、選択したアクセス権を加える; `-'
は削除する; そして `=' は指定したアクセス権だけがそのファイルのアクセス権となる。
.PP
文字 `rwxXstugo' は影響を与えるユーザーに対する新しいアクセス権を選択する: 読取り (r)、
書き込み (w)、実行 (またはディレクトリに対するアクセス) (x)、ファイルがディレクトリかもしくは
あるユーザーに対してすでに実行アクセス権が設定されている場合のみ実行 (X)、実行時にユーザー
もしくはグループ IDを設定する (s)、sticky bit (t)、そのファイルの所有者での現在のアクセス権
は (u)、そのファイルのグループでの現在のアクセス権は (g)、そのファイルのその他のユーザーでの現在
のアクセス権は (o) で表される。
(従って、`chmod g-s file' は set-group-ID (sgid) ビットを削除する。
\&`chmod ug+s file' は suid そして sgid ビットの両方を設定するが、
\&`chmod o+s file' は何もしない。)
.PP
POSIX では `sticky bit' について記述していない。
その名前は本来の意味から来ている:
プログラムコードをスワップ上に維持する。
最近は、ディレクトリに設定されている場合、ファイルの所有者とディレクトリの所有者だけが
そのディレクトリからファイルを削除できることを意味する。
(全ユーザーが書き込みアクセス権を持つ /tmp のようなディレクトリでこれはごく普通に使われている。)
.PP
.B chmod
コマンドがシンボリックリンクのアクセス権を変更することは決してない。なぜなら、
.B chmod
システムコールはシンボリックリンクのアクセス権を変更することができないからである。
シンボリックリンクのアクセス権は決して使われることがないため、このことは問題ではない。
しかし、
.B chmod
コマンドは引数にシンボリックリンクが指定された場合、各々についてそれが指しているファイルの
アクセス権を変更する。それに対して、
.B chmod
コマンドは再帰的にディレクトリを移動しながら処理している時に見つけたシンボリックリンク
は無視する。
.SH "POSIX オプション"
.TP
.B "\-R"
ディレクトリやそこに含まれるもののアクセス権を再帰的に変更する。
.SH "GNU オプション"
.TP
.B "\-c, \-\-changes"
実際にアクセス権の変更があった
.I file
それぞれについての動作を詳細に表示する。
.TP
.B "\-f, \-\-silent, \-\-quiet"
アクセス権を変更できなかったファイルについてのエラーメッセージを出力しない。
.TP
.B "-v, \-\-verbose"
全ての
.I file
について変更した、もしくはしなかったという動作を詳細に表示する。
.TP
.B "\-R, \-\-recursive"
ディレクトリやそこに含まれるもののアクセス権を再帰的に変更する。
.TP
.B \-\-reference=\fIfile
明示的に \fImode\fR を指示する代わりに、参照用に指定した \fIfile\fR のグループを使う。
.SH "GNU 標準オプション"
.TP
.B "\-\-help"
標準出力に使用方法のメッセージを出力して正常終了する。
.TP
.B "\-\-version"
標準出力にバージョン情報を出力して正常終了する。
.TP
.B "\-\-"
オプションリストを終了する。
.SH "数値モード"
ファイルのアクセス権は内部的に 16 ビットの整数で保持されている。
シンボルでアクセス権を指定する代わりに、 
これから変更するアクセス権の内部表現に対応した
8 進数 (基数 8) を使って指定することができる。
この数値は常に 8 進数として扱われる;
C 言語のように数値の先頭に 0 を付加する必要はない。
mode に 0055 と指定するのと 55 と指定するのは同じである。
数値モードによる指定は、シンボルモードで指定するより大抵の場合短くすむが、
アクセス権を絶対値で指定する。
mode の各数字により、以下で示すようなアクセス権のグループを選択する。
左側の省略された数値は 0 として扱われる。
アクセス権を組み合わせるには、
各数字の OR をとるか各数字を合計すればよい。
.TP
特別なアクセス権
.br
1000 プログラムコードをスワップに維持
.br
2000 実行時にグループ ID を設定
.br
4000 実行時にユーザー ID を設定
.TP
同じ UID のユーザー (u+)
.br
100 実行
.br
200 書き込み
.br
400 読み込み
.TP
同じグループ (g+)
.br
10 実行
.br
20 書き込み
.br
40 読み込み
.TP
その他のユーザー (o+)
.br
1 実行
.br
2 書き込み
.br
4 読み込み
.SH "環境変数"
変数 LANG, LC_ALL, LC_CTYPE, LC_MESSAGES が通常の意味を持つ。
.SH "準拠"
POSIX 1003.2 では \-R オプションのみが必須である。その他のオプションを使用すると
互換性がないかもしれない。この標準では 't' の許可ビットについて説明していない。
この標準では \fBchmod\fP が suid や sgid ビットのクリアもしくは設定の拒絶での
一貫性を維持するべきかどうかについてをとり決めていない。たとえば、すべての実行ビットが
クリアされる場合に \fBchmod\fP が `s' ビットをどうするかまったくとり決めていない。
.SH "非標準モード"
ここまでのところでディレクトリに対する `t' ビットの使い方を説明した。
いろいろなシステムでは、他の意味のないモードビットの組合せに特別な意味を与えている。
特に、Linux は System V 系 (System V Interface Definition (SVID) Version 3 を
参照) に倣って、グループ実行許可を持たないファイルの sgid ビットに、
そのファイルが強制ロック (mandatory locking) の対象であることを示させている。
詳細については
.I /usr/src/linux/Documentation/mandatory.txt
ファイルを参照。
.SH "注意"
このページでは fileutils-4.1 パッケージでの
.B chmod
コマンドについて説明している。
その他のバージョンでは少し違いがあるかもしれない。
修正や追加は aeb@cwi.nl, aw@mail1.bet1.puv.fi, ragnar@ragnar-hojland.com
宛てにメールで連絡してほしい。
プログラムのバグについては bug-fileutils@gnu.org へ報告してほしい。
