.\" Copyright Andries Brouwer, A. Wik 1998, Ragnar Hojland Espinosa 1998-2002
.\"
.\" This file may be copied under the conditions described
.\" in the LDP GENERAL PUBLIC LICENSE, Version 1, September 1998
.\" that should have been distributed together with this file.
.\" 
.\"                                                                            
.\" Japanese Version Copyright (c) 1999-2003 Yuichi SATO
.\"         all rights reserved.                                               
.\" Translated Sat Oct 16 14:24:32 JST 1999
.\"         by Yuichi SATO <sato@complex.eng.hokudai.ac.jp>
.\" Updated & Modified Sun Feb 16 13:28:12 JST 2003
.\"         by Yuichi SATO <ysato444@yahoo.co.jp>
.\"
.\"WORD:        owner		所有者
.\"WORD:        permission	アクセス権
.\"WORD:	structure	構造体
.\"WORD:	attributes	属性
.\"WORD:	original	コピー元
.\"WORD:	destination	コピー先
.\"WORD:	regular		通常の
.\"WORD:	ordinary	一般の
.\"WORD:	suffix		拡張子
.\"
.TH CP 1 "18 June 2002" "GNU fileutils 4.1"
.SH 名前
cp \- ファイルやディレクトリをコピーする
.SH 書式
.BI "cp [" "options" "] " "file path"
.br
.BI "cp [" "options" "] " "file... directory"
.sp
POSIX オプション:
.B [\-fipRr]
.sp
GNU オプション (簡略形式):
.B [\-abdfilprsuvxHLPR]
.BI "[\-S " SUFFIX ]
.B "[\-V {numbered,existing,simple}]"
.B [\-\-remove\-destination]
.BI [\-\-sparse= WHEN ]
.B "[\-\-strip\-trailing\-slashes]"
.BI [\-\-target\-directory= DIR ]
.B "[\-\-help] [\-\-version] [\-\-]"
.SH 説明
.B cp
はファイル (あるいはそのように指定すればディレクトリ) をコピーする。
1 つのファイルを指定先にコピーしたり、
複数のファイルを指定ディレクトリにコピーしたりできる。
.PP
最後の引き数が既に存在するディレクトリを指している場合、
.B cp
はコピー元の
.I file
をそれぞれ (同じ名前のまま) そのディレクトリにコピーする。
2 つのファイルだけが指定された場合、
1 つ目のファイルを 2 つ目のファイルにコピーする。
最後の引き数がディレクトリでなく、
2 つ以上のオプションでない引き数が与えられた場合はエラーになる。
.PP
(したがって `cp \-r /a /b' とすると、 /b が存在する場合は /a を /b/a に、
/a/x を /b/a/x にコピーする。しかしコピー前に /b がない場合は
/a を /b に、/a/x を /b/x にコピーする。) 
.PP
作られたファイルとディレクトリのモードは、
まずオリジナルファイルのモードと同じものにされ、
0777 との AND をとられ、
ユーザーの umask のビットが引かれる
(\fB\-p\fR オプションが指定された場合を除く)。
(しかし再帰コピーの最中には、新しく作られたディレクトリの最終モードに、
一時的に S_IRWXU (0700) が OR される。
こればプロセスがこれらの新しく作られたディレクトリの
読み出し・書き込み・検索のプロセスを可能にするためである。) 
.PP
ファイルをそれ自身にコピーしようとした場合、
(エラーメッセージを出す以外は) 何もしない。
既存のファイルにコピーする場合、
コピー先のファイルは `open(path, O_WRONLY | O_TRUNC)'
で開かれる。
新規ファイルにコピーする場合、
新規ファイルは `open(path, O_WRONLY | O_CREAT, mode)'
で作成される。
コピー先のファイルが存在し、かつ \fB\-f\fR オプションが与えられている場合に
この形式でのファイルのオープンに失敗すると、
.B cp
は既存のファイルの削除 (もしくはアンリンク) を試みる。
そして、削除に成功した場合は新規ファイルへのコピーとして
命令を続行する。
.PP
再帰的にコピーする場合、
デフォルトでは \fBcp\fR はシンボリックリンクを辿るだけである
(\fB\-dHL\fR オプションを参照)。
.SH "POSIX オプション"
POSIX では、以下のオプションを認識する。
.TP
.B \-f
必要であれば、既存のコピー先のファイルを削除する (上記参照)。
.TP
.B \-H
コマンドラインで指定された全てのシンボリックリンクを辿る。
.TP
.B \-i
コピー先に既に存在するファイルを上書きするかを問い合わせてくる。
(問い合わせは標準エラーに書かれ、返答は標準入力から読まれる。
上書きを肯定する返答があった場合のみコピーされる。) 
.TP
.B \-L
シンボリックリンクを辿り、
それが指しているファイルをコピーまたは上書きする。
.TP
.B \-p
オリジナルファイルの所有者・グループ・アクセス権・アクセス時刻を保存する
(以下の \fB\-\-preserve\fR を参照)。
.TP
.B \-R
ディレクトリを再帰的にコピーし、
一般のファイルでもなくディレクトリでもないものに対しては
それに相応したコピーをする。
(たとえば FIFO とスペシャルファイルのコピーは、
それぞれ FIFO とスペシャルファイルにされる。) 
.TP
.B \-r
ディレクトリを再帰的にコピーするが、
一般のファイルでもなくディレクトリでもないものに
対してどうするかは規定されていない。
(したがって \-r オプションを \-R オプションの
単なる別名にすることも可能である (実は推奨されている)。
しかし、現在の GNU 版の
.BR cp
のような単純な動作 (下記参照) も禁止されていない。) 
.SH "GNU 詳細"
.PP
通常、ファイルは読まれた通りに書き出される。
.B "\-\-sparse"
オプションの場合は例外であるので下記を参照すること。
.PP
デフォルトでは、`cp' はディレクトリのコピーを行わない
(以下の
.B "\-r"
オプションを見よ)。
.PP
.B cp
はファイルのそれ自身へのコピーを通常は拒否するが、
次のような例外がある：
.B "\-\-force \-\-backup"
が指定されていて、
.I "コピー元"
と
.I "コピー先"
が同一で、通常のファイルを参照している場合には、
.B cp
はバックアップファイルを作る。
バックアップファイル名には通常または番号付きの拡張子が、
通常の場合と同じように付く。
これは、既に存在するファイルを変更前に
単純にバックアップしたい場合に有用である。
.SH "GNU オプション"
.TP
.B "\-a, \-\-archive"
コピー先で、できる限り元のファイルの構成と属性を保持する
(ディレクトリ構造体は保存しない)。
.BR "\-dpR"
と同じ。
.TP
.B "\-d, \-\-no\-dereference"
シンボリックリンクをコピーする場合、シンボリックリンクが指している
ファイルをコピーするのではなく、シンボリックリンクとしてコピーする。
また、コピー元でのハードリンクはコピー先でもハードリンクとして保持される。
.TP
.B "\-f, \-\-force"
コピー先のファイルを書き込みまたはアンリンクするため、
ファイルをオープンしようとする。
失敗した場合、途中で中止することなくデフォルトの動作を行う。
.B "\-\-remove\-destination"
を参照。
.TP
.B "\-i, \-\-interactive"
コピー先に上書きされる通常のファイルが存在する場合、
上書きの可否を問い合わせてくる。
.TP
.B "\-l, \-\-link"
コピーする代わりにハードリンクを作る (ただし、ディレクトリ以外)。
.TP
.B "\-L, \-\-dereference"
シンボリックリンクを辿り、
それが指しているファイルをコピーまたは上書きする。
.TP
.B "\-p, \-\-preserve"
オリジナルファイルの所有者・グループ・
アクセス権 (setuid, setgid ビットを含む)・
最終修正時刻・最終アクセス時刻を保存する。
所有者やグループの複製に失敗した場合には、
setuid ビットと setgid ビットはクリアされる。
(この場合コピー元とコピー先の最終アクセス時刻が異なってしまうことに注意。
コピー操作はコピー元ファイルへのアクセスであるから。)
.TP
.B "\-P, \-\-parents"
コピー先のファイル名の作り方を
「コピー先ディレクトリにスラッシュ (/) とコピー元ファイルの名前を加える」
とする。
.B cp
の最後の引き数は既に存在するディレクトリでなければならない。
たとえば、
.sp
.nf
cp \-\-parents a/b/c existing_dir
.fi
.sp
というコマンドは `a/b/c'というファイルを
`existing_dir/a/b/c' に (途中のディレクトリがない場合は
それも作って) コピーする。
.TP
.B "\-r"
ディレクトリを再帰的にコピーする。(FIFO やスペシャルファイルといった)
ディレクトリでもなくシンボリックリンクでもないものを
通常のファイルとしてコピーする。
この場合 cp はコピー元ファイルからデータが読み込み、
コピー先に書き出そうとする。よくある間違いは、
`\fBcp \-r\fR' をスペシャルファイル、
FIFO、`/dev' ディレクトリ以下にあるものに対して使うことである。
多くの場合、\fBcp\fR は FIFO や `/dev/console' といった
スペシャルファイルから読み込もうとして永久にハングしたり、
`/dev/zero' をコピーしようとしてコピー先ディスクを溢れさせたり、
不明なディバイスを開いてハードウェアによくわからない効果を
及ぼしてしまったりする。
スペシャルファイルの内容をコピーするのでなく、
スペシャルファイルをその特性を保持したままコピーしたい場合は、
\fB\-\-recursive\fR または \fB\-R\fR オプションを使うこと。
.TP
.B \-\-remove\-destination
ファイルを書き込みオープンするのではなく、アンリンクする。
.B "\-\-force"
を参照。
.TP
.B "\-R, \-\-recursive"
ディレクトリでないものを保存しつつ、
ディレクトリを再帰的にコピーする
(すぐ上の
.B "\-r"
オプションを見よ)。
.TP
.BI "\-\-sparse=" "WHEN"
「スパースなファイル」とは「ホール( 穴 )」
(物理ディスクブロックを占有しないゼロバイトの連続) を含むものである。
read システムコールはそれらのファイルをゼロとして読み込む。
多くのバイナリファイルにはゼロバイトの並びがたくさん含まれているので、
このオプションにより、かなりのディスク容量を節約し、
スピードを上げることができる。
デフォルトでは `cp' は大雑把な発見的手法で
入力されたコピー元ファイルからホールを検知し、
対応する出力ファイルもスパースにする。
.RS
.PP
.I WHEN
の値は下のいずれかである：
.TP
.B auto
デフォルトの動作：入力ファイルがスパースのとき、
出力ファイルもスパースにする。
.TP
.B always
常に出力ファイルをスパースにする。このオプションは入力ファイルが
スパースなファイルをサポートしないファイルシステム上にあるが、
出力ファイルはスパースなファイルをサポートするファイルシステム上に
置かれる場合に有用である。
.TP
.B never
出力ファイルをスパースにしない。
このオプションの有意義な利用法を見付けたら筆者に教えてほしい。
.RE
.TP
.B \-\-strip\-trailing\-slashes
指定された全ての引き数について、
後ろに付いているスラッシュを取り除く。
これは `mkdir a; ln -s a la; mv la/ b' のような場合に役立つ。
この場合 POSIX の命令では、
mv はシンボリックリンク `la' ではなく 
ディレクトリ `a' を実際に移動してしまう。
.TP
.B "\-s, \-\-symbolic\-link"
ディレクトリ以外のファイルに対して、コピーするかわりに
シンボリックリンクを作る。シンボリックリンクファイルを
カレントディレクトリに作る場合を除き、
コピー元ファイル名は ('/' で始まる) 絶対パスでなければならない。
シンボリックリンクをサポートしていないシステムでは、
このオプションは単にエラーメッセージを出力するだけである。
.TP
.BI "\-\-target\-directory=" DIR
コピー先ディレクトリを、コマンドラインの最後の引き数ではなく、
オプションで指定する。
\fBxargs(1)\fR と一緒に用いると便利。
.TP
.B "\-u, \-\-update"
ディレクトリ以外のファイルのコピーで、
コピー先ファイルが既に存在し、
修正時刻がコピー元と同じかより新しい場合、
コピーを行わない。
.TP
.B "\-v, \-\-verbose"
コピーする前にそれぞれのファイル名を出力する。
また名前を変更する際のバックアップファイル名も表示する。
.TP
.B "\-x, \-\-one\-file\-system"
コピーを始めたディレクトリと
異なるファイルシステム上にあるサブディレクトリをコピーをしない。
マウントポイントは同じファイルシステム上にあるのでコピーされる。
.SH "GNU バックアップオプション"
GNU 版のプログラム
.BR cp ,
.BR mv ,
.BR ln ,
.BR install ,
.B patch
は、上書き、修正、削除といった場合に、指示すればファイルの
バックアップを作成する。
バックアップファイルを必要とする場合は \-b オプションで指定する。
どのような名前にするかは \-\-backup オプションで指定する。
バックアップファイルの名前を、ファイル名に拡張子を追加する形で
与えるようにしたい場合、
この拡張子を \-S オプションで指示する。
.TP
.BI "\-b, \-\-backup[=" METHOD ]
上書きもしくは削除の必要がある場合には、
ファイルのバックアップを作成する。
\fB\-b\fR は引き数を取らない点に注意すること。
.TP
.BI "\-S " SUFFIX ", \-\-suffix=" SUFFIX
.I SUFFIX
をバックアップファイルそれぞれに付け加える。
このオプションが指定されていない場合、環境変数
.B SIMPLE_BACKUP_SUFFIX
に設定されている値が使われる。
.B SIMPLE_BACKUP_SUFFIX
が設定されていない場合の標準値は `~' である。
.TP
.BI "\-V " METHOD ", \-\-version\-control=" METHOD
.RS
バックアップファイルの命名方法を指定する。
引き数
.I METHOD
には、`numbered' (または `t')、`existing' (または `nil')、
`never' (または `simple') を指定できる。
このオプションが指定されていない場合、環境変数
.B VERSION_CONTROL
の値が使われる。
.B VERSION_CONTROL
が設定されていない場合の標準値は `existing' である。
.PP
このオプションは Emacs 変数の `version\-control' に対応している。
有効な
.I METHOD
は (他と重複しない短縮形が使える):
.TP
.BR t ", " numbered
常に番号の拡張子を持つバックアップが作られる。
.TP
.BR nil ", " existing
番号の拡張子を持つバックアップがすでにある場合には
番号の拡張子を持つバックアップを、
そうでない場合には単純なバックアップを作成する。
.TP
.BR never ", " simple
常に単純なバックアップが作られる。
.PP
このオプションは推奨されない。
代りに \fB\-\-backup=\fIMETHOD\fR を使うこと。
.RE
.SH "GNU 標準オプション"
.TP
.B "\-\-help"
標準出力に使用方法のメッセージを出力して正常終了する。
.TP
.B "\-\-version"
標準出力にバージョン情報を出力して正常終了する。
.TP
.B "\-\-"
オプションリストの終りを示す。
.SH "環境変数"
変数 LANG, LC_ALL, LC_CTYPE, LC_MESSAGES が通常の意味を持つ。
GNU 版では、変数 SIMPLE_BACKUP_SUFFIX と VERSION_CONTROL が
バックアップファイルの命名法を上で説明した方法で管理する。
.SH "準拠"
POSIX 1003.2
.SH "注意"
このページは fileutils-4.1 パッケージの
.B cp
コマンドについて説明したものである;
その他のバージョンでは少し違いがあるかもしれない。
修正や追加は aeb@cwi.nl, aw@mail1.bet1.puv.fi, ragnar@ragnar-hojland.com
宛にメールで連絡してください。
プログラムのバグについては bug-fileutils@gnu.org へ報告してください。
