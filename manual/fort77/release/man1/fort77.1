.Id $Id: fort77.1,v 1.1.1.1 1999/07/19 01:49:33 cvs Exp $
.TH FORT77 1 "Nov 1996" Linux "Linux Programmer's Manual"
.SH 名前
fort77 \- f2c Fortranトランスレータを透過的に起動し、コンパイラ的に使う。
.SH 書式
.B fort77
.RB [ -c ]
.RB [ -g ]
.RB [ -v ]
.RB [ -k ]
.RB [ -P ]
.RB [ -cpp ]
.RB [ "f2c option ..." ]
.RB [ -L
.IR "directory ..." ]
.RI [ "gcc-option ..." ]
.RI [ "link option ..." ]
.RB [ -O
.IR optlevel ]
.RI [ -o
.IR outfile ]
.RB [ -s ]
.RB [ -w ]
.RB [ -Wx,arg1 [ ,arg2 ]...]
.I "file ..."
.SH 説明
.B fort77
スクリプトは
.B f2c
コマンドを透過的に起動するので、
このスクリプトは本物のFortranコンパイラのように使用することができる。
Fortran、C言語、アセンブラコードのコンパイル、およびf2cライブラリ
とのリンクに使用できる。
.PP
末尾に
.B .f
のあるファイル引数はFortranのソースファイルとしてコンパイルされる。
ファイル名の末尾に
.B .P
のあるファイルはそのままf2cに渡され、
.B .F
のあるファイルは、最初に(
.RB """" "/lib/cpp -traditional" """"
で起動される) C プリプロセッサに渡される。
.B -D
で指定されたすべてのスイッチはプリプロセッサに渡される。
FortranからCへの
変換が成功すると、生成されたCのファイルは
.I cc
に渡され、オブジェクトファイルに変換される。
ファイル名の末尾が
.BR .c ,
.BR .C ,
.BR .cc ,
.BR .i ,
.BR .s ,
.BR .S ,
.BR .m ,
.BR .cc 
あるいは
.B .cxx
のファイルは直接GNU Cコンパイラに渡される。
.IR gcc(1) 
を参照。
それ以外のすべてのファイルはリンカに渡される。
.SH オプション
.TP 8
.B -c
リンクは行なわず、それぞれのソースファイルからオブジェクトファイル(
.B .o
)を作る。
.TP 8
.B -g
デバッグ情報を含める。
.TP 8
.B -v
冗長モードにして詳細な情報を出力する;
このオプションをふたつつけることによって、Cコンパイラなどの出力も冗長
モードにすることができる。
.TP 8
.B -k
f2cによって生成されたCのファイルを残す。
.TP 8
.B -cpp
ファイル名の末尾が
.BR .F 
で終っているかの様に、FortranコードをCプリプロセッサに引き渡す。
.TP 8
.BR -P
f2cの
.I ".P "
ファイルを生成する。
.TP 8
.BI -L directory
最終的なリンク時のライブラリサーチパスに
.I directory
を含める。
.TP 8
.B "-o outfile"
結果を
.BR outfile 
に出力する。
.TP 8
.BR -Wx,arg1 [, arg2 ...]
引数
.B argi
をサブプロセス\fBx\fPにそのまま渡す。
ここで
\fBx\fPには以下のいずれかを指定する事ができる:
.B x
が
.B f
のときにはf2cに引数が渡される。
同様に
.B p
のときにはプリプロセッサに、
.B c
のときにはCコンパイラに、
.B a
のときにはアセンブラ(これも実際はCコンパイラ)に、
.B l
のときにはリンカに渡される。
例えば、Cのコンパイル時にプリプロセッサ定数を定義するには
.BR "-Wc,-DUNIX=1" 
とする。また、f2cの
.B -f
オプションを指定するには
.BR "-Wf,-f" 
とする。
.TP 8
.B "f2c のオプション"
つぎに列挙する様に殆どの
.B f2c
オプションはそのまま
.B f2c
に引き渡される:
.BR -C ,
.BR -U ,
.BR -u ,
.BR -a ,
.BR -E ,
.BR -h ,
.BR -P ,
.BR -R ,
.BR -r ,
.BR -z ,
.BR -I2 ,
.BR -I4 ,
.BR -onetrip ,
.BR -!c ,
.BR -!l ,
.BR -!P ,
.BR -!R ,
.BR -ext ,
.BR -!bs ,
.BR -W[n] ,
.BR -w8 , 
.BR -r8 ,
.BR -w66
.TP 8
.B "gcc のオプション"
つぎのオプションはgccにそのまま引き渡される:
.BR -f* ,
.BR -W* ,
.BR -U* ,
.BR -A* ,
.BR -m* ,
.BR -S ,
.BR -E ,
.BR -v ,
.BR -x ,
.BR -pipe ,
.BR -o ,
.BR -I ,
.BR -V ,
.BR -b* ,
.BR -p ,
.BR -pg
.TP 8
.B "リンカへのオプション"
リンク段階に渡されるオプションは
.BR -static ,
.BR -shared ,
.BR -v ,
.BR -V ,
.BR -symbolic
.SH バグ
デバッグ機能を働かせるためには、最初にブレークポイントを
.B MAIN__
に設定する必要がある。
.PP
このスクリプトは、自動的に
.B -I.
オプションをつけて
.BR f2c 
を起動する。
古いバージョンの
.BR f2c 
ではこのオプションをサポートしていないかもしれない。
.PP
このスクリプトはgccとf2cの組合せ用に作られている。それ以外のコンパイ
ラを用いる場合には多分変更が必要だろう。
.PP
gccとは異なり、-Oを指定すると自動的に
.B -ffast-math
オプションも指定される。
この事が問題を起こす場合には、
.BR -fnofast-math 
によってこの設定を無効にすることができる。
.PP
.B fort77 
スクリプトはスラッシュから始まるロングオプションを受け付けるので、
厳密に Posix.2 に従っているわけではない。
これは gcc との互換性のためである。
.SH 著者
Thomas Koenig, ig25@rz.uni-karlsruhe.de
.SH 翻訳者
古高和禎 <furutaka@Flux.tokai.jaeri.go.jp>
.br
棚橋誠治 <tanabash@tuhep.phys.tohoku.ac.jp>

