.\"   Copyright (C) 1996-1999 Free Software Foundation, Inc.
.\"
.\"   Permission is granted to make and distribute verbatim copies of
.\" this manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\"   Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided that
.\" the entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\"   Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that this permission notice may be stated in a
.\" translation approved by the Foundation.
.\"
.\" Copyright (C) 1996 Xavier Leroy.
.\"
.\" Japanese Version Copyright (C) 2002-2003 Suzuki Takashi
.\"         all rights reserved.
.\" Translated Tue Dec 31 23:50:20 JST 2002
.\"         by Suzuki Takashi.
.\"
.\"WORD:    terminate           終了
.\"WORD:    calling thread      呼び出しスレッド
.\"WORD:    exit                終了
.\"
.\"
.TH PTHREAD_EXIT 3 LinuxThreads

.\"O .SH NAME
.\"O pthread_exit \- terminate the calling thread
.SH "名前"
pthread_exit \- 呼び出しスレッドを終了する

.\"O .SH SYNOPSIS
.SH "書式"
.B #include <pthread.h>

.BI "void pthread_exit(void *" retval ");"

.\"O .SH DESCRIPTION
.\"O .B "pthread_exit"
.\"O terminates the execution of the calling thread.
.\"O All cleanup handlers that have been set for the calling thread with
.\"O .BR "pthread_cleanup_push" (3)
.\"O are executed in reverse order (the most
.\"O recently pushed handler is executed first). Finalization functions for
.\"O thread-specific data are then called for all keys that have non-
.\"O .B "NULL"
.\"O values associated with them in the calling thread (see
.\"O .BR "pthread_key_create" (3)).
.\"O Finally, execution of the calling thread is
.\"O stopped.
.SH "説明"
.B "pthread_exit"
は、呼び出しスレッドの実行を終了する。
.BR "pthread_cleanup_push" (3)
で呼び出しスレッドに対して登録されたすべてのクリーンアップハンドラが
逆順で実行される ( 最後に登録されたハンドラが最初に実行される ) 。
次に、非
.B "NULL"
の値が結び付けられているすべてのキーに対して、
スレッド固有データに対応するデストラクタ関数が呼び出される (
.BR "pthread_key_create" (3)
を参照のこと ) 。
最後に、呼び出しスレッドの実行が停止される。

.\"O The 
.\"O .I "retval"
.\"O argument is the return value of the thread. It can be
.\"O consulted from another thread using 
.\"O .BR "pthread_join" (3).
引数
.I "retval"
はスレッドの返り値である。
この値は別のスレッドから
.BR "pthread_join" (3)
を呼び出すことで参照することができる。

.\"O .SH "RETURN VALUE"
.\"O The 
.\"O .B "pthread_exit"
.\"O function never returns.
.SH "返り値"
関数
.B "pthread_exit"
が返ることはない。

.\"O .SH AUTHOR
.SH "著者"
Xavier Leroy <Xavier.Leroy@inria.fr>

.\"O .SH "SEE ALSO"
.SH "関連項目"
.BR "pthread_create" (3),
.BR "pthread_join" (3).
