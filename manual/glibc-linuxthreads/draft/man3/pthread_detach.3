.\"   Copyright (C) 1996-1999 Free Software Foundation, Inc.
.\"
.\"   Permission is granted to make and distribute verbatim copies of
.\" this manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\"   Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided that
.\" the entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\"   Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that this permission notice may be stated in a
.\" translation approved by the Foundation.
.\"
.\" Copyright (C) 1996 Xavier Leroy.
.\" 
.\" Japanese Version Copyright (C) 1999 GOTO, Masanori
.\"         all rights reserved.
.\" Translated on Tue Dec 14 21:30:57 JST 1999
.\"         by GOTO, Masanori <gotom@debian.or.jp>.
.\" Modified Sun Feb  2 01:00:26 JST 2003
.\"         by Suzuki Takashi.
.\"
.\"WORD:    thread              スレッド
.\"WORD:    detach              デタッチ
.\"WORD:    detached state      デタッチ状態
.\"WORD:    memory resources    メモリ資源
.\"WORD:    free                解放
.\"WORD:    synchronize         同期する
.\"WORD:    termination         終了
.\"WORD:    create              生成
.\"WORD:    attribute           属性
.\"WORD:    joinable            合流可能
.\"WORD:    join                合流
.\"WORD:    error code          エラーコード
.\"
.\"
.TH PTHREAD_DETACH 3 LinuxThreads

.\"O .SH NAME
.\"O pthread_detach \- put a running thread in the detached state
.SH "名前"
pthread_detach \- 実行中のスレッドをデタッチ状態にする

.\"O .SH SYNOPSIS
.SH "書式"
.B #include <pthread.h>

.BI "int pthread_detach(pthread_t " th ");"

.\"O .SH DESCRIPTION
.\"O .B "pthread_detach"
.\"O put the thread 
.\"O .I "th"
.\"O in the detached state. This
.\"O guarantees that the memory resources consumed by 
.\"O .I "th"
.\"O will be freed
.\"O immediately when 
.\"O .I "th"
.\"O terminates. However, this prevents other threads
.\"O from synchronizing on the termination of 
.\"O .I "th"
.\"O using 
.\"O .BR "pthread_join" .
.SH "説明"
.B "pthread_detach"
はスレッド
.I "th"
をデタッチ状態にする。これは
.I "th"
が終了したときに、
.I "th"
によって消費されていたメモリ資源を即座に解放することを保証する。
しかしながら、これによって他のスレッドは
.B "pthread_join"
を用いて
.I "th"
の終了に同期することができなくなる。

.\"O A thread can be created initially in the detached state, using the
.\"O .B "detachstate"
.\"O attribute to 
.\"O .BR "pthread_create" (3).
.\"O In contrast,
.\"O .B "pthread_detach"
.\"O applies to threads created in the joinable state, and
.\"O which need to be put in the detached state later.
スレッドは
.BR "pthread_create" (3)
の属性に
.B "detachstate"
を用いることによって、最初からデタッチ状態で生成
することができる。
これに対し、
.B "pthread_detach"
は合流可能状態として生成され、後にデタッチ状態にする必要の出てきた
スレッドに適用される。

.\"O After 
.\"O .B "pthread_detach"
.\"O completes, subsequent attempts to perform
.\"O .B "pthread_join"
.\"O on 
.\"O .I "th"
.\"O will fail. If another thread is already joining
.\"O the thread 
.\"O .I "th"
.\"O at the time 
.\"O .B "pthread_detach"
.\"O is called,
.\"O .B "pthread_detach"
.\"O does nothing and leaves 
.\"O .I "th"
.\"O in the joinable state.
.B "pthread_detach"
が完了した後、
.I "th"
に対して
.B "pthread_join"
を実行しても失敗する。もし
.B "pthread_detach"
が呼ばれた時に別のスレッドがスレッド
.I "th"
の終了を待っている (joining) ならば、
.B "pthread_detach"
は何もせず、
.I "th"
を合流可能状態のままにしておく。

.\"O .SH "RETURN VALUE"
.\"O On success, 0 is returned. On error, a non-zero error code is returned.
.SH "返り値"
成功すると 0 が返る。エラーの場合は、非 0 のエラーコードが返る。

.\"O .SH ERRORS
.\"O .TP
.\"O .B "ESRCH"
.\"O No thread could be found corresponding to that specified by 
.\"O .I "th"
.\"O .TP
.\"O .B "EINVAL"
.\"O the thread 
.\"O .I "th"
.\"O is already in the detached state
.SH "エラー"
.TP
.B "ESRCH"
.I "th"
で指定したスレッドが見つからない。
.TP
.B "EINVAL"
スレッド
.I "th"
は既にデタッチ状態にある。
.TP

.\"O .SH AUTHOR
.SH "著者"
Xavier Leroy <Xavier.Leroy@inria.fr>

.\"O .SH "SEE ALSO"
.SH "関連項目"
.BR "pthread_create" (3),
.BR "pthread_join" (3),
.BR "pthread_attr_setdetachstate" (3)
