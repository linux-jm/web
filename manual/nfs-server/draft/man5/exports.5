.\"
.\" Original manual page is a part of nfs-server package.
.\" Following is a exerpt from README of version 2.2beta47.
.\" 
.\" 7.  Copyright
.\" 
.\" Much of the code in this package was originally  written  by
.\" Mark Shand, and is placed under the following copyright:
.\" 
.\"    This  software may be used for any purpose provided
.\"    the above  copyright  notice  is  retained.  It  is
.\"    supplied  as  is,  with  no warranties expressed or
.\"    implied.
.\" 
.\" Other code, especially that written by Rick Sladkey and some
.\" replacement routines included from the GNU libc, are covered
.\" by the GNU General Public License, version 2,  or  (at  your
.\" option) any later version.
.\" 
.\" Japanese Version Copyright (c) 1997 ISHIOKA Takashi
.\"         all rights reserved.
.\" Translated Mon Sep  8 14:02:18 1997
.\"         by ISHIOKA Takashi
.\" Mon Feb  9 15:16:20 1998: correction
.\" Modified Wed 11 Nov 1998 by NAKANO Takeo <nakano@apm.seikei.ac.jp>
.\" Updated & Modified Sun Jan 27 17:30:35 JST 2002
.\"         by Yuichi SATO <ysato@h4.dion.ne.jp>
.\" Modified Tue Feb 19 19:06:53 JST 2002 by Yuichi SATO
.\"
.TH EXPORTS 5 "11 August 1997"
.UC 5
.\"O .SH NAME
.\"O exports \- NFS file systems being exported
.SH 名前
exports \- エクスポート (export) される NFS ファイルシステム
.\"O .SH SYNOPSIS
.SH 書式
.B /etc/exports
.\"O .SH DESCRIPTION
.SH 説明
.\"O The file
.\"O .I /etc/exports
.\"O serves as the access control list for file systems which may be
.\"O exported to NFS clients.  It it used by both the NFS mount daemon,
.\"O .IR mountd (8)
.\"O and the NFS file server daemon
.\"O .IR nfsd (8).
.I /etc/exports
ファイルはファイルシステムのアクセスコントロールリストで、
どのファイルシステムを NFS クライアントにエクスポート (export) してよいか、
という情報を与える。
これは NFS mount デーモン
.BR mountd (8)
ならびに
NFS file server デーモン
.BR nfsd (8)
の双方で用いられる。
.PP
.\"O The file format is similar to the SunOS
.\"O .I exports
.\"O file, except that several additional options are permitted.  Each line
.\"O contains a mount point and a list of machine or netgroup names allowed
.\"O to mount the file system at that point.  An optional parenthesized list
.\"O of mount parameters may follow each machine name.  Blank lines are
.\"O ignored, and a # introduces a comment to the end of the line. Entries may
.\"O be continued across newlines using a backslash.
このファイルの書式は SunOS の
.I exports
ファイルとほぼ同じである。ただし指定できるオプションが
いくつか追加されている。
それぞれの行には、マウントポイントと、
そのポイントのファイルシステムをマウントできる
マシンやネットグループのリストが書かれている。
マウントパラメータのリストを括弧でくくったものを、
それぞれのマシンの名前の後に置くこともできる。
空行は無視され、# 以降行末まではコメントとみなされる。
行末にバックスラッシュをおけば、エントリは次の行に継続できる。
.PP
.\"O .SS Machine Name Formats
.SS マシン名のフォーマット
.\"O NFS clients may be specified in a number of ways:
NFS クライアントはいろいろな方法で指定できる。
.IP "single host
.\"O This is the most common format. You may specify a host either by an
.\"O abbreviated name recognizued be the resolver, the fully qualified domain
.\"O name, or an IP address.
これはもっとも普通のフォーマットである。ホストの指定には、
レゾルバが認識できる省略形、FQDN、IP アドレスのどれを用いてもよい。
.IP "netgroups
.\"O NIS netgroups may be given as
.\"O .IR @group .
.\"O Only the host part of all
.\"O netgroup members is extracted and added to the access list. Empty host
.\"O parts or those containing a single dash (\-) are ignored.
NIS のネットグループを
.I @group
のように与えることができる。ネットグループのすべてのメンバーのうち、
ホストの部分だけが取り出され、アクセスリストに追加される。
ホストの部分が空だったり、単一のダッシュ (\-) だったものは無視される。
.\"O .IP "wildcards
.IP ワイルドカード
.\"O Machine names may contain the wildcard characters \fI*\fR and \fI?\fR.
.\"O This can be used to make the \fIexports\fR file more compact; for instance,
.\"O \fI*.cs.foo.edu\fR matches all hosts in the domain \fIcs.foo.edu\fR. However,
.\"O these wildcard characters do not match the dots in a domain name, so the
.\"O above pattern does not include hosts such as \fIa.b.cs.foo.edu\fR.
マシン名の指定には、ワイルドカード文字として
\fI*\fP と \fI?\fP を用いることができる。
これらを使うと \fIexports\fR ファイルをコンパクトにできる。
例えば \fI*.cs.foo.edu\fR はドメイン \fIcs.foo.edu\fR にある
すべてのホストにマッチする。
ただし、これらのワイルドカード文字はドメイン名のドット (.) にはマッチしない。
したがって上記のパターンは、ドメイン内の
\fIa.b.cs.foo.edu\fR のようなホストにはマッチしない。
.IP "IP networks
.\"O You can also export directories to all hosts on an IP (sub-) network
.\"O simultaneously. This is done by specifying an IP address and netmask pair
.\"O as
.\"O .IR address/netmask .
ディレクトリを IP の (サブ) ネットワークに存在するすべてのホストに
同時にエクスポートすることもできる。
これには IP アドレスとネットマスクのペアを
.I address/netmask
のように指定すればよい。
.TP
.B =public
.\"O This is a special ``hostname'' that identifies the given directory name
.\"O as the public root directory (see the section on WebNFS in
.\"O .BR nfsd (8)
.\"O for a discussion of WebNFS and the public root handle). When using this
.\"O convention,
.\"O .B =public
.\"O must be the only entry on this line, and must have no export options
.\"O associated with it. Note that this does
.\"O .I not
.\"O actually export the named directory; you still have to set the exports
.\"O options in a separate entry.
これは特殊な意味を持つ「ホスト名」で、その前に与えられたディレクトリ
が public root ディレクトリであることを示す
(WebNFS と public root ハンドルの詳細に関しては
.BR nfsd (8)
の WebNFS のセクションを参照のこと)。
この書式を用いる際には、
.B =public
がその行での唯一のホスト名エントリでなければならない。
またエクスポートオプションを指定してはならない。
この指定によって、
ディレクトリが実際にエクスポートされるわけでは\fBない\fPことに注意すること。
エクスポートオプションは、これとは別のエントリで指定する必要がある。
.PP
.\"O The public root path can also be specified by invoking
.\"O .I nfsd
.\"O with the
.\"O .B \-\-public\-root
.\"O option. Multiple specifications of a public root will be ignored.
public root パスは
.I nfsd
を
.B \-\-public\-root
オプションを指定して起動することによっても指定できる。
public root の複数指定は無視される。
.PP
.\"O .SS General Options
.SS 一般的なオプション
.\"O .IR mountd " and " nfsd
.\"O understand the following export options:
.IR mountd " と " nfsd
は以下のエクスポートオプションを受け付ける。
.TP
.IR secure "\*d
.\"O This option requires that requests originate on an internet port less
.\"O than IPPORT_RESERVED (1024). This option is on by default. To turn it
.\"O off, specify
.\"O .IR insecure .
このオプションを指定すると、IPPORT_RESERVED (1024) より小さな
internet ポートから発したリクエストしか受けつけない。
このオプションはデフォルトで有効になっている。
無効にするには
.IR insecure
と指定する。
.TP
.IR rw
.\"O Allow the client to modify files and directories. The default is to
.\"O restrict the client to read-only request, which can be made explicit
.\"O by using the
.\"O .IR ro " option.
クライアントによるファイルとディレクトリの変更を許可する。
デフォルトでは、クライアントは読み込みのリクエストだけに制限されている。
(これは
.I ro
オプションで明示した場合も同じ)。
.TP
.I noaccess
.\"O This makes everything below the directory inaccessible for the named
.\"O client.  This is useful when you want to export a directory hierarchy to
.\"O a client, but exclude certain subdirectories. The client's view of a
.\"O directory flagged with noaccess is very limited; it is allowed to read
.\"O its attributes, and lookup `.' and `..'. These are also the only entries
.\"O returned by a readdir.
このオプションを付けたクライアントは、
そのディレクトリ以下のすべてのファイルに対してアクセスできなくなる。
あるディレクトリ階層をクライアントにエクスポートするとき、
特定のサブディレクトリを除きたい場合などに便利である。
noaccess フラグが付いたディレクトリのクライアントからの見え方は、
非常に制限されたものとなる。
ディレクトリ属性と、`.' および `..' の閲覧だけが許される。
readdir に対して返されるエントリもこの 2 つだけになる。
.TP
.IR link_relative
.\"O Convert absolute symbolic links (where the link contents start with a
.\"O slash) into relative links by prepending the necessary number of ../'s
.\"O to get from the directory containing the link to the root on the
.\"O server.  This has subtle, perhaps questionable, semantics when the file
.\"O hierarchy is not mounted at its root.
絶対パス形式のシンボリックリンクを相対パス形式のリンクに変換する
(絶対パス形式とは、リンクの内容が "/" で始まるものである)。
変換は次のように行われる。
まずリンクが置かれているディレクトリの、サーバのルートからの
深さを取得する。そしてその数だけ '../' を絶対リンクの前に付加する。
マウントポイントのルートからの位置が異なる場合、
この変換には微妙な (おそらく障害の原因となる)
あいまいさが含まれる可能性がある。
.TP
.IR link_absolute
.\"O Leave all symbolic link as they are. This is the default operation.
全てのシンボリックリンクをそのままにする。これがデフォルトである。
.\"O .SS User ID Mapping
.SS ユーザ ID のマッピング
.PP
.\"O .I nfsd
.\"O bases its access control to files on the server machine on the uid and
.\"O gid provided in each NFS RPC request. The normal behavior a user would
.\"O expect is that she can access her files on the server just as she would
.\"O on a normal file system. This requires that the same uids and gids are
.\"O used on the client and the server machine. This is not always true, nor
.\"O is it always desirable.
サーバマシン上のファイルに対する
.I nfsd
によるアクセスコントロールは、
それぞれの NFS RPC request の際に与えられる uid と gid に基づいている。
ユーザは通常、サーバ上にある自分のファイルには、
それが普通のファイルシステム上にあるのと同様に
アクセス可能であることを期待している。
これにはクライアントとサーバ上で用いられる
uid と gid がそれぞれ同じである必要があるが、
これは常に真であるとは限らず、望ましいとも限らない。
.PP
.\"O Very often, it is not desirable that the root user on a client machine
.\"O is also treated as root when accessing files on the NFS server. To this
.\"O end, uid 0 is normally mapped to a different id: the so-called
.\"O anonymous or
.\"O .I nobody
.\"O uid. This mode of operation (called `root squashing') is the default,
.\"O and can be turned off with
.\"O .IR no_root_squash .
クライアントマシンの root が NFS サーバのファイルにアクセスするとき、
サーバの root として扱われてしまうのは、ほとんどの場合は望ましくない。
このため uid 0 は普通は別の id (anonymous や
.I nobody
uid) にマッピングされる。
この動作は  `root squashing' と呼ばれるが、これがデフォルトである。
.I no_root_squash 
を使えばオフにできる。
.PP
.\"O By default,
.\"O .I nfsd
.\"O tries to obtain the anonymous uid and gid by looking up user
.\"O .I nobody
.\"O in the password file at startup time. If it isn't found, a uid and gid
.\"O of -2 (i.e. 65534) is used. These values can also be overridden by
.\"O the
.\"O .IR anonuid " and " anongid
.\"O options.
デフォルトでは、
.I nfsd
は起動時に password ファイル中の
.I nobody
ユーザを参照して、
anonymous の uid と gid を得ようとする。
もしそれが見つからない場合には、
uid と gid として -2 (つまり 65534) を用いる。
これらの数値は 
.IR anonuid " と " anongid
オプションによって変更できる。
.PP
.\"O In addition to this, 
.\"O .I nfsd
.\"O lets you specify arbitrary uids and gids that should be mapped to user
.\"O nobody as well. Finally, you can map all user requests to the
.\"O anonymous uid by specifying the
.\"O .IR all_squash " option.
これに加え、
.I nfsd
によって nobody に割り当てるべき適当な uid と gid とを指定することもできる。
最後に、
.I all_squash
オプションを指定すれば、
全ての user request を anonymous uid に割り当てることもできる。
.PP 
.\"O For the benefit of installations where uids differ between different
.\"O machines, 
.\"O .I nfsd
.\"O provides several mechanism to dynamically map server uids to client
.\"O uids and vice versa: static mapping files, NIS-based mapping, and
.\"O .IR ugidd -based
.\"O mapping.
マシンごとに uid が異なるような場合への導入を容易にするため、
.I nfsd
ではサーバの uid をクライアントの uid に (あるいはその逆に) 
動的にマッピングする手法をいくつか提供している。
静的なマッピングファイル、NIS ベースのマッピング、
.I ugidd
ベースのマッピング、である。
.PP
.\"O .IR ugidd -based
.\"O mapping is enabled with the 
.\"O .I map_daemon
.\"O option, and uses the UGID RPC protocol. For this to work, you have to run
.\"O the
.\"O .IR ugidd (8)
.\"O mapping daemon on the client host. It is the least secure of the three methods,
.\"O because by running
.\"O .IR ugidd ,
.\"O everybody can query the client host for a list of valid user names. You
.I ugidd
ベースのマッピングは
.I map_daemon
オプションを指定して UGID RPC プロトコルを使えば可能となる。
このプロトコルを動かすにはクライアントで
.IR ugidd (8)
mapping デーモンを動作させる必要がある。
これは 3 つある方法の中で、セキュリティ的には最悪である。
なぜなら
.I ugidd
を動作させると、誰でもクライアントに問い合わせて、
有効なユーザ名のリストを入手できてしまうからである。
.\"O can protect yourself by restricting access to
.\"O .I ugidd
.\"O to valid hosts only. This can be done by entering the list of valid
.\"O hosts into the
.\"O .I hosts.allow
.\"O or 
.\"O .I hosts.deny
.\"O file. The service name is
.\"O .IR ugidd .
.\"O For a description of the file's syntax, please read
.\"O .IR hosts_access (5).
.I ugidd
へのアクセスを特定のホストのみに制限して、身を守ることもできる。
これには許可するホストのリストを
.I hosts.allow
または
.I hosts.deny
ファイルに記述すればよい。サービス名は
.I ugidd
である。これらのファイルの文法については、
.IR hosts_access (5)
を参照してほしい。
.PP
.\"O Static mapping is enabled by using the
.\"O .I map_static
.\"O option, which takes a file name as an argument that describes the mapping.
.\"O NIS-based mapping queries the client's NIS server to obtain a mapping from
.\"O user and group names on the server host to user and group names on the
.\"O client.
静的なマッピングは
.I map_static
オプションによって動作させることができる。
このオプションは、マッピングを記述したファイルの名前を引数にとる。
NIS ベースのマッピングは、クライアントの NIS サーバに問い合わせて、
サーバーホストでのユーザ名およびグループ名から
クライアントでのユーザ名およびグループ名への、
マッピング情報を入手する。
.PP
.\"O Here's the complete list of mapping options:
以下にマッピングオプションの完全なリストをあげる:
.TP
.IR root_squash
.\"O Map requests from uid/gid 0 to the anonymous uid/gid. Note that this does
.\"O not apply to any other uids that might be equally sensitive, such as user
.\"O .IR bin .
uid/gid が 0 のリクエストを annonymous uid/gid にマッピングする。
このオプションは、root 以外の uid には適用されない。
他にも注意すべき uid は存在する (例えば
.I bin 
など) ので、注意する必要がある。
.TP
.IR no_root_squash
.\"O Turn off root squashing. This option is mainly useful for diskless clients.
root squashing を無効にする。
このオプションは主にディスクレスクライアントにとって便利である。
.TP
.IR squash_uids " and " squash_gids
.\"O This option specifies a list of uids or gids that should be subject to
.\"O anonymous mapping. A valid list of ids looks like this:
このオプションは、annonymous にマッピングされる
uid や gid のリストを明示するためのものである。
id のリストとしては以下のような指定が有効である:
.IP
.IR squash_uids=0-15,20,25-50
.IP
.\"O Usually, your squash lists will look a lot simpler.
通常の squash リストはもっとずっと簡単なものになるだろうが。
.TP
.IR all_squash
.\"O Map all uids and gids to the anonymous user. Useful for NFS-exported
.\"O public FTP directories, news spool directories, etc. The opposite option
.\"O is 
.\"O .IR no_all_squash ,
.\"O which is the default setting.
全ての uid とgid を anonymous にマッピングする。
これは NFS エクスポートされた公開 FTP ディレクトリや、
news のスプールディレクトリ等に便利である。
これと逆のオプションは
.IR no_all_squash 
であり、こちらがデフォルトになっている。
.TP
.IR map_daemon
.\"O This option turns on dynamic uid/gid mapping. Each uid in an NFS request
.\"O will be translated to the equivalent server uid, and each uid in an
.\"O NFS reply will be mapped the other way round. This option requires that
.\"O .IR rpc.ugidd (8)
.\"O runs on the client host. The default setting is
.\"O .IR map_identity ,
.\"O which leaves all uids untouched. The normal squash options apply regardless
.\"O of whether dynamic mapping is requested or not.
このオプションは 動的な uid/gid のマッピングを有効にする。
NFS request 中のそれぞれの uid はサーバ上の対応する uid に変換され、
NFS reply 中の uid はそれぞれ逆に変換される。
このオプションを用いるには、クライアントホストで
.BR rpc.ugidd (8)
が動作していることが必要である。
デフォルトでは、全ての uid を変えない
.I map_identity 
となっている。
普通の squash オプションは、
動的なマッピングか否かを気にすることなく適用できる。
.TP
.IR map_static
.\"O This option enables static mapping. It specifies the name of the file
.\"O that describes the uid/gid mapping, e.g.
このオプションを指定すると静的なマッピングが可能となる。
uid/gid マッピングが記述されたファイル名を以下のように指定する。
.IP
.IR map_static=/etc/nfs/foobar.map
.IP
.\"O The file's format looks like this
ファイルのフォーマットは以下のようなものである。
.IP
.nf
.ta +3i
# Mapping for client foobar:
#    remote     local
uid  0-99       -       # squash these
uid  100-500    1000    # map 100-500 to 1000-1400
gid  0-49       -       # squash these
gid  50-100     700     # map 50-100 to 700-750
.fi
.TP
.IR map_nis
.\"O This option enables NIS-based uid/gid mapping. For instance, when
.\"O the server encounters the uid 123 on the server, it will obtain the
.\"O login name associated with it, and contact the NFS client's NIS server
.\"O to obtain the uid the client associates with the name.
このオプションを指定すると NIS ベースの uid/gid マッピングが可能となる。
例えば、サーバが uid 123 の指定を受けると、
サーバはまずその uid に対応するローカルのログイン名を調べる。
次に NFS クライアントの NIS サーバに接続して、
そのログイン名に対応する uid を取得する。
.IP
.\"O In order to do this, the NFS server must know the client's NIS domain.
.\"O This is specified as an argument to the
.\"O .I map_nis
.\"O options, e.g.
これを行うには、NFS サーバがクライアントの NIS ドメインを
知っていなければならない。
このドメインは
.I map_nis
オプションの引数として以下のように指定する。
.IP
.I map_nis=foo.com
.IP
.\"O Note that it may not be sufficient to simply specify the NIS domain
.\"O here; you may have to take additional actions before
.\"O .I nfsd
.\"O is actually able to contact the server. If your distribution uses
.\"O the NYS library, you can specify one or more NIS servers for the
.\"O client's domain in
.\"O .IR /etc/yp.conf .
ただここに NIS ドメインを記述するだけでは、通常は充分ではない。
.I nfsd
が NIS サーバにコンタクトできるようにするには、
他の作業が必要となるだろう。
利用しているディストリビューションが NYS ライブラリを使っている場合は、
クライアントのドメインのサーバを
.I /etc/yp.conf
に一つ以上指定する必要があるだろう。
.\"O If you are using a different NIS library, you may have to obtain a
.\"O special
.\"O .IR ypbind (8)
.\"O daemon that can be configured via
.\"O .IR yp.conf .
他の NIS ライブラリを用いている場合には、
.I yp.conf
によって設定できるような、特殊な
.IR ypbind (8)
を入手する必要があるかもしれない。
.TP
.\"O .IR anonuid " and " anongid
.IR anonuid " および " anongid
.\"O These options explicitly set the uid and gid of the anonymous account.
.\"O This option is primarily useful for PC/NFS clients, where you might want
.\"O all requests appear to be from one user. As an example, consider the
.\"O export entry for
.\"O .B /home/joe
.\"O in the example section below, which maps all requests to uid 150 (which
.\"O is supposedly that of user joe).
これらのオプションは anonymous アカウントの uid と gid を明示的にセットする。
これは、全てのリクエストが一人のユーザからになるような
PC/NFS clients にとって主に有効である。
例えば、以下の「例」のセクションでの
.I /home/joe
というエクスポートエントリを見てほしい。
この例では、(joe からのものであると思われる) 全てのリクエストが
uid 150 にマッピングされる。
.IP
.\"O .SH EXAMPLE
.SH 例
.PP
.nf
.ta +3i
# sample /etc/exports file
/               master(rw) trusty(rw,no_root_squash)
/projects       proj*.local.domain(rw)
/usr            *.local.domain(ro) @trusted(rw)
/home/joe       pc001(rw,all_squash,anonuid=150,anongid=100)
/pub            (ro,insecure,all_squash)
/pub/private    (noaccess)
.fi
.PP
.\"O The first line exports the entire filesystem to machines master and trusty.
.\"O In addition to write access, all uid squashing is turned off for host
.\"O trusty. The second and third entry show examples for wildcard hostnames
.\"O and netgroups (this is the entry `@trusted'). The fourth line shows the
.\"O entry for the PC/NFS client discussed above. Line 5 exports the
.\"O public FTP directory to every host in the world, executing all requests
.\"O under the nobody account. The
.\"O .I insecure 
.\"O option in this entry also allows clients with NFS implementations that
.\"O don't use a reserved port for NFS. The last line denies all NFS clients
.\"O access to the private directory.
1 行目は、master と trusty に対して、
すべてのファイルシステムのマウント許可を出している。
書き込みの許可に加え、さらに trusty に対しては、
すべての uid squashing も無効にしている。
2 行目と 3 行目は、ホスト名へのワイルドカードの利用と、
ネットグループ (@trusted' のエントリ) の例である。
4 行目は、上で述べた PC/NFS クライアント用エントリの例である。
5 行目は、公開 FTP ディレクトリを世界中の全てのホストにエクスポートしている。
すべてのリクエストは nobody アカウントで実行される。
またこのエントリ中の
.I insecure 
オプションによって、NFS 用 port を使わないように実装された NFS
クライアントからのアクセスも許可している。
最後の行では、private ディレクトリへのアクセスをすべての
クライアントに対して拒否するようにしている。
.\"O .SH CAVEATS
.SH 警告
.\"O Unlike other NFS server implementations, this
.\"O .I nfsd
.\"O allows you to export both a directory and a subdirectory thereof to
.\"O the same host, for instance 
.\"O .IR /usr " and " /usr/X11R6 .
他の NFS Server の実装と違い、
この
.B nfsd
では、例えば
.IR /usr " と " /usr/X11R6 
のように、あるディレクトリとそのサブディレクトリとの両方を
同じホストにエクスポートすることができる。
.\"O In this case, the mount options of the most specific entry apply. For
.\"O instance, when a user on the client host accesses a file in 
.\"O .IR /usr/X11R6 ,
.\"O the mount options given in the 
.\"O .I /usr/X11R6 
.\"O entry apply. This is also true when the latter is a wildcard or netgroup
.\"O entry.
この場合、特定の度合がもっとも高いエントリのマウントオプションが適用される。
例えばクライアントホスト上のユーザが
.IR /usr/X11R6 
のファイルにアクセスする場合は、
.I /usr/X11R6 
のエントリであたえられた マウントオプションが適用される。
このルールは、エントリのホスト指定が
ワイルドカードやネットグループのときにも適用される。
.\"O .SH FILES
.SH ファイル
/etc/exports
.\"O .SH DIAGNOSTICS
.SH 返り値
.\"O An error parsing the file is reported using syslogd(8) as level NOTICE from
.\"O a DAEMON whenever nfsd(8) or mountd(8) is started up.  Any unknown
.\"O host is reported at that time, but often not all hosts are not yet known
.\"O to named(8) at boot time, thus as hosts are found they are reported
.\"O with the same syslogd(8) parameters.
.BR nfsd (8)
か
.BR mountd (8)
が起動していれば、
ファイルの解釈中のエラーは常に
.BR syslogd (8)
を用いて報告される。
DAEMON からの NOTICE レベルとなる。
そのとき、未知のホスト全てが報告される。
しかし起動時には
.BR named (8)
が全てのホストを知らない場合もありうる。
したがってホストが見つかるたびに、それらは
.BR syslogd (8)
に、同じパラメータで報告される。
.\"O .SH SEE ALSO
.SH 関連項目 
mountd(8), nfsd(8)
