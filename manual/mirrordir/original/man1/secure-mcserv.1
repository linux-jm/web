.\" (c) 1998 by James R. Van Zandt <jrv@vanzandt.mv.com>    -*- nroff -*-
.TH mirrordir 1 "1998 November 8" "Linux"
.SH NAME secure-mcserv
secure-mcserv \- secure server for encrypted login, file transfer and socket forwarding.
.SH SYNOPSIS
.BI secure-mcserv " \fR[\fPoptions\fR] [\fP" -p " portnum\fR]\fP"
.SH DESCRIPTION
.PP
\fBsecure-mcserv\fP is a server for the Midnight Commander (network)
filesystem (mcfs) of the Midnight Commander vfs (virtual file system).
It is part of the \fBmirrordir\fP package. In can operate as a
substitute to the Midnight Commander's native \fBmcserv\fP daemon,
although It has several extensions for use with \fBmirrordir\fP.
.TP
\fBsecurity and compression\fP
This is not so much a feature of \fBsecure-mcserv\fP as of the
transparent secure TCP layer implemented for the whole of
\fBmirrordir\fP. This layer can operate in normal mode, compressed
(gzipped) mode, encrypted mode, or compressed and encrypted mode. The
mode of connection is autodetected from magic numbers at the head of the
TCP stream. The Midnight Commander can use \fBsecure-mcserv\fP instead
of its native \fBmcserv\fP. See the \fB-z\fP, \fB--secure\fP and
\fB-K\fP options of \fBmirrordir\fP(1).
.TP
\fBDenying access from specific hosts\fP
.RS
You can add to your \fI/etc/hosts.allow\fP file lines like the following:
.PP
.nf
    secure-mcserv:  <source-ip-address> : ALLOW
    secure-mcserv:  212.89.128.0/255.255.255.0 : ALLOW
    secure-mcserv:  ALL : DENY
.fi
.PP
(This feature was submitted to me by Juergen Kammer <j.kammer@eurodata.de>
who claims it works.)
.RE
.TP
\fBlogins\fP
You can securely login to \fBsecure-mcserv\fP with \fBpslogin\fP which
comes with the \fBmirrordir\fP distribution. This is analogous to
\fBrlogin\fP(1) working with \fBrlogind\fP(1). See the
\fB--login-mode\fP option of \fBmirrordir\fP(1).
.TP
\fBTCP socket forwarding\fP
Using the \fBforward\fP(1) command of the \fBmirrordir\fP distribution,
you can forward arbitrary TCP socket connections over a secure and/or
compressed TCP channel. This is very useful for making encrypted
services out of ordinary services. \fBforward\fP(1) has an examples
section.
.SH OPTIONS
.TP 
\fB-d\fP
Become a daemon (set -q). This option will almost always be used.
Alternative \fB-d\fP can be omitted and \fB-v\fP (see below) set to
debug failed connections.
.TP
\fB-q\fP
Quiet mode. This is the default.
.TP
\fB-f\fP
Try ftp authentication if normal authentication fails.
.TP
\fB-v\fP
Verbose mode. Print out various debugging information.
.TP 
\fB-p\fP \fIport\fP
Specify a port number to listen to. The default is 9876.
.TP
\fB-s\fP \fIserver\fP\fB[\fP\fI:port\fP\fB]\fP
.RS
Specify a password server to use. The password server is
just another machine running \fBsecure-mcserv\fP albeit 
without the \fB-s\fP option.

This is a very useful option if you have lots of machines that a
group of users have to be able to log into. Create accounts for
all these users on each machine and disable them by editing
their password fields to \fB*\fP in \fB/etc/password\fP (or
\fB/etc/shadow\fP).

Select one machine as your password server (say it is called
\fBpasserv.my.doma.in\fP). This machine will contain proper
password fields in \fB/etc/password\fP. On this machine run
\fBsecure-mcserv -d\fP as usual. On all other machines, run
\fBsecure-mcserv -d -s passerv.my.doma.in\fP

Because all intermediate connections use the same encrypted TCP
stream, and are all equally secure, you can use this method even
if \fBpasserv.my.doma.in\fP is across the open internet. In fact
the very method to authenticate against the password server is
to check the exit status of the command:
.br
.nf
\fBpslogin\fP \fIuser\fP\fB@passerv.my.doma.in --test-login --read-password-from-stdin\fP
.fi
.PP
I also see no reason why you cannot use cascading password
servers, although there is no advantage to doing this.

Each authentication takes the same time to execute, so using a
password server takes twice as long as a normal login, because
of the second connection it has to make to the password server.
Cascades will take that much time extra for each successive
password server.
.RE
.SH BUGS
Does not log to syslog.
.PP
Midnight Commander vfs has a bug that device files are always
major:minor of 0:0. This bug is fixed in this implementation.
Don't use the Midnight Commander to transfer device files. By
the time you read this, the latest Midnight Commander may have
had this fixed.
.PP
The special escape characters for suspending an \fBrlogin\fP session are
not recognised. Hence programs like \fBscreen\fP (?) will not work. I
will add this functionality if users request it. Currently, ^Z etc. do
not have any effect.
.PP
.SH FILES
See \fBmirrordir\fP(1).
.PP
.SH STANDARDS
None. See \fBBUGS\fP.
.PP
.SH AVAILABILITY
The latest version of the program can be found at either
\fBftp://sunsite.unc.edu/pub/Linux/system/backup\fP, 
\fBftp://lava.obsidian.co.za/pub/linux/mirrordir\fP, or
\fBftp://obsidian.co.za/pub/linux/mirrordir\fP.
.SH AUTHOR
Paul Sheer  <psheer@obsidian.co.za>  <psheer@icon.co.za>
.SH "SEE ALSO"
\fBmirrordir\fP(1), \fBssh\fP(1), \fBmcserv\fP(1), \fBmc\fP(1)
