.\" This page is originally in the SysVinit package.
.\"
.\" Translated Fri 14 Feb 1997
.\"         by Kazuyoshi Furutaka <furutaka@Flux.tokai.jaeri.go.jp>
.\" Updated Sun 14 May 2000 by Kentaro Shirakata <argrath@ub32.org>
.\" Updated Fri 27 Sep 2002 by NAKANO Takeo <nakano@apm.seikei.ac.jp>
.\"
.\"{{{}}}
.\"{{{  Title
.TH INIT 8 "23 August 2001" "" "Linux System Administrator's Manual"
.\"}}}
.\"{{{  Name
.\"O .SH NAME
.\"O init, telinit \- process control initialization
.SH 名前
init, telinit \- プロセス制御の初期化
.\"}}}
.\"{{{  Synopsis
.\"O .SH SYNOPSIS
.SH 書式
.B /sbin/init
.RB [ " -a " ]
.RB [ " -s " ]
.RB [ " -b " ]
.RB [ " -z xxx " ]
.RB [ " 0123456Ss " ]
.br
.B /sbin/telinit
.RB [ " \-t sec " ]
.RB [ " 0123456sSQqabcUu " ]
.\"}}}
.\"{{{  Description
.\"O .SH DESCRIPTION
.SH 説明
.\"{{{  init
.\"O .SS Init
.\"O nakano この subsection いらないと思う。
.\"O .B Init
.\"O is the parent of all processes.  Its primary role is to create processes
.\"O from a script stored in the file \fB/etc/inittab\fP (see
.\"O \fIinittab\fP(5)).  This file usually has entries which cause \fBinit\fP
.\"O to spawn \fBgetty\fPs on each line that users can log in.  It also
.\"O controls autonomous processes required by any particular system.
.B init
は全てのプロセスの親である。
その主な役割は、\fB/etc/inittab\fP (\fIinittab\fP(5) 参照)
ファイルに書かれたスクリプトに従ってプロセスを作り出すことにある。
通常このファイルには、ユーザがログイン可能な各接続ラインごとに
\fBgetty\fP を生成させるためのエントリが記されている。
また、特定のシステムが必要とする、自律的なプロセスの制御も行う。
.\"O .PP
.\"{{{ Runlevels
.\"O .SH RUNLEVELS
.SH ランレベル
.\"O A \fIrunlevel\fP is a software configuration of the system which allows
.\"O only a selected group of processes to exist.  The processes spawned by
.\"O \fBinit\fP for each of these runlevels are defined in the
.\"O \fB/etc/inittab\fP file.  \fBInit\fP can be in one of eight runlevels:
.\"O \fB0\(en6\fP and \fBS\fP or \fBs\fP.  The runlevel is
.\"O changed by having a privileged user run \fBtelinit\fP, which sends
.\"O appropriate signals to \fBinit\fP, telling it which runlevel to change
.\"O to.
\fIランレベル\fP とはシステムのソフトウェア的な設定で、
指定したプロセス群のみを存在させるようにするものである。
それぞれのランレベルで \fBinit\fP が作り出すプロセスは
\fB/etc/inittab\fP ファイルで定められている。
\fBinit\fP は \fB0\(en6\fP, \fBS\fP, \fBs\fP という
8 つのランレベルのうちの一つを取ることができる。
ランレベルは特権ユーザが \fBtelinit\fP を実行することによって変更される。
\fBtelinit\fP は \fBinit\fP に適切なシグナルを送り、
どのランレベルに変更すべきかを指示する。
.PP
.\"O Runlevels \fB0\fP, \fB1\fP, and \fB6\fP are reserved. Runlevel 0 is used to
.\"O halt the system, runlevel 6 is used to reboot the system, and runlevel
.\"O 1 is used to get the system down into single user mode. Runlevel \fBS\fP
.\"O is not really meant to be used directly, but more for the scripts that are
.\"O executed when entering runlevel 1. For more information on this,
.\"O see the manpages for \fBshutdown\fP(8) and \fBinittab\fP(5).
ランレベル \fB0\fP, \fB1\fP, \fB6\fP は予約されている。
ランレベル 0 はシステムを停止するために、
ランレベル 6 はシステムをリブートするために、
ランレベル 1 はシステムをシングルユーザモードにするために用いられる。
ランレベル \fBS\fP は直接用いるためのものではなく、
ランレベル \fB1\fP になった時に実行されるスクリプトのために存在する。
この詳細は \fBshutdown\fP(8) および \fBinittab\fP(5)
各 man ページを参照のこと。
.PP
.\"O Runlevels 7-9 are also valid, though not really documented. This is
.\"O because "traditional" Unix variants don't use them.
.\"O In case you're curious, runlevels \fIS\fP and \fIs\fP are in fact the same.
.\"O Internally they are aliases for the same runlevel.
文書には書かれてはいないが、ランレベル 7-9 も使用できる。
文書に書かれていないのは、「伝統的な」
Unix の派生種はランレベル 7-9 を使用していないからである。
参考のために言っておくと、実はランレベル \fIS\fP と \fIs\fP も同様である。
内部的には、この 2 つは同一のランレベルのエイリアスになっている。
.\"}}}
.\"O .PP
.\"O .SH BOOTING
.SH ブート
.\"O After \fBinit\fP is invoked as the last step of the kernel boot sequence,
.\"O it looks for the file \fB/etc/inittab\fP to see if there is an entry of the
.\"O type \fBinitdefault\fP (see \fIinittab\fP(5)). The \fBinitdefault\fP entry
.\"O determines the initial runlevel of the system.  If there is no such
.\"O entry (or no \fB/etc/inittab\fP at all), a runlevel must be
.\"O entered at the system console.
カーネルブートの最後のステップとして \fBinit\fP が起動されると、
\fBinit\fP は \fB/etc/inittab\fP ファイルを検索し、
\fBinitdefault\fP というエントリが存在するか調べる
(\fIinittab\fP(5) 参照)。
\fBinitdefault\fP はシステムが最初に取るべきランレベルを定義する。
\fB/etc/inittab\fP ファイル中にそのようなエントリがない場合、
あるいは \fB/etc/inittab\fP ファイル自体が存在しない場合は、
システムコンソールからランレベルを入力しなければならない。
.PP
.\"O Runlevel \fBS\fP or \fBs\fP bring the system to single user mode
.\"O and do not require an \fB/etc/inittab\fP file.  In single user mode,
.\"O \fB/sbin/sulogin\fP is invoked on \fB/dev/console\fP.
ランレベルを \fBS\fP または \fBs\fP にすると、
システムはシングルユーザモードに入る。
この場合は \fB/etc/inittab\fP ファイルを必要としない。
シングルユーザモードでは、\fB/dev/console\fP で
\fB/sbin/sulogin\fP が起動される。
.PP
.\"O When entering single user mode, \fBinit\fP reads the console's \fIioctl\fP(2)
.\"O states from \fB/etc/ioctl.save\fP. If this file does not exist, \fBinit\fP
.\"O initializes the line at \fB9600 baud\fP and with \fBCLOCAL\fP settings.
.\"O When \fBinit\fP leaves single user mode, it stores the console's \fIioctl\fP
.\"O settings in this file so it can re-use them for the next single-user session.
シングルユーザモードに入るとき、
\fBinit\fP は \fB/etc/ioctl.save\fP からコンソールの
\fIioctl\fP(2) の状態を読み込む。
このファイルが存在しない場合は、\fBinit\fP
はコンソールの接続ラインを
\fB9600 baud\fP で \fBCLOCAL\fP という設定
(訳注: ローカルに直接接続されている状態) に初期化する。
シングルユーザモードを抜ける際には、
次回のシングルユーザモードセッションでも同じ設定を利用できるよう、
コンソールの \fIioctl\fP の状態を
\fB/etc/ioctl.save\fP ファイルに保存する。
.PP
.\"O When entering a multi-user mode for the first time, \fBinit\fP performs the
.\"O \fBboot\fP and \fBbootwait\fP entries to allow file systems to be
.\"O mounted before users can log in.  Then all entries matching the runlevel
.\"O are processed.
初めてマルチユーザモードに入るとき、
\fBinit\fP は
\fBboot\fP エントリと \fBbootwait\fP エントリを実行し、
ユーザがログイン可能となる前にファイルシステムをマウントできるようにする。
そして、ランレベルにマッチする全てのエントリを処理する。
.PP
.\"O When starting a new process, \fBinit\fP first checks whether the file
.\"O \fI/etc/initscript\fP exists. If it does, it uses this script to
.\"O start the process.
新たなプロセスを起動するとき、
\fBinit\fP はまず \fI/etc/initscript\fP ファイルが存在するかを調べ、
存在する場合はそのスクリプトを用いてプロセスを起動する。
.PP
.\"O Each time a child terminates, \fBinit\fP records the fact and the reason
.\"O it died in \fB/var/run/utmp\fP and \fB/var/log/wtmp\fP,
.\"O provided that these files exist.
子プロセスが終了するごとに、
\fBinit\fP はその旨と終了した理由とを、
\fB/var/run/utmp\fP と \fB/var/log/wtmp\fP とに記録する
(ただしこれらのファイルが存在する場合)。
.\"O .SH CHANGING RUNLEVELS
.SH ランレベルの変更
.\"O After it has spawned all of the processes specified, \fBinit\fP waits
.\"O for one of its descendant processes to die, a powerfail signal, or until
.\"O it is signaled by \fBtelinit\fP to change the system's runlevel.  
.\"O When one of the above three conditions occurs, it re-examines
.\"O the \fB/etc/inittab\fP file.  New entries can be added to this file at
.\"O any time.  However, \fBinit\fP still waits for one of the above three
.\"O conditions to occur.  To provide for an instantaneous response, the
.\"O \fBtelinit Q\fP or \fBq\fP command can wake up \fBinit\fP to re-examine the
.\"O \fB/etc/inittab\fP file.
指示された全てのプロセスを生成すると、\fBinit\fP は
子孫のプロセスが死ぬか、powerfail シグナルが発せられるか、
\fBtelinit\fP からランレベルを変更せよとのシグナルが送られるまで待機する。
この 3 つのいずれかが起きた場合は、
\fBinit\fP は \fB/etc/inittab\fP ファイルを再度調べる。
このファイルには、いつでも新たなエントリを追加できる。
しかし、上の 3 条件のどれかが起きるまでは、
\fBinit\fP は待機状態を続ける。
新たなエントリを即座に反映させるには、
\fBtelinit Q\fP または \fBq\fP コマンドを用いて
\fBinit\fP を目覚めさせ、
\fB/etc/inittab\fP ファイルを再度調べさせればよい。
.PP
.\"O If \fBinit\fP is not in single user mode and receives a powerfail
.\"O signal (SIGPWR), it reads the file \fB/etc/powerstatus\fP. It then starts
.\"O a command based on the contents of this file:
シングルユーザモードにない時に \fBinit\fP が powerfail シグナル (SIGPWR)
を受け取ると、\fBinit\fP は \fB/etc/powerstatus\fP ファイルを読み込む。
そしてこのファイルの内容に基づいてコマンドを実行する。
.IP F(AIL)
.\"O Power is failing, UPS is providing the power. Execute the \fBpowerwait\fP
.\"O and \fBpowerfail\fP entries.
電源供給が途絶え、UPS が電源を供給している。
\fBpowerwait\fP エントリと \fBpowerfail\fP エントリを実行する。
.IP O(K)
.\"O The power has been restored, execute the \fBpowerokwait\fP entries.
電源供給が回復している。\fBpowerokwait\fP エントリを実行する。
.IP L(OW)
.\"O The power is failing and the UPS has a low battery. Execute the
.\"O \fBpowerfailnow\fP entries.
電源供給が途絶え、UPS のバッテリー容量が少なくなっている。
\fBpowerfailnow\fP エントリを実行する。
.PP
.\"O If /etc/powerstatus doesn't exist or contains anything else then the
.\"O letters \fBF\fP, \fBO\fP or \fBL\fP, init will behave as if it has read
.\"O the letter \fBF\fP.
/etc/powerstatus が存在しないか、その内容が
\fBF\fP, \fBO\fP, \fBL\fP のいずれでもない場合、
init は \fBF\fP を読み込んだものとして動作する。
.PP
.\"O Usage of \fBSIGPWR\fP and \fB/etc/powerstatus\fP is discouraged. Someone
.\"O wanting to interact with \fBinit\fP should use the \fB/dev/initctl\fP
.\"O control channel - see the source code of the \fBsysvinit\fP package
.\"O for more documentation about this.
\fBSIGPWR\fP と \fB/etc/powerstatus\fP の利用は推奨されない。
\fBinit\fP と通信したい場合は、
制御チャネル \fB/dev/initctl\fP を使うべきである。
これに関する詳しい記述は、
\fBsysvinit\fP パッケージのソースコードを参照すること。
.PP
.\"O When \fBinit\fP is requested to change the runlevel, it sends the
.\"O warning signal \s-1\fBSIGTERM\fP\s0 to all processes that are undefined
.\"O in the new runlevel.  It then waits 5 seconds before forcibly
.\"O terminating these processes via the \s-1\fBSIGKILL\fP\s0 signal.
.\"O Note that \fBinit\fP assumes that all these processes (and their
.\"O descendants) remain in the same process group which \fBinit\fP
.\"O originally created for them.  If any process changes its process group
.\"O affiliation it will not receive these signals.  Such processes need to
.\"O be terminated separately.
\fBinit\fP は、ランレベルを変更するよう要請を受けると、
まず新たなランレベルでは定義されていない全てのプロセスに対して
警告シグナル \s-1\fBSIGTERM\fP\s0 を送る。
その後 5 秒間待機してから
\s-1\fBSIGKILL\fP\s0 シグナルを送り、それらのプロセスを強制的に終了させる。
\fBinit\fP は、
これら全てのプロセス (およびそれらの子孫) の属するプロセスグループが、
もともと \fBinit\fP が彼らのために生成したものと同じであると仮定している。
あるプロセスが自分のプロセスグループ属性を変えてしまった場合は、
上記のシグナルを受け取らない。
したがって、そのようなプロセスは別の方法で終了させる必要がある。
.\"}}}
.\"{{{  telinit
.\"O .SH TELINIT
.SH telinit
.\"O \fB/sbin/telinit\fP is linked to \fB/sbin/init\fP.  It takes a
.\"O one-character argument and signals \fBinit\fP to perform the appropriate
.\"O action.  The following arguments serve as directives to
.\"O \fBtelinit\fP:
\fB/sbin/telinit\fP は \fB/sbin/init\fP にリンクされている。
\fB/sbin/telinit\fP は一文字の引数を受け取り、
\fBinit\fP にシグナルを送って適切な動作を行なわせる。
\fBtelinit\fP への指示には、
以下に示すような引数が利用できる。
.\"O .IP "\fB0\fP,\fB1\fP,\fB2\fP,\fB3\fP,\fB4\fP,\fB5\fP or \fB6\fP"
.IP "\fB0\fP,\fB1\fP,\fB2\fP,\fB3\fP,\fB4\fP,\fB5\fP,\fB6\fP"
.\"O tell \fBinit\fP to switch to the specified run level.
指定されたランレベルに変更するよう \fBinit\fP に伝える。
.IP \fBa\fP,\fBb\fP,\fBc\fP
.\"O tell \fBinit\fP to process only those \fB/etc/inittab\fP file
.\"O entries having runlevel \fBa\fP,\fBb\fP or \fBc\fP.
\fB/etc/inittab\fP 中で、ランレベル \fBa\fP, \fBb\fP, \fBc\fP
のいずれかを含むエントリだけを実行するよう \fBinit\fP に伝える。
.\"O .IP "\fBQ\fP or \fBq\fP"
.IP "\fBQ\fP または \fBq\fP"
.\"O tell \fBinit\fP to re-examine the \fB/etc/inittab\fP file.
\fB/etc/inittab\fP ファイルを調べ直すよう \fBinit\fP に伝える。
.\"O .IP "\fBS\fP or \fBs\fP"
.IP "\fBS\fP または \fBs\fP"
.\"O tell \fBinit\fP to switch to single user mode.
シングルユーザモードに切り替えるよう \fBinit\fP に伝える。
.\"O .IP "\fBU\fP or \fBu\fP"
.IP "\fBU\fP または \fBu\fP"
.\"O tell \fBinit\fP to re-execute itself (preserving the state). No re-examining of 
.\"O \fB/etc/inittab\fP file happens. Run level should be one of \fBSs12345\fP,
.\"O otherwise request would be silently ignored.
(状態はそのままで) 自分自身を再実行するよう \fBinit\fP に伝える。
\fB/etc/inittab\fP は調べ直さない。
ランレベルは \fBSs12345\fP のいずれかでなければならない。
それ以外の場合は、この要求は黙って無視される。
.PP
.\"O \fBtelinit\fP can also tell \fBinit\fP how long it should wait
.\"O between sending processes the SIGTERM and SIGKILL signals.  The default
.\"O is 5 seconds, but this can be changed with the \fB-t sec\fP option.
\fBinit\fP がプロセスに TERM シグナルを送ってから
KILL シグナルを送るまでの時間を、\fBtelinit\fP から指示することもできる。
デフォルトでは 5 秒に設定されているが、\fB-t sec\fP オプションで変更できる。
.PP
.\"O \fBtelinit\fP can be invoked only by users with appropriate
.\"O privileges.
\fBtelinit\fP は適切な特権を持ったユーザのみが実行できる。
.PP
.\"O The \fBinit\fP binary checks if it is \fBinit\fP or \fBtelinit\fP by looking
.\"O at its \fIprocess id\fP; the real \fBinit\fP's process id is always \fB1\fP.
.\"O From this it follows that instead of calling \fBtelinit\fP one can also
.\"O just use \fBinit\fP instead as a shortcut.
\fBinit\fP のバイナリは、自分の \fIプロセスID\fP を見て、
自分が \fBinit\fP なのか \fBtelinit\fP なのかを判断する。
本物の \fBinit\fP のプロセス ID は常に \fB1\fP である。
よって、\fBtelinit\fP を起動するかわりに \fBinit\fP を起動しても構わない。
.\"}}}
.\"}}}
.\"O .SH ENVIRONMENT
.SH 環境変数
.\"O \fBInit\fP sets the following environment variables for all its children:
\fBinit\fP は子プロセスに以下のような環境変数を設定する:
.IP \fBPATH\fP
\fI/usr/local/sbin:/sbin:/bin:/usr/sbin:/usr/bin\fP
.IP \fBINIT_VERSION\fP
.\"O As the name says. Useful to determine if a script runs directly from \fBinit\fP.
名前の通り。
あるスクリプトが \fBinit\fP
により直接実行されたのかどうかを見分けるのに便利。
.IP \fBRUNLEVEL\fP
.\"O The current system runlevel.
システムの現在のランレベル。
.IP \fBPREVLEVEL\fP
.\"O The previous runlevel (useful after a runlevel switch).
直前のランレベル (ランレベルを変更した場合に便利)。
.IP \fBCONSOLE\fP
.\"O The system console. This is really inherited from the kernel; however
.\"O if it is not set \fBinit\fP will set it to \fB/dev/console\fP by default.
システムコンソール。これは実際はカーネルから継承したものである。
しかしこれが設定されていなかった場合は、
\fBinit\fP はデフォルトで \fB/dev/console\fP を設定する。
.\"O .SH BOOTFLAGS
.SH ブートフラグ
.\"O It is possible to pass a number of flags to \fBinit\fP from the
.\"O boot monitor (eg. LILO). \fBInit\fP accepts the following flags:
ブートモニタ (例えば LILO) から \fBinit\fP
に様々なフラグを渡すことが可能である。
\fBinit\fP は以下のようなフラグを受け付ける:
.TP 0.5i
.B -s, S, single
.\"O Single user mode boot. In this mode \fI/etc/inittab\fP is
.\"O examined and the bootup rc scripts are usually run before
.\"O the single user mode shell is started.
シングルユーザモードでブートする。
このモードでは \fI/etc/inittab\fP を参照する。
またシングルユーザモードのシェルが起動される前に 
ブートアップ rc スクリプトが実行される。
.\"O .PP
.TP 0.5i
.B 1-5
.\"O Runlevel to boot into.
ブート時に入るべきランレベル。
.\"O .PP
.TP 0.5i
.B -b, emergency
.\"O Boot directly into a single user shell without running any
.\"O other startup scripts.
他の起動用スクリプトは実行せず、
直接シングルユーザシェルへとブートする。
.\"O .PP
.TP 0.5i
.B -a, auto
.\"O The LILO boot loader adds the word "auto" to the command line if it
.\"O booted the kernel with the default command line (without user intervention).
.\"O If this is found \fBinit\fP sets the "AUTOBOOT" environment
.\"O variable to "yes". Note that you cannot use this for any security
.\"O measures - of course the user could specify "auto" or \-a on the
.\"O command line manually.
LILO ブートローダは、
デフォルトのコマンドラインで (ユーザの介入なしに)
カーネルを起動すると、
コマンドラインに単語 "auto" を追加する。
\fBinit\fP はこの単語を見つけると、"AUTOBOOT" 環境変数を "yes" に設定する。
ただしこの機能をセキュリティの判断には使えない。
あたりまえだが、
ユーザーは "auto" や \-a を手動でコマンドラインに追加することもできる。
.\"O .PP
.TP 0.5i
.B -z xxx
.\"O The argument to -z is ignored. You can use this to expand the command
.\"O line a bit, so that it takes some more space on the stack. \fBInit\fP
.\"O can then manipulate the command line so that \fBps\fP(1) shows
.\"O the current runlevel.
-z の引数は無視される。
これを使うとコマンドラインが少し長くなるので、
そのためにスタックを若干余分に使用するようになる。
すると \fBinit\fP にコマンドラインを操作し、
\fBps\fP(1) に現在のランレベルを表示させるようにできる。
.\"O .PP
.\"O .SH INTERFACE
.SH インターフェース
.\"O Init listens on a \fIfifo\fP in /dev, \fI/dev/initctl\fP, for messages.
.\"O \fBTelinit\fP uses this to communicate with init. The interface is not
.\"O very well documented or finished. Those interested should study the
.\"O \fIinitreq.h\fP file in the \fIsrc/\fP subdirectory of the \fBinit\fP
.\"O source code tar archive.
init はメッセージのやりとりのために、
/dev にある FIFO である \fI/dev/initctl\fP を listen している。
\fBtelinit\fP はこれを用いて init と通信する。
このインターフェースは十分に文書化されていない。
興味を持った人は、\fBinit\fP のソース tar アーカイブの
\fIsrc/\fP サブディレクトリにある
\fIinitreq.h\fP を調べてほしい。
.\"O .SH SIGNALS
.SH シグナル
.\"O Init reacts to several signals:
init はいくつかのシグナルに反応する。
.TP 0.5i
.B SIGHUP
.\"O Init looks for
.\"O .I /etc/initrunlvl 
.\"O and
.\"O .I /var/log/initrunlvl.
.\"O If one of these files exist and contain an ASCII runlevel, init switches
.\"O to the new runlevel. \fI This is for backwards compatibility only! \fP.
.\"O In the normal case (the files don't exist) init behaves like \fB telinit q\fP
.\"O was executed.
init は
.I /etc/initrunlvl 
と
.I /var/log/initrunlvl
を探す。
もしこれらのどちらかのファイルがあり、
ランレベルが ASCII コードで書かれていたら、
init はそのランレベルに切り替わる。
\fIこれは過去との互換性のためだけに存在する!\fP
通常の場合 (これらのファイルがない場合)、
init は \fBtelinit q\fP が実行されたときと同じ動作をする。
.\"O .PP
.TP 0.5i
.B SIGUSR1
.\"O On receipt of this signals, init closes and re-opens its control fifo,
.\"O \fB/dev/initctl\fP. Useful for bootscripts when /dev is remounted.
このシグナルを受け取ると、init は制御用 FIFO である
\fB/dev/initctl\fP を一旦クローズして再オープンする。
ブートスクリプトが /dev を再マウントした時に便利である。
.TP 0.5i
.B SIGINT
.\"O Normally the kernel sends this signal to init when CTRL-ALT-DEL is
.\"O pressed. It activates the \fIctrlaltdel\fP action.
通常、カーネルは CTRL-ALT-DEL が押されるとこのシグナルを init に送る。
これにより \fIctrlaltdel\fP アクションが実行される。
.TP 0.5i
.B SIGWINCH
.\"O The kernel sends this signal when the \fIKeyboardSignal\fP key is hit.
.\"O It activates the \fIkbrequest\fP action.
カーネルは \fIKeyboardSignal\fP キーが押されるとこのシグナルを送る。
これにより \fIkbrequest\fP アクションが実行される。
.\"O \"{{{  Conforming to
.\"O .SH CONFORMING TO
.SH 準拠
.\"O \fBInit\fP is compatible with the System V init. It works closely
.\"O together with the scripts in the directories
.\"O \fI/etc/init.d\fP and \fI/etc/rc{runlevel}.d\fP.
.\"O If your system uses this convention, there should be a \fIREADME\fP
.\"O file in the directory \fI/etc/init.d\fP explaining how these scripts work.
\fBinit\fP は System V の init と互換である。
\fBinit\fP は
\fI/etc/init.d\fP ディレクトリや \fI/etc/rc{runlevel}.d\fP
ディレクトリのスクリプトと密接に連係しながら動作する。
あなたのシステムがこの規則に従っているなら、
\fI/etc/init.d\fP ディレクトリに \fIREADME\fP があり、
スクリプトがどのように動作するかが説明されているはずである。
.\"}}}
.\"{{{  Files
.\"O .SH FILES
.SH ファイル
.nf
/etc/inittab
/etc/initscript
/dev/console
/etc/ioctl.save
/var/run/utmp
/var/log/wtmp
/dev/initctl
.fi
.\"}}}
.\"{{{  Warnings
.\"O .SH WARNINGS
.SH 警告
.\"O \fBInit\fP assumes that processes and descendants of processes
.\"O remain in the same process group which was originally created
.\"O for them.  If the processes change their group, \fBinit\fP can't
.\"O kill them and you may end up with two processes reading from one
.\"O terminal line.
\fBinit\fP は、
生成したプロセスとその子孫とが、
それらのために作ったプロセスグループに留まっていると仮定している。
プロセスグループが元々のものと変わっている場合は、
\fBinit\fP はそのプロセスを kill できないので、
異なる二つのプロセスが同一の端末ラインから入力を読み込む、
といった現象が起きてしまう可能性がある。
.\"}}}
.\"{{{  Diagnostics
.\"O .SH DIAGNOSTICS
.SH 返り値
.\"O If \fBinit\fP finds that it is continuously respawning an entry
.\"O more than 10 times in 2 minutes, it will assume that there is an error
.\"O in the command string, generate an error message on the system console,
.\"O and refuse to respawn this entry until either 5 minutes has elapsed or
.\"O it receives a signal.  This prevents it from eating up system resources
.\"O when someone makes a typographical error in the \fB/etc/inittab\fP file
.\"O or the program for the entry is removed.
\fBinit\fP は、あるエントリが 2 分間に
10 回以上繰り返して再生成されるのを発見すると、
コマンド文字列に誤りがあるとみなし、
システムコンソールにエラーメッセージを表示し、
5 分以上経過するかシグナルを受け取るまで、
それ以上そのエントリの再生成を拒否する。
こうすることによって、\fB/etc/inittab\fP 中に書き間違いがあったり、
そのエントリで使用するプログラムが削除されている場合に、
システム資源を使い尽くしてしまうことを防いでいる。
.\"}}}
.\"{{{  Author
.\"O .SH AUTHOR
.SH 著者
.\"O Miquel van Smoorenburg (miquels@cistron.nl), initial manual
.\"O page by Michael Haardt (u31b3hs@pool.informatik.rwth-aachen.de).
Miquel van Smoorenburg (miquels@cistron.nl)。
もとの man ページは
Michael Haardt (u31b3hs@pool.informatik.rwth-aachen.de) による。
.\"}}}
.\"{{{  See also
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR getty (1),
.BR login (1),
.BR sh (1),
.BR runlevel (8),
.BR shutdown(8),
.BR kill (1),
.BR inittab (5),
.BR initscript (5),
.BR utmp (5)
.\"}}}
