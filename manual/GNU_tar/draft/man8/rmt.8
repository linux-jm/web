.\" This file is part of GNU tar. -*- nroff -*-
.\" Copyright 2013, 2018 Free Software Foundation, Inc.
.\"
.\" GNU tar is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 3 of the License, or
.\" (at your option) any later version.
.\"
.\" GNU tar is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program.  If not, see <http://www.gnu.org/licenses/>.
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" translated for 1.34, 2022-05-12  ribbon <ribbon@users.osdn.me>
.\"
.TH RMT 8 2018/03/24 RMT "GNU TAR マニュアル"
.SH 名前
rmt \- リモートの磁気テープサーバー
.SH 書式
\fBrmt\fP
.SH 説明
\fBRmt\fP は、\fBtar\fP(1), \fBcpio\fP(1)
などのバックアップユーティリティーを利用したファイルやデバイスの処理を、リモートからアクセスする機能を提供します。 普通リモートマシンに対しては
\fBrsh\fP(1) または \fBssh\fP(1) を利用して実現します。 ログイン名を指定して別ユーザーを用いることもできます。
.PP
呼び出しを行うプログラムが \fBrmt\fP とやり取りをする際には、標準入力に対してリクエストを送信し、その結果を標準出力から読み取ります。
送信する要求は、要求を表す英字の次に (必要があれば) 引数が続き、最後に改行文字により構成されます。
追加データがある場合は、その改行文字の次に送信されます。 処理が成功すると \fBrmt\fP は以下を返します。
.PP
.in +4
\fBA\fP\fInumber\fP\fB\en\fP
.PP
上の \fInumber\fP は 10 進数のリターンコードを ASCII 表現したものです。 追加の情報はこの行の次に返されます。
エラー発生時には、以下のレスポンスが返されます。
.PP
.in +4
\fBE\fP\fIerrno\fP\fB\en\fP\fIerror\-message\fP\fB\en\fP
.PP
ここで \fIerrno\fP はシステムエラーコードを表すもので、 \fBerrno\fP(3) に説明されています。  \fIerror\-message\fP
はエラー内容を 1 行にわかりやすく示したもので、 \fBperror\fP(3) を用いて出力されています。
.PP
利用できるコマンドとレスポンスの種類については、後述するセクションにおいて説明しています。
.SH コマンド
.TP 
\fBO\fP\fIdevice\fP\fB\en\fP\fIflags\fP\fB\en\fP
指定された \fIflags\fP を使って \fIdevice\fP
をオープンします。デバイスがすでにオープンされていた場合は、一度クローズしてから新たにオープンされます。
.sp
\fB引数\fP
.RS
.TP 
\fIdevice\fP
オープンするデバイス名。
.TP 
\fIflags\fP
\fBopen\fP(2) に対するフラグ。 10 進数値、または \fBfcntl.h\fP に定義された \fBO_*\fP 定数 (先頭の \fBO_\fP
は省略される場合があります)。 またビット表現や (\fB|\fP を利用して) 以下のようにこれらを合わせた数値指定もできます。
.in +4
.EX
576
64|512
CREAT|TRUNC
.EE
.RS
さらに指定を組み合わせることもできます。 たとえば 10 進数によるモードに、そのシンボリックな表現を付け加えるような場合です。
その場合は、シンボリック表現が優先されます。
.RE
.sp
\fB返信 (reply)\fP
.RS
成功時には \fBA0\en\fP を返します。
.RE
.sp
\fB拡張\fP
.RS
BSD バージョンでは \fIflags\fP に 10 進数のみ指定可能です。
.RE 1
.TP 
\fBC\fP[\fIdevice\fP]\fB\en\fP
現在オープンしているデバイスをクロースします。
.RS
.TP 
\fB引数\fP
.br
引数はすべて無視されます。
.TP 
\fB返信 (reply)\fP
.br
成功時には \fBA0\en\fP を返します。
.RE
.TP 
\fBL\fP\fIwhence\fP\fB\en\fP\fIoffset\fP\fB\en\fP
.RS
指定されたパラメーターを使って、現在オープンしているデバイスに対して \fBlseek\fP(2) を実行します。
.TP 
\fB引数\fP
.RS
.TP 
\fIwhence\fP
オフセットをどこからにするか。 指定可能な値は以下です：
.sp
.nf
.ta 1n 20n
	0, SET, SEEK_SET	ファイル先頭からシーク
	1, CUR, SEEK_CUR	現在位置からシーク
	2, END, SEEK_END	ファイル終端からシーク
.fi
.RE
.TP 
\fB返信 (reply)\fP
.br
成功時には \fBA\fP\fIoffset\fP\fB\en\fP を返します。 \fIoffset\fP は新たなオフセット値になります。
.TP 
\fB拡張\fP
BSD バージョンは \fIwhence\fP に対して 0,1,2 のみ指定可能です。
.RE
.TP 
\fBR\fP\fIcount\fP\fB\en\fP
.br
現在のデバイスから \fIcount\fP バイト分のデータを読み込みます。
.RS
.TP 
\fB引数\fP
.RS
.TP 
\fIcount\fP
読み込みを行うバイト数。
.RE
.TP 
\fB返信 (reply)\fP
.br
成功時には以下を返します。
.sp
.in +4
\fBA\fP\fIrdcount\fP\fB\en\fP
.in
.sp
この後ろに、デバイスから読み取った \fIrdcount\fP バイト分のデータが続きます。
.RE
.TP 
\fBW\fP\fIcount\fP\fB\en\fP
現在のデバイスにデータを書き込みます。 このコマンドの後ろに、\fIcount\fP バイト分の入力データを続けます。
.RS
.TP 
\fB引数\fP
.RS
.TP 
\fIcount\fP
書き込みを行うバイト数。
.RE
.TP 
\fB返信 (reply)\fP
.br
成功時には \fBA\fP\fIwrcount\fP\fB\en\fP を返します。 ここで \fIwrcount\fP は、実際に書き込みを行ったバイト数です。
.RE
.TP 
\fBI\fP\fIopcode\fP\fB\en\fP\fIcount\fP\fB\en\fP
指定されたパラメーターを用いて \fBMTIOCOP\fP \fBioctl\fP(2) コマンドを実行します。
.RS
.TP 
\fB引数\fP
.RS
.TP 
\fIopcode\fP
\fBMTIOCOP\fP オペレーションコード。
.TP 
\fIcount\fP
mt_count
.RE
.TP 
\fB返信 (reply)\fP
.br
成功時には \fBA0\en\fP を返します。
.RE
.TP 
\fBS\en\fP
現在オープンしているデバイスのステータスを返します。 これは \fBMTIOCGET\fP \fBioctl\fP(2) を呼び出して得ています。
.RS
.TP 
\fB引数\fP
.br
なし。
.TP 
\fB返信 (reply)\fP
.br
成功時は \fBA\fP\fIcount\fP\fB\en\fP と、その後に \fIcount\fP バイト分のデータが続きます。
.RE
.SH 関連項目
\fBtar\fP(1)
.SH バグ
このユーティリティーを汎用目的のリモートファイルアクセスツールとして利用することはお勧めしません。
.SH バグ報告
バグ報告は <bug\-tar@gnu.org> までお願いします。
.SH 開発経緯
\fBrmt\fP コマンドは 4.2BSD において登場しました。 GNU \fBrmt\fP は BSD の仕様に基づいて一から書き起こされました。
.SH 著作権
Copyright \(co 2013, 2018 Free Software Foundation, Inc.
.br
.na
License GPLv3+: GNU GPL version 3 or later
<http://gnu.org/licenses/gpl.html>
.br
.ad
This is free software: you are free to change and redistribute it.  There is
NO WARRANTY, to the extent permitted by law.
.\" Local variables:
.\" eval: (add-hook 'write-file-hooks 'time-stamp)
.\" time-stamp-start: ".TH [A-Z_][A-Z0-9_.\-]* [0-9] \""
.\" time-stamp-format: "%:B %:d, %:y"
.\" time-stamp-end: "\""
.\" time-stamp-line-limit: 20
.\" end:
